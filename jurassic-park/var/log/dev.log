[2025-06-18T10:12:45.032718+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T10:12:45.042420+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T10:12:45.042497+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T10:12:45.042520+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T10:12:45.042535+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T10:12:45.042550+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T10:12:45.042563+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T10:12:45.042582+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T10:12:45.075081+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T10:12:45.083032+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"localhost","port":5432,"user":"postgres","password":null,"driverOptions":[],"defaultTableOptions":[],"dbname":"jurassic_parkVF","serverVersion":"14","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"localhost","port":5432,"user":"postgres","password":null,"driverOptions":[],"defaultTableOptions":[],"dbname":"jurassic_parkVF","serverVersion":"14","charset":"utf8"}} []
[2025-06-18T10:12:45.087468+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at "localhost" (::1), port 5432 failed: Connection refused 	Is the server running on that host and accepting TCP/IP connections? connection to server at "localhost" (127.0.0.1), port 5432 failed: Connection refused 	Is the server running on that host and accepting TCP/IP connections?" at ExceptionConverter.php line 77 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"localhost\" (::1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\nconnection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections? at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:77)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"localhost\" (::1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\nconnection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections? at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"localhost\" (::1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\nconnection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections? at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:34)"} []
[2025-06-18T10:12:45.183329+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T10:12:45.184203+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T10:15:25.513730+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T10:15:25.533860+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T10:15:25.533936+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T10:15:25.533967+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T10:15:25.533999+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T10:15:25.534020+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T10:15:25.534035+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T10:15:25.534065+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T10:15:25.577975+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T10:15:25.589383+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"localhost","port":5432,"user":"postgres","password":null,"driverOptions":[],"defaultTableOptions":[],"dbname":"jurassic_parkVF","serverVersion":"14","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"localhost","port":5432,"user":"postgres","password":null,"driverOptions":[],"defaultTableOptions":[],"dbname":"jurassic_parkVF","serverVersion":"14","charset":"utf8"}} []
[2025-06-18T10:15:25.606518+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at "localhost" (::1), port 5432 failed: Connection refused 	Is the server running on that host and accepting TCP/IP connections? connection to server at "localhost" (127.0.0.1), port 5432 failed: Connection refused 	Is the server running on that host and accepting TCP/IP connections?" at ExceptionConverter.php line 77 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"localhost\" (::1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\nconnection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections? at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:77)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"localhost\" (::1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\nconnection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections? at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"localhost\" (::1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\nconnection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections? at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:34)"} []
[2025-06-18T10:15:25.704496+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T10:15:25.705597+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T10:15:27.614436+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T10:15:27.624510+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T10:15:27.624600+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T10:15:27.624632+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T10:15:27.624657+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T10:15:27.624684+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T10:15:27.624704+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T10:15:27.624744+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T10:15:27.654825+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T10:15:27.663159+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"localhost","port":5432,"user":"postgres","password":null,"driverOptions":[],"defaultTableOptions":[],"dbname":"jurassic_parkVF","serverVersion":"14","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"localhost","port":5432,"user":"postgres","password":null,"driverOptions":[],"defaultTableOptions":[],"dbname":"jurassic_parkVF","serverVersion":"14","charset":"utf8"}} []
[2025-06-18T10:15:27.667672+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at "localhost" (::1), port 5432 failed: Connection refused 	Is the server running on that host and accepting TCP/IP connections? connection to server at "localhost" (127.0.0.1), port 5432 failed: Connection refused 	Is the server running on that host and accepting TCP/IP connections?" at ExceptionConverter.php line 77 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"localhost\" (::1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\nconnection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections? at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:77)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"localhost\" (::1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\nconnection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections? at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"localhost\" (::1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\nconnection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections? at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:34)"} []
[2025-06-18T10:15:27.762745+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T10:15:27.763560+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T10:15:39.022620+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T10:15:39.031150+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T10:15:39.031224+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T10:15:39.031255+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T10:15:39.031285+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T10:15:39.031311+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T10:15:39.031332+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T10:15:39.031361+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T10:15:39.061903+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T10:15:39.069151+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"localhost","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"14","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"localhost","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"14","charset":"utf8"}} []
[2025-06-18T10:15:39.073246+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at "localhost" (::1), port 5432 failed: Connection refused 	Is the server running on that host and accepting TCP/IP connections? connection to server at "localhost" (127.0.0.1), port 5432 failed: Connection refused 	Is the server running on that host and accepting TCP/IP connections?" at ExceptionConverter.php line 77 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"localhost\" (::1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\nconnection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections? at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:77)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"localhost\" (::1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\nconnection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections? at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"localhost\" (::1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\nconnection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections? at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:34)"} []
[2025-06-18T10:15:39.171570+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T10:15:39.172346+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T10:15:43.637122+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T10:15:43.647700+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T10:15:43.647776+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T10:15:43.647801+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T10:15:43.647817+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T10:15:43.647833+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T10:15:43.647846+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T10:15:43.647866+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T10:15:43.677426+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T10:15:43.684980+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"localhost","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"14","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"localhost","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"14","charset":"utf8"}} []
[2025-06-18T10:15:43.689490+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at "localhost" (::1), port 5432 failed: Connection refused 	Is the server running on that host and accepting TCP/IP connections? connection to server at "localhost" (127.0.0.1), port 5432 failed: Connection refused 	Is the server running on that host and accepting TCP/IP connections?" at ExceptionConverter.php line 77 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"localhost\" (::1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\nconnection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections? at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:77)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"localhost\" (::1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\nconnection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections? at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"localhost\" (::1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\nconnection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections? at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:34)"} []
[2025-06-18T10:15:43.784769+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T10:15:43.785533+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T10:16:19.198041+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T10:16:19.206384+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T10:16:19.206459+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T10:16:19.206482+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T10:16:19.206498+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T10:16:19.206514+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T10:16:19.206528+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T10:16:19.206546+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T10:16:19.233758+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T10:16:19.241287+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T10:16:19.287874+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T10:16:19.293612+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\TableNotFoundException: "An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation "hotel" does not exist LINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0                                                                ^" at ExceptionConverter.php line 71 {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableNotFoundException(code: 7): An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:71)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 42P01): SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Connection.php:71)"} []
[2025-06-18T10:16:19.362387+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T10:16:19.363141+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T10:16:19.417783+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T18:29:57.780571+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T18:29:57.801180+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T18:29:57.801279+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T18:29:57.801306+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T18:29:57.801321+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T18:29:57.801338+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T18:29:57.801352+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T18:29:57.801372+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T18:29:57.847206+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:29:57.861252+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T18:29:57.886985+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T18:29:57.895481+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\TableNotFoundException: "An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation "hotel" does not exist LINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0                                                                ^" at ExceptionConverter.php line 71 {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableNotFoundException(code: 7): An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:71)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 42P01): SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Connection.php:71)"} []
[2025-06-18T18:29:57.987350+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:29:57.988299+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T18:29:58.062018+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T18:35:34.864512+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T18:35:34.872495+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T18:35:34.872566+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T18:35:34.872609+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T18:35:34.872631+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T18:35:34.872656+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T18:35:34.872678+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T18:35:34.872705+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T18:35:34.897507+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:35:34.904637+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T18:35:34.916774+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T18:35:34.920794+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\TableNotFoundException: "An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation "hotel" does not exist LINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0                                                                ^" at ExceptionConverter.php line 71 {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableNotFoundException(code: 7): An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:71)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 42P01): SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Connection.php:71)"} []
[2025-06-18T18:35:34.987240+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:35:34.988021+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T18:35:35.027034+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T18:46:13.316137+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"}} []
[2025-06-18T18:46:13.328832+00:00] doctrine.DEBUG: Executing statement: CREATE DATABASE "ma_base" {"sql":"CREATE DATABASE \"ma_base\""} []
[2025-06-18T18:46:13.330801+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T18:46:13.331391+00:00] console.DEBUG: Command "doctrine:database:create" exited with code "1" {"command":"doctrine:database:create","code":1} []
[2025-06-18T18:47:33.680329+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T18:47:33.691050+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:47:33.696421+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-18T18:47:33.708410+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:47:33.708731+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-18T18:47:53.020406+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-06-18T18:47:53.022868+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:47:53.023367+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ma_base'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ma_base'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-06-18T18:47:53.026902+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:47:53.027326+00:00] doctrine.DEBUG: Executing query: SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-06-18T18:47:53.034661+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-06-18T18:47:53.035965+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-06-18T18:47:53.037522+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-06-18T18:47:53.039526+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-06-18T18:47:53.040326+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T18:47:53.043803+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:47:53.051187+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:47:53.058887+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-06-18T18:47:53.074766+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:47:53.076330+00:00] deprecation.INFO: User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:47:53.076765+00:00] deprecation.INFO: User Deprecated: Passing $sequence as a Sequence object to Doctrine\DBAL\Platforms\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Passing $sequence as a Sequence object to Doctrine\\DBAL\\Platforms\\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:47:53.078670+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T18:47:53.078940+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-18T18:47:53.079349+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-18T18:48:00.118161+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T18:48:00.128576+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:48:01.034801+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:48:01.037444+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-18T18:48:01.052879+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:48:01.056356+00:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version))"} []
[2025-06-18T18:48:01.069588+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-18T18:48:01.070678+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-18T18:48:01.071198+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-18T18:48:01.076760+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-06-18T18:48:01.079015+00:00] doctrine.DEBUG: Executing query: ALTER TABLE remboursement ADD billet_id INT NOT NULL {"sql":"ALTER TABLE remboursement ADD billet_id INT NOT NULL"} []
[2025-06-18T18:48:01.081318+00:00] doctrine.DEBUG: Rolling back transaction [] []
[2025-06-18T18:48:01.082511+00:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation "remboursement" does not exist" {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableNotFoundException(code: 7): An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"remboursement\" does not exist at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:71)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"remboursement\" does not exist at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 42P01): SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"remboursement\" does not exist at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Connection.php:71)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"remboursement\" does not exist"} []
[2025-06-18T18:48:01.082793+00:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "7" {"command":"doctrine:migrations:migrate","code":7} []
[2025-06-18T18:48:01.086810+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-18T18:48:01.087049+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-18T18:48:01.087136+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T18:51:13.543221+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T18:51:13.560493+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:13.563217+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-18T18:51:13.566337+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-06-18T18:51:13.566780+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-06-18T18:51:13.566904+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:13.567016+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-18T18:51:13.574442+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:13.574690+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-06-18T18:51:13.575905+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:13.576035+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-06-18T18:51:13.577081+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-06-18T18:51:13.580612+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:13.580834+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-06-18T18:51:13.581970+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16389 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16389 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-06-18T18:51:13.583726+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-18T18:51:13.585210+00:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "Cannot load migrations from "/var/www/html/migrations" because it is not a valid directory" {"exception":"[object] (Doctrine\\Migrations\\Finder\\Exception\\InvalidDirectory(code: 0): Cannot load migrations from \"/var/www/html/migrations\" because it is not a valid directory at /var/www/html/vendor/doctrine/migrations/src/Finder/Exception/InvalidDirectory.php:15)","command":"make:migration","message":"Cannot load migrations from \"/var/www/html/migrations\" because it is not a valid directory"} []
[2025-06-18T18:51:13.585435+00:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2025-06-18T18:51:13.591610+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T18:51:24.938601+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T18:51:24.949588+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:24.950893+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-18T18:51:24.953252+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-06-18T18:51:24.953675+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-06-18T18:51:24.953800+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:24.953913+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-18T18:51:24.958998+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:24.959355+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-06-18T18:51:24.960171+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:24.960347+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-06-18T18:51:24.961201+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-06-18T18:51:24.963635+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:24.963836+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-06-18T18:51:24.964935+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16389 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16389 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-06-18T18:51:24.966428+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-18T18:51:24.969622+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:24.969850+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-18T18:51:24.970590+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:24.970783+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-18T18:51:24.971644+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:24.971910+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-06-18T18:51:24.972551+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:24.972760+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-06-18T18:51:24.973495+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-06-18T18:51:24.974696+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:24.974857+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-06-18T18:51:24.975823+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16389 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16389 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-06-18T18:51:24.976217+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-18T18:51:24.978090+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-06-18T18:51:24.978536+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:24.978698+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ma_base'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ma_base'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-06-18T18:51:24.979373+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:24.979539+00:00] doctrine.DEBUG: Executing query: SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-06-18T18:51:24.981962+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-06-18T18:51:24.982311+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-06-18T18:51:24.982458+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-06-18T18:51:24.983491+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-06-18T18:51:24.984142+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-06-18T18:51:24.984686+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16389 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16389 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-06-18T18:51:24.985897+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-06-18T18:51:24.987273+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T18:51:24.991560+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:51:24.999248+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:51:25.006920+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-06-18T18:51:25.017953+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:51:25.019629+00:00] deprecation.INFO: User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:51:25.020139+00:00] deprecation.INFO: User Deprecated: Passing $sequence as a Sequence object to Doctrine\DBAL\Platforms\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Passing $sequence as a Sequence object to Doctrine\\DBAL\\Platforms\\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:51:25.022222+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T18:51:25.022456+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-18T18:51:25.022865+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-18T18:51:27.165948+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T18:51:27.176902+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:27.178346+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-18T18:51:27.180759+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-06-18T18:51:27.181268+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-06-18T18:51:27.181444+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:27.181591+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-18T18:51:27.186590+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:27.186860+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-06-18T18:51:27.187674+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:27.187843+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-06-18T18:51:27.188715+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-06-18T18:51:27.191153+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:27.191388+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-06-18T18:51:27.192450+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16389 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16389 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-06-18T18:51:27.193894+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-18T18:51:27.197820+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:27.198111+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-18T18:51:27.198868+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:27.199033+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-18T18:51:27.199811+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:27.199933+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-06-18T18:51:27.200421+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:27.200615+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-06-18T18:51:27.201400+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-06-18T18:51:27.202848+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:27.203100+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-06-18T18:51:27.204155+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16389 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16389 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-06-18T18:51:27.204576+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-18T18:51:28.018473+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-06-18T18:51:28.019975+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:28.020448+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ma_base'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ma_base'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-06-18T18:51:28.021546+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:28.021780+00:00] doctrine.DEBUG: Executing query: SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-06-18T18:51:28.026868+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-06-18T18:51:28.027392+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-06-18T18:51:28.027579+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-06-18T18:51:28.028666+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-06-18T18:51:28.029349+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-06-18T18:51:28.029909+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16389 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16389 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-06-18T18:51:28.030861+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-06-18T18:51:28.031632+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T18:51:28.034183+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:51:28.038753+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:51:28.045028+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-06-18T18:51:28.051146+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:51:28.052602+00:00] deprecation.INFO: User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:51:28.053056+00:00] deprecation.INFO: User Deprecated: Passing $sequence as a Sequence object to Doctrine\DBAL\Platforms\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Passing $sequence as a Sequence object to Doctrine\\DBAL\\Platforms\\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:51:28.054601+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T18:51:28.054815+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-18T18:51:28.055155+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-18T18:51:41.616949+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T18:51:41.627713+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:42.573013+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:42.574959+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-18T18:51:42.582185+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-06-18T18:51:42.583029+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-06-18T18:51:42.590321+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:42.590601+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-06-18T18:51:42.591515+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:42.591680+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-06-18T18:51:42.592714+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-06-18T18:51:42.596444+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:51:42.596844+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-06-18T18:51:42.598562+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16389 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16389 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-06-18T18:51:42.605480+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-18T18:51:42.606252+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-18T18:51:42.606522+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-18T18:51:42.611697+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-06-18T18:51:42.613266+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE acheter_produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE acheter_produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:51:42.615968+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE biome_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE biome_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:51:42.616430+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:51:42.616858+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE "commande_id_seq" INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE \"commande_id_seq\" INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:51:42.617046+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE date_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE date_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:51:42.617276+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE dinosaure_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE dinosaure_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:51:42.617467+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE enclos_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE enclos_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:51:42.617649+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE format_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE format_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:51:42.617844+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE format_chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE format_chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:51:42.618103+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE horaire_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE horaire_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:51:42.618298+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:51:42.618476+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE jour_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE jour_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:51:42.618660+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE louer_hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE louer_hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:51:42.618840+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE payer_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE payer_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:51:42.619031+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:51:42.619226+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE remboursement_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE remboursement_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:51:42.619417+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE restaurant_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE restaurant_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:51:42.619594+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE "user_id_seq" INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE \"user_id_seq\" INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:51:42.619773+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE acheter_produit (id INT NOT NULL, commande_id INT DEFAULT NULL, produit_id INT DEFAULT NULL, quantite INT NOT NULL, prix DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE acheter_produit (id INT NOT NULL, commande_id INT DEFAULT NULL, produit_id INT DEFAULT NULL, quantite INT NOT NULL, prix DOUBLE PRECISION NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:51:42.621835+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_A704F21082EA2E54 ON acheter_produit (commande_id) {"sql":"    CREATE INDEX IDX_A704F21082EA2E54 ON acheter_produit (commande_id)"} []
[2025-06-18T18:51:42.623793+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_A704F210F347EFB ON acheter_produit (produit_id) {"sql":"    CREATE INDEX IDX_A704F210F347EFB ON acheter_produit (produit_id)"} []
[2025-06-18T18:51:42.625075+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE biome (id INT NOT NULL, libelle_biome VARCHAR(255) NOT NULL, description_biome VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE biome (id INT NOT NULL, libelle_biome VARCHAR(255) NOT NULL, description_biome VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:51:42.628268+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE chambre (id INT NOT NULL, hotel_id INT NOT NULL, format_chambre_id INT NOT NULL, numero_chambre VARCHAR(255) NOT NULL, etage_chambre VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE chambre (id INT NOT NULL, hotel_id INT NOT NULL, format_chambre_id INT NOT NULL, numero_chambre VARCHAR(255) NOT NULL, etage_chambre VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:51:42.632598+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C509E4FF3243BB18 ON chambre (hotel_id) {"sql":"    CREATE INDEX IDX_C509E4FF3243BB18 ON chambre (hotel_id)"} []
[2025-06-18T18:51:42.634170+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C509E4FF589AE8D9 ON chambre (format_chambre_id) {"sql":"    CREATE INDEX IDX_C509E4FF589AE8D9 ON chambre (format_chambre_id)"} []
[2025-06-18T18:51:42.635806+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE "commande" (id INT NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, status VARCHAR(255) NOT NULL, total DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE \"commande\" (id INT NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, status VARCHAR(255) NOT NULL, total DOUBLE PRECISION NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:51:42.637609+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN "commande".created_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN \"commande\".created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-18T18:51:42.638321+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE date (id INT NOT NULL, date TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE date (id INT NOT NULL, date TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:51:42.639946+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE dinosaure (id INT NOT NULL, enclos_id INT NOT NULL, image_dinosaure VARCHAR(255) NOT NULL, libelle_dinosaure VARCHAR(255) NOT NULL, regime_dinosaure VARCHAR(255) NOT NULL, ere_dinosaure VARCHAR(255) NOT NULL, description_dinosaure VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE dinosaure (id INT NOT NULL, enclos_id INT NOT NULL, image_dinosaure VARCHAR(255) NOT NULL, libelle_dinosaure VARCHAR(255) NOT NULL, regime_dinosaure VARCHAR(255) NOT NULL, ere_dinosaure VARCHAR(255) NOT NULL, description_dinosaure VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:51:42.643531+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_450ADBC0B1C0859 ON dinosaure (enclos_id) {"sql":"    CREATE INDEX IDX_450ADBC0B1C0859 ON dinosaure (enclos_id)"} []
[2025-06-18T18:51:42.645118+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE enclos (id INT NOT NULL, biome_id INT NOT NULL, libelle_enclos VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE enclos (id INT NOT NULL, biome_id INT NOT NULL, libelle_enclos VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:51:42.646838+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_8CCECB21E43A64F9 ON enclos (biome_id) {"sql":"    CREATE INDEX IDX_8CCECB21E43A64F9 ON enclos (biome_id)"} []
[2025-06-18T18:51:42.648384+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE format_billet (id INT NOT NULL, libelle_billet VARCHAR(255) NOT NULL, image_billet VARCHAR(255) NOT NULL, description_billet VARCHAR(1000) NOT NULL, prix_billet INT NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE format_billet (id INT NOT NULL, libelle_billet VARCHAR(255) NOT NULL, image_billet VARCHAR(255) NOT NULL, description_billet VARCHAR(1000) NOT NULL, prix_billet INT NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:51:42.652347+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE format_chambre (id INT NOT NULL, libelle_format_chambre VARCHAR(255) NOT NULL, prix_format_chambre INT NOT NULL, description_format_billet VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE format_chambre (id INT NOT NULL, libelle_format_chambre VARCHAR(255) NOT NULL, prix_format_chambre INT NOT NULL, description_format_billet VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:51:42.657178+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE horaire (id INT NOT NULL, ouverture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fermeture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE horaire (id INT NOT NULL, ouverture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fermeture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:51:42.659861+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE hotel (id INT NOT NULL, biome_id INT DEFAULT NULL, libelle_hotel VARCHAR(255) NOT NULL, image_hotel VARCHAR(255) NOT NULL, description_hotel VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE hotel (id INT NOT NULL, biome_id INT DEFAULT NULL, libelle_hotel VARCHAR(255) NOT NULL, image_hotel VARCHAR(255) NOT NULL, description_hotel VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:51:42.664819+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_3535ED9E43A64F9 ON hotel (biome_id) {"sql":"    CREATE INDEX IDX_3535ED9E43A64F9 ON hotel (biome_id)"} []
[2025-06-18T18:51:42.666833+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE jour (id INT NOT NULL, libelle_jour VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE jour (id INT NOT NULL, libelle_jour VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:51:42.668857+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE louer_hotel (id INT NOT NULL, user_id INT NOT NULL, chambre_id INT NOT NULL, date_id INT NOT NULL, note INT NOT NULL, debut_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE louer_hotel (id INT NOT NULL, user_id INT NOT NULL, chambre_id INT NOT NULL, date_id INT NOT NULL, note INT NOT NULL, debut_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:51:42.670992+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_70C4104FA76ED395 ON louer_hotel (user_id) {"sql":"    CREATE INDEX IDX_70C4104FA76ED395 ON louer_hotel (user_id)"} []
[2025-06-18T18:51:42.673007+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_70C4104F9B177F54 ON louer_hotel (chambre_id) {"sql":"    CREATE INDEX IDX_70C4104F9B177F54 ON louer_hotel (chambre_id)"} []
[2025-06-18T18:51:42.674710+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_70C4104FB897366B ON louer_hotel (date_id) {"sql":"    CREATE INDEX IDX_70C4104FB897366B ON louer_hotel (date_id)"} []
[2025-06-18T18:51:42.676382+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE ouverture_restaurant (restaurant_id INT NOT NULL, jour_id INT NOT NULL, horaire_id INT NOT NULL, PRIMARY KEY(restaurant_id, jour_id, horaire_id)) {"sql":"    CREATE TABLE ouverture_restaurant (restaurant_id INT NOT NULL, jour_id INT NOT NULL, horaire_id INT NOT NULL, PRIMARY KEY(restaurant_id, jour_id, horaire_id))"} []
[2025-06-18T18:51:42.678568+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_697FD193B1E7706E ON ouverture_restaurant (restaurant_id) {"sql":"    CREATE INDEX IDX_697FD193B1E7706E ON ouverture_restaurant (restaurant_id)"} []
[2025-06-18T18:51:42.680664+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_697FD193220C6AD0 ON ouverture_restaurant (jour_id) {"sql":"    CREATE INDEX IDX_697FD193220C6AD0 ON ouverture_restaurant (jour_id)"} []
[2025-06-18T18:51:42.682984+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_697FD19358C54515 ON ouverture_restaurant (horaire_id) {"sql":"    CREATE INDEX IDX_697FD19358C54515 ON ouverture_restaurant (horaire_id)"} []
[2025-06-18T18:51:42.685137+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE payer_billet (id INT NOT NULL, user_id INT NOT NULL, billet_id INT NOT NULL, date_id INT NOT NULL, debut_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE payer_billet (id INT NOT NULL, user_id INT NOT NULL, billet_id INT NOT NULL, date_id INT NOT NULL, debut_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:51:42.689176+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_4744803CA76ED395 ON payer_billet (user_id) {"sql":"    CREATE INDEX IDX_4744803CA76ED395 ON payer_billet (user_id)"} []
[2025-06-18T18:51:42.691196+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_4744803C44973C78 ON payer_billet (billet_id) {"sql":"    CREATE INDEX IDX_4744803C44973C78 ON payer_billet (billet_id)"} []
[2025-06-18T18:51:42.693433+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_4744803CB897366B ON payer_billet (date_id) {"sql":"    CREATE INDEX IDX_4744803CB897366B ON payer_billet (date_id)"} []
[2025-06-18T18:51:42.695531+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE produit (id INT NOT NULL, libelle_produit VARCHAR(255) NOT NULL, image_produit VARCHAR(255) NOT NULL, description_produit VARCHAR(1000) NOT NULL, stock INT NOT NULL, disponible_achat BOOLEAN NOT NULL, prix_produit DOUBLE PRECISION NOT NULL, slug VARCHAR(255) DEFAULT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE produit (id INT NOT NULL, libelle_produit VARCHAR(255) NOT NULL, image_produit VARCHAR(255) NOT NULL, description_produit VARCHAR(1000) NOT NULL, stock INT NOT NULL, disponible_achat BOOLEAN NOT NULL, prix_produit DOUBLE PRECISION NOT NULL, slug VARCHAR(255) DEFAULT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:51:42.701056+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN produit.created_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN produit.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-18T18:51:42.701474+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE remboursement (id INT NOT NULL, client_id INT NOT NULL, billet_id INT NOT NULL, date_demande TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, statut VARCHAR(255) NOT NULL, motif VARCHAR(1500) NOT NULL, montant DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE remboursement (id INT NOT NULL, client_id INT NOT NULL, billet_id INT NOT NULL, date_demande TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, statut VARCHAR(255) NOT NULL, motif VARCHAR(1500) NOT NULL, montant DOUBLE PRECISION NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:51:42.707082+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C0C0D9EF19EB6921 ON remboursement (client_id) {"sql":"    CREATE INDEX IDX_C0C0D9EF19EB6921 ON remboursement (client_id)"} []
[2025-06-18T18:51:42.710250+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C0C0D9EF44973C78 ON remboursement (billet_id) {"sql":"    CREATE INDEX IDX_C0C0D9EF44973C78 ON remboursement (billet_id)"} []
[2025-06-18T18:51:42.713387+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE remboursement_billet (remboursement_id INT NOT NULL, payer_billet_id INT NOT NULL, PRIMARY KEY(remboursement_id, payer_billet_id)) {"sql":"    CREATE TABLE remboursement_billet (remboursement_id INT NOT NULL, payer_billet_id INT NOT NULL, PRIMARY KEY(remboursement_id, payer_billet_id))"} []
[2025-06-18T18:51:42.716863+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_B9B130B1F61EE8B ON remboursement_billet (remboursement_id) {"sql":"    CREATE INDEX IDX_B9B130B1F61EE8B ON remboursement_billet (remboursement_id)"} []
[2025-06-18T18:51:42.719351+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_B9B130B1102C441 ON remboursement_billet (payer_billet_id) {"sql":"    CREATE INDEX IDX_B9B130B1102C441 ON remboursement_billet (payer_billet_id)"} []
[2025-06-18T18:51:42.721739+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE remboursement_hotel (remboursement_id INT NOT NULL, louer_hotel_id INT NOT NULL, PRIMARY KEY(remboursement_id, louer_hotel_id)) {"sql":"    CREATE TABLE remboursement_hotel (remboursement_id INT NOT NULL, louer_hotel_id INT NOT NULL, PRIMARY KEY(remboursement_id, louer_hotel_id))"} []
[2025-06-18T18:51:42.724573+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_D7E7E7CF61EE8B ON remboursement_hotel (remboursement_id) {"sql":"    CREATE INDEX IDX_D7E7E7CF61EE8B ON remboursement_hotel (remboursement_id)"} []
[2025-06-18T18:51:42.726833+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_D7E7E7CCB4C1B45 ON remboursement_hotel (louer_hotel_id) {"sql":"    CREATE INDEX IDX_D7E7E7CCB4C1B45 ON remboursement_hotel (louer_hotel_id)"} []
[2025-06-18T18:51:42.729418+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE reserver_restaurant (client_id INT NOT NULL, restaurant_id INT NOT NULL, date_id INT NOT NULL, date_reservation TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, present BOOLEAN NOT NULL, nb_personne INT NOT NULL, PRIMARY KEY(client_id, restaurant_id, date_id)) {"sql":"    CREATE TABLE reserver_restaurant (client_id INT NOT NULL, restaurant_id INT NOT NULL, date_id INT NOT NULL, date_reservation TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, present BOOLEAN NOT NULL, nb_personne INT NOT NULL, PRIMARY KEY(client_id, restaurant_id, date_id))"} []
[2025-06-18T18:51:42.732585+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_25F6B43A19EB6921 ON reserver_restaurant (client_id) {"sql":"    CREATE INDEX IDX_25F6B43A19EB6921 ON reserver_restaurant (client_id)"} []
[2025-06-18T18:51:42.735150+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_25F6B43AB1E7706E ON reserver_restaurant (restaurant_id) {"sql":"    CREATE INDEX IDX_25F6B43AB1E7706E ON reserver_restaurant (restaurant_id)"} []
[2025-06-18T18:51:42.737077+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_25F6B43AB897366B ON reserver_restaurant (date_id) {"sql":"    CREATE INDEX IDX_25F6B43AB897366B ON reserver_restaurant (date_id)"} []
[2025-06-18T18:51:42.739566+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE restaurant (id INT NOT NULL, biome_id INT NOT NULL, libelle_restaurant VARCHAR(255) NOT NULL, image_restaurant VARCHAR(255) NOT NULL, nb_table INT NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE restaurant (id INT NOT NULL, biome_id INT NOT NULL, libelle_restaurant VARCHAR(255) NOT NULL, image_restaurant VARCHAR(255) NOT NULL, nb_table INT NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:51:42.745386+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_EB95123FE43A64F9 ON restaurant (biome_id) {"sql":"    CREATE INDEX IDX_EB95123FE43A64F9 ON restaurant (biome_id)"} []
[2025-06-18T18:51:42.747952+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE "user" (id INT NOT NULL, email VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, numero_telephone VARCHAR(255) NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, roles JSON NOT NULL, is_verified BOOLEAN NOT NULL, reset_token VARCHAR(255) DEFAULT NULL, reset_token_expiration TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, type VARCHAR(255) NOT NULL, adresse_postal VARCHAR(255) DEFAULT NULL, code_postal INT DEFAULT NULL, otp VARCHAR(6) DEFAULT NULL, admin_level INT DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE \"user\" (id INT NOT NULL, email VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, numero_telephone VARCHAR(255) NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, roles JSON NOT NULL, is_verified BOOLEAN NOT NULL, reset_token VARCHAR(255) DEFAULT NULL, reset_token_expiration TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, type VARCHAR(255) NOT NULL, adresse_postal VARCHAR(255) DEFAULT NULL, code_postal INT DEFAULT NULL, otp VARCHAR(6) DEFAULT NULL, admin_level INT DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:51:42.753083+00:00] doctrine.DEBUG: Executing query:     CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON "user" (email) {"sql":"    CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON \"user\" (email)"} []
[2025-06-18T18:51:42.755580+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:51:42.761547+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name) {"sql":"    CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name)"} []
[2025-06-18T18:51:42.763997+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at) {"sql":"    CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at)"} []
[2025-06-18T18:51:42.765977+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at) {"sql":"    CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at)"} []
[2025-06-18T18:51:42.767951+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-18T18:51:42.768262+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-18T18:51:42.768512+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-18T18:51:42.768736+00:00] doctrine.DEBUG: Executing query:     CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$         BEGIN             PERFORM pg_notify('messenger_messages', NEW.queue_name::text);             RETURN NEW;         END;     $$ LANGUAGE plpgsql; {"sql":"    CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$\n        BEGIN\n            PERFORM pg_notify('messenger_messages', NEW.queue_name::text);\n            RETURN NEW;\n        END;\n    $$ LANGUAGE plpgsql;"} []
[2025-06-18T18:51:42.774384+00:00] doctrine.DEBUG: Executing query:     DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages; {"sql":"    DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages;"} []
[2025-06-18T18:51:42.774922+00:00] doctrine.DEBUG: Executing query:     CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages(); {"sql":"    CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages();"} []
[2025-06-18T18:51:42.775771+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F21082EA2E54 FOREIGN KEY (commande_id) REFERENCES "commande" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F21082EA2E54 FOREIGN KEY (commande_id) REFERENCES \"commande\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.777154+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F210F347EFB FOREIGN KEY (produit_id) REFERENCES produit (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F210F347EFB FOREIGN KEY (produit_id) REFERENCES produit (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.778146+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF3243BB18 FOREIGN KEY (hotel_id) REFERENCES hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF3243BB18 FOREIGN KEY (hotel_id) REFERENCES hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.779091+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF589AE8D9 FOREIGN KEY (format_chambre_id) REFERENCES format_chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF589AE8D9 FOREIGN KEY (format_chambre_id) REFERENCES format_chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.779798+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE dinosaure ADD CONSTRAINT FK_450ADBC0B1C0859 FOREIGN KEY (enclos_id) REFERENCES enclos (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE dinosaure ADD CONSTRAINT FK_450ADBC0B1C0859 FOREIGN KEY (enclos_id) REFERENCES enclos (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.780615+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE enclos ADD CONSTRAINT FK_8CCECB21E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE enclos ADD CONSTRAINT FK_8CCECB21E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.781363+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE hotel ADD CONSTRAINT FK_3535ED9E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE hotel ADD CONSTRAINT FK_3535ED9E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.782253+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FA76ED395 FOREIGN KEY (user_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FA76ED395 FOREIGN KEY (user_id) REFERENCES \"user\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.783384+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104F9B177F54 FOREIGN KEY (chambre_id) REFERENCES chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104F9B177F54 FOREIGN KEY (chambre_id) REFERENCES chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.784041+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.785090+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193B1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193B1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.785933+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193220C6AD0 FOREIGN KEY (jour_id) REFERENCES jour (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193220C6AD0 FOREIGN KEY (jour_id) REFERENCES jour (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.786644+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD19358C54515 FOREIGN KEY (horaire_id) REFERENCES horaire (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD19358C54515 FOREIGN KEY (horaire_id) REFERENCES horaire (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.787488+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CA76ED395 FOREIGN KEY (user_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CA76ED395 FOREIGN KEY (user_id) REFERENCES \"user\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.788215+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803C44973C78 FOREIGN KEY (billet_id) REFERENCES format_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803C44973C78 FOREIGN KEY (billet_id) REFERENCES format_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.788735+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.789138+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF19EB6921 FOREIGN KEY (client_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF19EB6921 FOREIGN KEY (client_id) REFERENCES \"user\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.789798+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF44973C78 FOREIGN KEY (billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF44973C78 FOREIGN KEY (billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.790291+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1F61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1F61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.790904+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1102C441 FOREIGN KEY (payer_billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1102C441 FOREIGN KEY (payer_billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.791559+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CF61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CF61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.792313+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CCB4C1B45 FOREIGN KEY (louer_hotel_id) REFERENCES louer_hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CCB4C1B45 FOREIGN KEY (louer_hotel_id) REFERENCES louer_hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.792894+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43A19EB6921 FOREIGN KEY (client_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43A19EB6921 FOREIGN KEY (client_id) REFERENCES \"user\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.793541+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.794203+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.794811+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE restaurant ADD CONSTRAINT FK_EB95123FE43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE restaurant ADD CONSTRAINT FK_EB95123FE43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:51:42.795882+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250618185124","2":"2025-06-18 18:51:42","3":183}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250618185124","2":"2025-06-18 18:51:42","3":183},"types":{"1":2,"2":2,"3":1}} []
[2025-06-18T18:51:42.796602+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-06-18T18:51:42.798729+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-06-18T18:51:42.799105+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE acheter_produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE acheter_produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:51:42.802028+00:00] doctrine.DEBUG: Rolling back transaction [] []
[2025-06-18T18:51:42.802905+00:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing a query: SQLSTATE[42P07]: Duplicate table: 7 ERROR:  relation "acheter_produit_id_seq" already exists" {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableExistsException(code: 7): An exception occurred while executing a query: SQLSTATE[42P07]: Duplicate table: 7 ERROR:  relation \"acheter_produit_id_seq\" already exists at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:74)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[42P07]: Duplicate table: 7 ERROR:  relation \"acheter_produit_id_seq\" already exists at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 42P07): SQLSTATE[42P07]: Duplicate table: 7 ERROR:  relation \"acheter_produit_id_seq\" already exists at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Connection.php:71)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing a query: SQLSTATE[42P07]: Duplicate table: 7 ERROR:  relation \"acheter_produit_id_seq\" already exists"} []
[2025-06-18T18:51:42.803312+00:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "7" {"command":"doctrine:migrations:migrate","code":7} []
[2025-06-18T18:51:42.807380+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T18:54:41.017711+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"}} []
[2025-06-18T18:54:41.028557+00:00] doctrine.DEBUG: Executing statement: DROP DATABASE "ma_base" {"sql":"DROP DATABASE \"ma_base\""} []
[2025-06-18T18:54:41.048763+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T18:54:41.163306+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"}} []
[2025-06-18T18:54:41.174043+00:00] doctrine.DEBUG: Executing statement: CREATE DATABASE "ma_base" {"sql":"CREATE DATABASE \"ma_base\""} []
[2025-06-18T18:54:41.236659+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T18:54:41.356614+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T18:54:41.368853+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:54:42.346650+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:54:42.348420+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-18T18:54:42.366503+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:54:42.369370+00:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version))"} []
[2025-06-18T18:54:42.377473+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-18T18:54:42.378261+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-18T18:54:42.378537+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-18T18:54:42.380548+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-06-18T18:54:42.381584+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE acheter_produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE acheter_produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:54:42.382186+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE biome_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE biome_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:54:42.382535+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:54:42.382807+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE "commande_id_seq" INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE \"commande_id_seq\" INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:54:42.383006+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE date_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE date_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:54:42.383211+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE dinosaure_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE dinosaure_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:54:42.383405+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE enclos_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE enclos_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:54:42.383594+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE format_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE format_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:54:42.383791+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE format_chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE format_chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:54:42.384038+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE horaire_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE horaire_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:54:42.384243+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:54:42.384430+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE jour_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE jour_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:54:42.384618+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE louer_hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE louer_hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:54:42.384794+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE payer_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE payer_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:54:42.384988+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:54:42.385191+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE remboursement_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE remboursement_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:54:42.385377+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE restaurant_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE restaurant_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:54:42.385571+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE "user_id_seq" INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE \"user_id_seq\" INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:54:42.385790+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE acheter_produit (id INT NOT NULL, commande_id INT DEFAULT NULL, produit_id INT DEFAULT NULL, quantite INT NOT NULL, prix DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE acheter_produit (id INT NOT NULL, commande_id INT DEFAULT NULL, produit_id INT DEFAULT NULL, quantite INT NOT NULL, prix DOUBLE PRECISION NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:54:42.388376+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_A704F21082EA2E54 ON acheter_produit (commande_id) {"sql":"    CREATE INDEX IDX_A704F21082EA2E54 ON acheter_produit (commande_id)"} []
[2025-06-18T18:54:42.391193+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_A704F210F347EFB ON acheter_produit (produit_id) {"sql":"    CREATE INDEX IDX_A704F210F347EFB ON acheter_produit (produit_id)"} []
[2025-06-18T18:54:42.393670+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE biome (id INT NOT NULL, libelle_biome VARCHAR(255) NOT NULL, description_biome VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE biome (id INT NOT NULL, libelle_biome VARCHAR(255) NOT NULL, description_biome VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:54:42.398106+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE chambre (id INT NOT NULL, hotel_id INT NOT NULL, format_chambre_id INT NOT NULL, numero_chambre VARCHAR(255) NOT NULL, etage_chambre VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE chambre (id INT NOT NULL, hotel_id INT NOT NULL, format_chambre_id INT NOT NULL, numero_chambre VARCHAR(255) NOT NULL, etage_chambre VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:54:42.401930+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C509E4FF3243BB18 ON chambre (hotel_id) {"sql":"    CREATE INDEX IDX_C509E4FF3243BB18 ON chambre (hotel_id)"} []
[2025-06-18T18:54:42.404025+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C509E4FF589AE8D9 ON chambre (format_chambre_id) {"sql":"    CREATE INDEX IDX_C509E4FF589AE8D9 ON chambre (format_chambre_id)"} []
[2025-06-18T18:54:42.406043+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE "commande" (id INT NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, status VARCHAR(255) NOT NULL, total DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE \"commande\" (id INT NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, status VARCHAR(255) NOT NULL, total DOUBLE PRECISION NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:54:42.408689+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN "commande".created_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN \"commande\".created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-18T18:54:42.409043+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE date (id INT NOT NULL, date TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE date (id INT NOT NULL, date TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:54:42.410983+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE dinosaure (id INT NOT NULL, enclos_id INT NOT NULL, image_dinosaure VARCHAR(255) NOT NULL, libelle_dinosaure VARCHAR(255) NOT NULL, regime_dinosaure VARCHAR(255) NOT NULL, ere_dinosaure VARCHAR(255) NOT NULL, description_dinosaure VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE dinosaure (id INT NOT NULL, enclos_id INT NOT NULL, image_dinosaure VARCHAR(255) NOT NULL, libelle_dinosaure VARCHAR(255) NOT NULL, regime_dinosaure VARCHAR(255) NOT NULL, ere_dinosaure VARCHAR(255) NOT NULL, description_dinosaure VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:54:42.415319+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_450ADBC0B1C0859 ON dinosaure (enclos_id) {"sql":"    CREATE INDEX IDX_450ADBC0B1C0859 ON dinosaure (enclos_id)"} []
[2025-06-18T18:54:42.417433+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE enclos (id INT NOT NULL, biome_id INT NOT NULL, libelle_enclos VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE enclos (id INT NOT NULL, biome_id INT NOT NULL, libelle_enclos VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:54:42.419950+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_8CCECB21E43A64F9 ON enclos (biome_id) {"sql":"    CREATE INDEX IDX_8CCECB21E43A64F9 ON enclos (biome_id)"} []
[2025-06-18T18:54:42.421980+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE format_billet (id INT NOT NULL, libelle_billet VARCHAR(255) NOT NULL, image_billet VARCHAR(255) NOT NULL, description_billet VARCHAR(1000) NOT NULL, prix_billet INT NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE format_billet (id INT NOT NULL, libelle_billet VARCHAR(255) NOT NULL, image_billet VARCHAR(255) NOT NULL, description_billet VARCHAR(1000) NOT NULL, prix_billet INT NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:54:42.425954+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE format_chambre (id INT NOT NULL, libelle_format_chambre VARCHAR(255) NOT NULL, prix_format_chambre INT NOT NULL, description_format_billet VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE format_chambre (id INT NOT NULL, libelle_format_chambre VARCHAR(255) NOT NULL, prix_format_chambre INT NOT NULL, description_format_billet VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:54:42.430875+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE horaire (id INT NOT NULL, ouverture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fermeture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE horaire (id INT NOT NULL, ouverture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fermeture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:54:42.433454+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE hotel (id INT NOT NULL, biome_id INT DEFAULT NULL, libelle_hotel VARCHAR(255) NOT NULL, image_hotel VARCHAR(255) NOT NULL, description_hotel VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE hotel (id INT NOT NULL, biome_id INT DEFAULT NULL, libelle_hotel VARCHAR(255) NOT NULL, image_hotel VARCHAR(255) NOT NULL, description_hotel VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:54:42.438711+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_3535ED9E43A64F9 ON hotel (biome_id) {"sql":"    CREATE INDEX IDX_3535ED9E43A64F9 ON hotel (biome_id)"} []
[2025-06-18T18:54:42.440987+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE jour (id INT NOT NULL, libelle_jour VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE jour (id INT NOT NULL, libelle_jour VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:54:42.443718+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE louer_hotel (id INT NOT NULL, user_id INT NOT NULL, chambre_id INT NOT NULL, date_id INT NOT NULL, note INT NOT NULL, debut_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE louer_hotel (id INT NOT NULL, user_id INT NOT NULL, chambre_id INT NOT NULL, date_id INT NOT NULL, note INT NOT NULL, debut_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:54:42.447478+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_70C4104FA76ED395 ON louer_hotel (user_id) {"sql":"    CREATE INDEX IDX_70C4104FA76ED395 ON louer_hotel (user_id)"} []
[2025-06-18T18:54:42.449572+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_70C4104F9B177F54 ON louer_hotel (chambre_id) {"sql":"    CREATE INDEX IDX_70C4104F9B177F54 ON louer_hotel (chambre_id)"} []
[2025-06-18T18:54:42.451996+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_70C4104FB897366B ON louer_hotel (date_id) {"sql":"    CREATE INDEX IDX_70C4104FB897366B ON louer_hotel (date_id)"} []
[2025-06-18T18:54:42.454446+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE ouverture_restaurant (restaurant_id INT NOT NULL, jour_id INT NOT NULL, horaire_id INT NOT NULL, PRIMARY KEY(restaurant_id, jour_id, horaire_id)) {"sql":"    CREATE TABLE ouverture_restaurant (restaurant_id INT NOT NULL, jour_id INT NOT NULL, horaire_id INT NOT NULL, PRIMARY KEY(restaurant_id, jour_id, horaire_id))"} []
[2025-06-18T18:54:42.457391+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_697FD193B1E7706E ON ouverture_restaurant (restaurant_id) {"sql":"    CREATE INDEX IDX_697FD193B1E7706E ON ouverture_restaurant (restaurant_id)"} []
[2025-06-18T18:54:42.459877+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_697FD193220C6AD0 ON ouverture_restaurant (jour_id) {"sql":"    CREATE INDEX IDX_697FD193220C6AD0 ON ouverture_restaurant (jour_id)"} []
[2025-06-18T18:54:42.461925+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_697FD19358C54515 ON ouverture_restaurant (horaire_id) {"sql":"    CREATE INDEX IDX_697FD19358C54515 ON ouverture_restaurant (horaire_id)"} []
[2025-06-18T18:54:42.464337+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE payer_billet (id INT NOT NULL, user_id INT NOT NULL, billet_id INT NOT NULL, date_id INT NOT NULL, debut_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE payer_billet (id INT NOT NULL, user_id INT NOT NULL, billet_id INT NOT NULL, date_id INT NOT NULL, debut_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:54:42.469690+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_4744803CA76ED395 ON payer_billet (user_id) {"sql":"    CREATE INDEX IDX_4744803CA76ED395 ON payer_billet (user_id)"} []
[2025-06-18T18:54:42.472137+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_4744803C44973C78 ON payer_billet (billet_id) {"sql":"    CREATE INDEX IDX_4744803C44973C78 ON payer_billet (billet_id)"} []
[2025-06-18T18:54:42.474542+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_4744803CB897366B ON payer_billet (date_id) {"sql":"    CREATE INDEX IDX_4744803CB897366B ON payer_billet (date_id)"} []
[2025-06-18T18:54:42.476957+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE produit (id INT NOT NULL, libelle_produit VARCHAR(255) NOT NULL, image_produit VARCHAR(255) NOT NULL, description_produit VARCHAR(1000) NOT NULL, stock INT NOT NULL, disponible_achat BOOLEAN NOT NULL, prix_produit DOUBLE PRECISION NOT NULL, slug VARCHAR(255) DEFAULT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE produit (id INT NOT NULL, libelle_produit VARCHAR(255) NOT NULL, image_produit VARCHAR(255) NOT NULL, description_produit VARCHAR(1000) NOT NULL, stock INT NOT NULL, disponible_achat BOOLEAN NOT NULL, prix_produit DOUBLE PRECISION NOT NULL, slug VARCHAR(255) DEFAULT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:54:42.482058+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN produit.created_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN produit.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-18T18:54:42.482535+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE remboursement (id INT NOT NULL, client_id INT NOT NULL, billet_id INT NOT NULL, date_demande TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, statut VARCHAR(255) NOT NULL, motif VARCHAR(1500) NOT NULL, montant DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE remboursement (id INT NOT NULL, client_id INT NOT NULL, billet_id INT NOT NULL, date_demande TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, statut VARCHAR(255) NOT NULL, motif VARCHAR(1500) NOT NULL, montant DOUBLE PRECISION NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:54:42.487554+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C0C0D9EF19EB6921 ON remboursement (client_id) {"sql":"    CREATE INDEX IDX_C0C0D9EF19EB6921 ON remboursement (client_id)"} []
[2025-06-18T18:54:42.490030+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C0C0D9EF44973C78 ON remboursement (billet_id) {"sql":"    CREATE INDEX IDX_C0C0D9EF44973C78 ON remboursement (billet_id)"} []
[2025-06-18T18:54:42.492517+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE remboursement_billet (remboursement_id INT NOT NULL, payer_billet_id INT NOT NULL, PRIMARY KEY(remboursement_id, payer_billet_id)) {"sql":"    CREATE TABLE remboursement_billet (remboursement_id INT NOT NULL, payer_billet_id INT NOT NULL, PRIMARY KEY(remboursement_id, payer_billet_id))"} []
[2025-06-18T18:54:42.495775+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_B9B130B1F61EE8B ON remboursement_billet (remboursement_id) {"sql":"    CREATE INDEX IDX_B9B130B1F61EE8B ON remboursement_billet (remboursement_id)"} []
[2025-06-18T18:54:42.497944+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_B9B130B1102C441 ON remboursement_billet (payer_billet_id) {"sql":"    CREATE INDEX IDX_B9B130B1102C441 ON remboursement_billet (payer_billet_id)"} []
[2025-06-18T18:54:42.500171+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE remboursement_hotel (remboursement_id INT NOT NULL, louer_hotel_id INT NOT NULL, PRIMARY KEY(remboursement_id, louer_hotel_id)) {"sql":"    CREATE TABLE remboursement_hotel (remboursement_id INT NOT NULL, louer_hotel_id INT NOT NULL, PRIMARY KEY(remboursement_id, louer_hotel_id))"} []
[2025-06-18T18:54:42.502902+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_D7E7E7CF61EE8B ON remboursement_hotel (remboursement_id) {"sql":"    CREATE INDEX IDX_D7E7E7CF61EE8B ON remboursement_hotel (remboursement_id)"} []
[2025-06-18T18:54:42.505273+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_D7E7E7CCB4C1B45 ON remboursement_hotel (louer_hotel_id) {"sql":"    CREATE INDEX IDX_D7E7E7CCB4C1B45 ON remboursement_hotel (louer_hotel_id)"} []
[2025-06-18T18:54:42.508272+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE reserver_restaurant (client_id INT NOT NULL, restaurant_id INT NOT NULL, date_id INT NOT NULL, date_reservation TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, present BOOLEAN NOT NULL, nb_personne INT NOT NULL, PRIMARY KEY(client_id, restaurant_id, date_id)) {"sql":"    CREATE TABLE reserver_restaurant (client_id INT NOT NULL, restaurant_id INT NOT NULL, date_id INT NOT NULL, date_reservation TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, present BOOLEAN NOT NULL, nb_personne INT NOT NULL, PRIMARY KEY(client_id, restaurant_id, date_id))"} []
[2025-06-18T18:54:42.511478+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_25F6B43A19EB6921 ON reserver_restaurant (client_id) {"sql":"    CREATE INDEX IDX_25F6B43A19EB6921 ON reserver_restaurant (client_id)"} []
[2025-06-18T18:54:42.514269+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_25F6B43AB1E7706E ON reserver_restaurant (restaurant_id) {"sql":"    CREATE INDEX IDX_25F6B43AB1E7706E ON reserver_restaurant (restaurant_id)"} []
[2025-06-18T18:54:42.517278+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_25F6B43AB897366B ON reserver_restaurant (date_id) {"sql":"    CREATE INDEX IDX_25F6B43AB897366B ON reserver_restaurant (date_id)"} []
[2025-06-18T18:54:42.519732+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE restaurant (id INT NOT NULL, biome_id INT NOT NULL, libelle_restaurant VARCHAR(255) NOT NULL, image_restaurant VARCHAR(255) NOT NULL, nb_table INT NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE restaurant (id INT NOT NULL, biome_id INT NOT NULL, libelle_restaurant VARCHAR(255) NOT NULL, image_restaurant VARCHAR(255) NOT NULL, nb_table INT NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:54:42.525027+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_EB95123FE43A64F9 ON restaurant (biome_id) {"sql":"    CREATE INDEX IDX_EB95123FE43A64F9 ON restaurant (biome_id)"} []
[2025-06-18T18:54:42.527458+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE "user" (id INT NOT NULL, email VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, numero_telephone VARCHAR(255) NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, roles JSON NOT NULL, is_verified BOOLEAN NOT NULL, reset_token VARCHAR(255) DEFAULT NULL, reset_token_expiration TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, type VARCHAR(255) NOT NULL, adresse_postal VARCHAR(255) DEFAULT NULL, code_postal INT DEFAULT NULL, otp VARCHAR(6) DEFAULT NULL, admin_level INT DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE \"user\" (id INT NOT NULL, email VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, numero_telephone VARCHAR(255) NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, roles JSON NOT NULL, is_verified BOOLEAN NOT NULL, reset_token VARCHAR(255) DEFAULT NULL, reset_token_expiration TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, type VARCHAR(255) NOT NULL, adresse_postal VARCHAR(255) DEFAULT NULL, code_postal INT DEFAULT NULL, otp VARCHAR(6) DEFAULT NULL, admin_level INT DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:54:42.532529+00:00] doctrine.DEBUG: Executing query:     CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON "user" (email) {"sql":"    CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON \"user\" (email)"} []
[2025-06-18T18:54:42.534995+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:54:42.540817+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name) {"sql":"    CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name)"} []
[2025-06-18T18:54:42.543451+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at) {"sql":"    CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at)"} []
[2025-06-18T18:54:42.546399+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at) {"sql":"    CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at)"} []
[2025-06-18T18:54:42.549344+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-18T18:54:42.549761+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-18T18:54:42.550045+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-18T18:54:42.550422+00:00] doctrine.DEBUG: Executing query:     CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$         BEGIN             PERFORM pg_notify('messenger_messages', NEW.queue_name::text);             RETURN NEW;         END;     $$ LANGUAGE plpgsql; {"sql":"    CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$\n        BEGIN\n            PERFORM pg_notify('messenger_messages', NEW.queue_name::text);\n            RETURN NEW;\n        END;\n    $$ LANGUAGE plpgsql;"} []
[2025-06-18T18:54:42.552196+00:00] doctrine.DEBUG: Executing query:     DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages; {"sql":"    DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages;"} []
[2025-06-18T18:54:42.552426+00:00] doctrine.DEBUG: Executing query:     CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages(); {"sql":"    CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages();"} []
[2025-06-18T18:54:42.552999+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F21082EA2E54 FOREIGN KEY (commande_id) REFERENCES "commande" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F21082EA2E54 FOREIGN KEY (commande_id) REFERENCES \"commande\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.554236+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F210F347EFB FOREIGN KEY (produit_id) REFERENCES produit (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F210F347EFB FOREIGN KEY (produit_id) REFERENCES produit (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.555156+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF3243BB18 FOREIGN KEY (hotel_id) REFERENCES hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF3243BB18 FOREIGN KEY (hotel_id) REFERENCES hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.555967+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF589AE8D9 FOREIGN KEY (format_chambre_id) REFERENCES format_chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF589AE8D9 FOREIGN KEY (format_chambre_id) REFERENCES format_chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.556797+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE dinosaure ADD CONSTRAINT FK_450ADBC0B1C0859 FOREIGN KEY (enclos_id) REFERENCES enclos (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE dinosaure ADD CONSTRAINT FK_450ADBC0B1C0859 FOREIGN KEY (enclos_id) REFERENCES enclos (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.557713+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE enclos ADD CONSTRAINT FK_8CCECB21E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE enclos ADD CONSTRAINT FK_8CCECB21E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.558511+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE hotel ADD CONSTRAINT FK_3535ED9E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE hotel ADD CONSTRAINT FK_3535ED9E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.559188+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FA76ED395 FOREIGN KEY (user_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FA76ED395 FOREIGN KEY (user_id) REFERENCES \"user\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.560086+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104F9B177F54 FOREIGN KEY (chambre_id) REFERENCES chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104F9B177F54 FOREIGN KEY (chambre_id) REFERENCES chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.560753+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.561523+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193B1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193B1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.562279+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193220C6AD0 FOREIGN KEY (jour_id) REFERENCES jour (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193220C6AD0 FOREIGN KEY (jour_id) REFERENCES jour (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.563216+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD19358C54515 FOREIGN KEY (horaire_id) REFERENCES horaire (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD19358C54515 FOREIGN KEY (horaire_id) REFERENCES horaire (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.564121+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CA76ED395 FOREIGN KEY (user_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CA76ED395 FOREIGN KEY (user_id) REFERENCES \"user\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.565007+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803C44973C78 FOREIGN KEY (billet_id) REFERENCES format_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803C44973C78 FOREIGN KEY (billet_id) REFERENCES format_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.565728+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.566306+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF19EB6921 FOREIGN KEY (client_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF19EB6921 FOREIGN KEY (client_id) REFERENCES \"user\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.566912+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF44973C78 FOREIGN KEY (billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF44973C78 FOREIGN KEY (billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.567419+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1F61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1F61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.567911+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1102C441 FOREIGN KEY (payer_billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1102C441 FOREIGN KEY (payer_billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.568401+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CF61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CF61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.568991+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CCB4C1B45 FOREIGN KEY (louer_hotel_id) REFERENCES louer_hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CCB4C1B45 FOREIGN KEY (louer_hotel_id) REFERENCES louer_hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.569428+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43A19EB6921 FOREIGN KEY (client_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43A19EB6921 FOREIGN KEY (client_id) REFERENCES \"user\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.570087+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.570504+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.570838+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE restaurant ADD CONSTRAINT FK_EB95123FE43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE restaurant ADD CONSTRAINT FK_EB95123FE43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:54:42.571472+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250618185124","2":"2025-06-18 18:54:42","3":190}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250618185124","2":"2025-06-18 18:54:42","3":190},"types":{"1":2,"2":2,"3":1}} []
[2025-06-18T18:54:42.571996+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-06-18T18:54:42.573272+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-06-18T18:54:42.573592+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE acheter_produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE acheter_produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:54:42.574706+00:00] doctrine.DEBUG: Rolling back transaction [] []
[2025-06-18T18:54:42.575687+00:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing a query: SQLSTATE[42P07]: Duplicate table: 7 ERROR:  relation "acheter_produit_id_seq" already exists" {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableExistsException(code: 7): An exception occurred while executing a query: SQLSTATE[42P07]: Duplicate table: 7 ERROR:  relation \"acheter_produit_id_seq\" already exists at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:74)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[42P07]: Duplicate table: 7 ERROR:  relation \"acheter_produit_id_seq\" already exists at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 42P07): SQLSTATE[42P07]: Duplicate table: 7 ERROR:  relation \"acheter_produit_id_seq\" already exists at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Connection.php:71)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing a query: SQLSTATE[42P07]: Duplicate table: 7 ERROR:  relation \"acheter_produit_id_seq\" already exists"} []
[2025-06-18T18:54:42.576157+00:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "7" {"command":"doctrine:migrations:migrate","code":7} []
[2025-06-18T18:54:42.580825+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-18T18:54:42.581327+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-18T18:54:42.581523+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T18:57:17.391035+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"}} []
[2025-06-18T18:57:17.401927+00:00] doctrine.DEBUG: Executing statement: DROP DATABASE "ma_base" {"sql":"DROP DATABASE \"ma_base\""} []
[2025-06-18T18:57:22.416632+00:00] console.DEBUG: Command "doctrine:database:drop --force" exited with code "1" {"command":"doctrine:database:drop --force","code":1} []
[2025-06-18T18:57:22.416915+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T18:57:44.538800+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"}} []
[2025-06-18T18:57:44.549213+00:00] doctrine.DEBUG: Executing statement: DROP DATABASE "ma_base" {"sql":"DROP DATABASE \"ma_base\""} []
[2025-06-18T18:57:44.601502+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T18:57:54.374333+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"}} []
[2025-06-18T18:57:54.385216+00:00] doctrine.DEBUG: Executing statement: CREATE DATABASE "ma_base" {"sql":"CREATE DATABASE \"ma_base\""} []
[2025-06-18T18:57:54.413441+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T18:58:00.988139+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T18:58:01.001125+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:58:01.002443+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-18T18:58:01.005662+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:58:01.005909+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-18T18:58:01.007454+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-06-18T18:58:01.007942+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:58:01.008087+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ma_base'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ma_base'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-06-18T18:58:01.008858+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:58:01.009006+00:00] doctrine.DEBUG: Executing query: SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-06-18T18:58:01.012242+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-06-18T18:58:01.013348+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-06-18T18:58:01.014166+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-06-18T18:58:01.015477+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-06-18T18:58:01.016494+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T18:58:01.018784+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:58:01.023373+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:58:01.029693+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-06-18T18:58:01.040374+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:58:01.041788+00:00] deprecation.INFO: User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:58:01.042202+00:00] deprecation.INFO: User Deprecated: Passing $sequence as a Sequence object to Doctrine\DBAL\Platforms\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Passing $sequence as a Sequence object to Doctrine\\DBAL\\Platforms\\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:58:01.043704+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T18:58:01.043866+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-18T18:58:01.044222+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-18T18:58:03.642368+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T18:58:03.653410+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:58:04.669871+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T18:58:04.671468+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-18T18:58:04.682600+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T18:58:04.685108+00:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version))"} []
[2025-06-18T18:58:04.692683+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-18T18:58:04.693490+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-18T18:58:04.693803+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-18T18:58:04.696966+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-06-18T18:58:04.699107+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE acheter_produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE acheter_produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:58:04.700006+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE biome_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE biome_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:58:04.700781+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:58:04.701398+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE "commande_id_seq" INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE \"commande_id_seq\" INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:58:04.701963+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE date_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE date_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:58:04.702433+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE dinosaure_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE dinosaure_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:58:04.702761+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE enclos_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE enclos_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:58:04.702976+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE format_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE format_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:58:04.703301+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE format_chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE format_chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:58:04.703762+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE horaire_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE horaire_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:58:04.704012+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:58:04.704307+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE jour_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE jour_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:58:04.704615+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE louer_hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE louer_hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:58:04.704824+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE payer_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE payer_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:58:04.705031+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:58:04.705231+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE remboursement_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE remboursement_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:58:04.705413+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE restaurant_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE restaurant_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:58:04.705589+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE "user_id_seq" INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE \"user_id_seq\" INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T18:58:04.705771+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE acheter_produit (id INT NOT NULL, commande_id INT DEFAULT NULL, produit_id INT DEFAULT NULL, quantite INT NOT NULL, prix DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE acheter_produit (id INT NOT NULL, commande_id INT DEFAULT NULL, produit_id INT DEFAULT NULL, quantite INT NOT NULL, prix DOUBLE PRECISION NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:58:04.707882+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_A704F21082EA2E54 ON acheter_produit (commande_id) {"sql":"    CREATE INDEX IDX_A704F21082EA2E54 ON acheter_produit (commande_id)"} []
[2025-06-18T18:58:04.710320+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_A704F210F347EFB ON acheter_produit (produit_id) {"sql":"    CREATE INDEX IDX_A704F210F347EFB ON acheter_produit (produit_id)"} []
[2025-06-18T18:58:04.712246+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE biome (id INT NOT NULL, libelle_biome VARCHAR(255) NOT NULL, description_biome VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE biome (id INT NOT NULL, libelle_biome VARCHAR(255) NOT NULL, description_biome VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:58:04.716383+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE chambre (id INT NOT NULL, hotel_id INT NOT NULL, format_chambre_id INT NOT NULL, numero_chambre VARCHAR(255) NOT NULL, etage_chambre VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE chambre (id INT NOT NULL, hotel_id INT NOT NULL, format_chambre_id INT NOT NULL, numero_chambre VARCHAR(255) NOT NULL, etage_chambre VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:58:04.719981+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C509E4FF3243BB18 ON chambre (hotel_id) {"sql":"    CREATE INDEX IDX_C509E4FF3243BB18 ON chambre (hotel_id)"} []
[2025-06-18T18:58:04.721891+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C509E4FF589AE8D9 ON chambre (format_chambre_id) {"sql":"    CREATE INDEX IDX_C509E4FF589AE8D9 ON chambre (format_chambre_id)"} []
[2025-06-18T18:58:04.724150+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE "commande" (id INT NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, status VARCHAR(255) NOT NULL, total DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE \"commande\" (id INT NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, status VARCHAR(255) NOT NULL, total DOUBLE PRECISION NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:58:04.725938+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN "commande".created_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN \"commande\".created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-18T18:58:04.726210+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE date (id INT NOT NULL, date TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE date (id INT NOT NULL, date TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:58:04.728054+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE dinosaure (id INT NOT NULL, enclos_id INT NOT NULL, image_dinosaure VARCHAR(255) NOT NULL, libelle_dinosaure VARCHAR(255) NOT NULL, regime_dinosaure VARCHAR(255) NOT NULL, ere_dinosaure VARCHAR(255) NOT NULL, description_dinosaure VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE dinosaure (id INT NOT NULL, enclos_id INT NOT NULL, image_dinosaure VARCHAR(255) NOT NULL, libelle_dinosaure VARCHAR(255) NOT NULL, regime_dinosaure VARCHAR(255) NOT NULL, ere_dinosaure VARCHAR(255) NOT NULL, description_dinosaure VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:58:04.731331+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_450ADBC0B1C0859 ON dinosaure (enclos_id) {"sql":"    CREATE INDEX IDX_450ADBC0B1C0859 ON dinosaure (enclos_id)"} []
[2025-06-18T18:58:04.733387+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE enclos (id INT NOT NULL, biome_id INT NOT NULL, libelle_enclos VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE enclos (id INT NOT NULL, biome_id INT NOT NULL, libelle_enclos VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:58:04.735868+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_8CCECB21E43A64F9 ON enclos (biome_id) {"sql":"    CREATE INDEX IDX_8CCECB21E43A64F9 ON enclos (biome_id)"} []
[2025-06-18T18:58:04.737619+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE format_billet (id INT NOT NULL, libelle_billet VARCHAR(255) NOT NULL, image_billet VARCHAR(255) NOT NULL, description_billet VARCHAR(1000) NOT NULL, prix_billet INT NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE format_billet (id INT NOT NULL, libelle_billet VARCHAR(255) NOT NULL, image_billet VARCHAR(255) NOT NULL, description_billet VARCHAR(1000) NOT NULL, prix_billet INT NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:58:04.742655+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE format_chambre (id INT NOT NULL, libelle_format_chambre VARCHAR(255) NOT NULL, prix_format_chambre INT NOT NULL, description_format_billet VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE format_chambre (id INT NOT NULL, libelle_format_chambre VARCHAR(255) NOT NULL, prix_format_chambre INT NOT NULL, description_format_billet VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:58:04.748770+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE horaire (id INT NOT NULL, ouverture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fermeture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE horaire (id INT NOT NULL, ouverture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fermeture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:58:04.750862+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE hotel (id INT NOT NULL, biome_id INT DEFAULT NULL, libelle_hotel VARCHAR(255) NOT NULL, image_hotel VARCHAR(255) NOT NULL, description_hotel VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE hotel (id INT NOT NULL, biome_id INT DEFAULT NULL, libelle_hotel VARCHAR(255) NOT NULL, image_hotel VARCHAR(255) NOT NULL, description_hotel VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:58:04.756051+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_3535ED9E43A64F9 ON hotel (biome_id) {"sql":"    CREATE INDEX IDX_3535ED9E43A64F9 ON hotel (biome_id)"} []
[2025-06-18T18:58:04.758613+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE jour (id INT NOT NULL, libelle_jour VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE jour (id INT NOT NULL, libelle_jour VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:58:04.761095+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE louer_hotel (id INT NOT NULL, user_id INT NOT NULL, chambre_id INT NOT NULL, date_id INT NOT NULL, note INT NOT NULL, debut_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE louer_hotel (id INT NOT NULL, user_id INT NOT NULL, chambre_id INT NOT NULL, date_id INT NOT NULL, note INT NOT NULL, debut_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:58:04.763250+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_70C4104FA76ED395 ON louer_hotel (user_id) {"sql":"    CREATE INDEX IDX_70C4104FA76ED395 ON louer_hotel (user_id)"} []
[2025-06-18T18:58:04.765311+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_70C4104F9B177F54 ON louer_hotel (chambre_id) {"sql":"    CREATE INDEX IDX_70C4104F9B177F54 ON louer_hotel (chambre_id)"} []
[2025-06-18T18:58:04.767430+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_70C4104FB897366B ON louer_hotel (date_id) {"sql":"    CREATE INDEX IDX_70C4104FB897366B ON louer_hotel (date_id)"} []
[2025-06-18T18:58:04.769917+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE ouverture_restaurant (restaurant_id INT NOT NULL, jour_id INT NOT NULL, horaire_id INT NOT NULL, PRIMARY KEY(restaurant_id, jour_id, horaire_id)) {"sql":"    CREATE TABLE ouverture_restaurant (restaurant_id INT NOT NULL, jour_id INT NOT NULL, horaire_id INT NOT NULL, PRIMARY KEY(restaurant_id, jour_id, horaire_id))"} []
[2025-06-18T18:58:04.771882+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_697FD193B1E7706E ON ouverture_restaurant (restaurant_id) {"sql":"    CREATE INDEX IDX_697FD193B1E7706E ON ouverture_restaurant (restaurant_id)"} []
[2025-06-18T18:58:04.774019+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_697FD193220C6AD0 ON ouverture_restaurant (jour_id) {"sql":"    CREATE INDEX IDX_697FD193220C6AD0 ON ouverture_restaurant (jour_id)"} []
[2025-06-18T18:58:04.776012+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_697FD19358C54515 ON ouverture_restaurant (horaire_id) {"sql":"    CREATE INDEX IDX_697FD19358C54515 ON ouverture_restaurant (horaire_id)"} []
[2025-06-18T18:58:04.777849+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE payer_billet (id INT NOT NULL, user_id INT NOT NULL, billet_id INT NOT NULL, date_id INT NOT NULL, debut_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE payer_billet (id INT NOT NULL, user_id INT NOT NULL, billet_id INT NOT NULL, date_id INT NOT NULL, debut_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:58:04.782705+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_4744803CA76ED395 ON payer_billet (user_id) {"sql":"    CREATE INDEX IDX_4744803CA76ED395 ON payer_billet (user_id)"} []
[2025-06-18T18:58:04.785362+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_4744803C44973C78 ON payer_billet (billet_id) {"sql":"    CREATE INDEX IDX_4744803C44973C78 ON payer_billet (billet_id)"} []
[2025-06-18T18:58:04.788179+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_4744803CB897366B ON payer_billet (date_id) {"sql":"    CREATE INDEX IDX_4744803CB897366B ON payer_billet (date_id)"} []
[2025-06-18T18:58:04.790417+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE produit (id INT NOT NULL, libelle_produit VARCHAR(255) NOT NULL, image_produit VARCHAR(255) NOT NULL, description_produit VARCHAR(1000) NOT NULL, stock INT NOT NULL, disponible_achat BOOLEAN NOT NULL, prix_produit DOUBLE PRECISION NOT NULL, slug VARCHAR(255) DEFAULT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE produit (id INT NOT NULL, libelle_produit VARCHAR(255) NOT NULL, image_produit VARCHAR(255) NOT NULL, description_produit VARCHAR(1000) NOT NULL, stock INT NOT NULL, disponible_achat BOOLEAN NOT NULL, prix_produit DOUBLE PRECISION NOT NULL, slug VARCHAR(255) DEFAULT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:58:04.795480+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN produit.created_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN produit.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-18T18:58:04.795776+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE remboursement (id INT NOT NULL, client_id INT NOT NULL, billet_id INT NOT NULL, date_demande TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, statut VARCHAR(255) NOT NULL, motif VARCHAR(1500) NOT NULL, montant DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE remboursement (id INT NOT NULL, client_id INT NOT NULL, billet_id INT NOT NULL, date_demande TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, statut VARCHAR(255) NOT NULL, motif VARCHAR(1500) NOT NULL, montant DOUBLE PRECISION NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:58:04.801108+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C0C0D9EF19EB6921 ON remboursement (client_id) {"sql":"    CREATE INDEX IDX_C0C0D9EF19EB6921 ON remboursement (client_id)"} []
[2025-06-18T18:58:04.803836+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C0C0D9EF44973C78 ON remboursement (billet_id) {"sql":"    CREATE INDEX IDX_C0C0D9EF44973C78 ON remboursement (billet_id)"} []
[2025-06-18T18:58:04.806273+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE remboursement_billet (remboursement_id INT NOT NULL, payer_billet_id INT NOT NULL, PRIMARY KEY(remboursement_id, payer_billet_id)) {"sql":"    CREATE TABLE remboursement_billet (remboursement_id INT NOT NULL, payer_billet_id INT NOT NULL, PRIMARY KEY(remboursement_id, payer_billet_id))"} []
[2025-06-18T18:58:04.808711+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_B9B130B1F61EE8B ON remboursement_billet (remboursement_id) {"sql":"    CREATE INDEX IDX_B9B130B1F61EE8B ON remboursement_billet (remboursement_id)"} []
[2025-06-18T18:58:04.811038+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_B9B130B1102C441 ON remboursement_billet (payer_billet_id) {"sql":"    CREATE INDEX IDX_B9B130B1102C441 ON remboursement_billet (payer_billet_id)"} []
[2025-06-18T18:58:04.813379+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE remboursement_hotel (remboursement_id INT NOT NULL, louer_hotel_id INT NOT NULL, PRIMARY KEY(remboursement_id, louer_hotel_id)) {"sql":"    CREATE TABLE remboursement_hotel (remboursement_id INT NOT NULL, louer_hotel_id INT NOT NULL, PRIMARY KEY(remboursement_id, louer_hotel_id))"} []
[2025-06-18T18:58:04.816366+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_D7E7E7CF61EE8B ON remboursement_hotel (remboursement_id) {"sql":"    CREATE INDEX IDX_D7E7E7CF61EE8B ON remboursement_hotel (remboursement_id)"} []
[2025-06-18T18:58:04.818935+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_D7E7E7CCB4C1B45 ON remboursement_hotel (louer_hotel_id) {"sql":"    CREATE INDEX IDX_D7E7E7CCB4C1B45 ON remboursement_hotel (louer_hotel_id)"} []
[2025-06-18T18:58:04.821087+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE reserver_restaurant (client_id INT NOT NULL, restaurant_id INT NOT NULL, date_id INT NOT NULL, date_reservation TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, present BOOLEAN NOT NULL, nb_personne INT NOT NULL, PRIMARY KEY(client_id, restaurant_id, date_id)) {"sql":"    CREATE TABLE reserver_restaurant (client_id INT NOT NULL, restaurant_id INT NOT NULL, date_id INT NOT NULL, date_reservation TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, present BOOLEAN NOT NULL, nb_personne INT NOT NULL, PRIMARY KEY(client_id, restaurant_id, date_id))"} []
[2025-06-18T18:58:04.823855+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_25F6B43A19EB6921 ON reserver_restaurant (client_id) {"sql":"    CREATE INDEX IDX_25F6B43A19EB6921 ON reserver_restaurant (client_id)"} []
[2025-06-18T18:58:04.825730+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_25F6B43AB1E7706E ON reserver_restaurant (restaurant_id) {"sql":"    CREATE INDEX IDX_25F6B43AB1E7706E ON reserver_restaurant (restaurant_id)"} []
[2025-06-18T18:58:04.828347+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_25F6B43AB897366B ON reserver_restaurant (date_id) {"sql":"    CREATE INDEX IDX_25F6B43AB897366B ON reserver_restaurant (date_id)"} []
[2025-06-18T18:58:04.830899+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE restaurant (id INT NOT NULL, biome_id INT NOT NULL, libelle_restaurant VARCHAR(255) NOT NULL, image_restaurant VARCHAR(255) NOT NULL, nb_table INT NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE restaurant (id INT NOT NULL, biome_id INT NOT NULL, libelle_restaurant VARCHAR(255) NOT NULL, image_restaurant VARCHAR(255) NOT NULL, nb_table INT NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:58:04.835880+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_EB95123FE43A64F9 ON restaurant (biome_id) {"sql":"    CREATE INDEX IDX_EB95123FE43A64F9 ON restaurant (biome_id)"} []
[2025-06-18T18:58:04.838340+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE "user" (id INT NOT NULL, email VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, numero_telephone VARCHAR(255) NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, roles JSON NOT NULL, is_verified BOOLEAN NOT NULL, reset_token VARCHAR(255) DEFAULT NULL, reset_token_expiration TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, type VARCHAR(255) NOT NULL, adresse_postal VARCHAR(255) DEFAULT NULL, code_postal INT DEFAULT NULL, otp VARCHAR(6) DEFAULT NULL, admin_level INT DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE \"user\" (id INT NOT NULL, email VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, numero_telephone VARCHAR(255) NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, roles JSON NOT NULL, is_verified BOOLEAN NOT NULL, reset_token VARCHAR(255) DEFAULT NULL, reset_token_expiration TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, type VARCHAR(255) NOT NULL, adresse_postal VARCHAR(255) DEFAULT NULL, code_postal INT DEFAULT NULL, otp VARCHAR(6) DEFAULT NULL, admin_level INT DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:58:04.843567+00:00] doctrine.DEBUG: Executing query:     CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON "user" (email) {"sql":"    CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON \"user\" (email)"} []
[2025-06-18T18:58:04.845849+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-06-18T18:58:04.850814+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name) {"sql":"    CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name)"} []
[2025-06-18T18:58:04.853285+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at) {"sql":"    CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at)"} []
[2025-06-18T18:58:04.855781+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at) {"sql":"    CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at)"} []
[2025-06-18T18:58:04.857982+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-18T18:58:04.858284+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-18T18:58:04.858509+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-18T18:58:04.858698+00:00] doctrine.DEBUG: Executing query:     CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$         BEGIN             PERFORM pg_notify('messenger_messages', NEW.queue_name::text);             RETURN NEW;         END;     $$ LANGUAGE plpgsql; {"sql":"    CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$\n        BEGIN\n            PERFORM pg_notify('messenger_messages', NEW.queue_name::text);\n            RETURN NEW;\n        END;\n    $$ LANGUAGE plpgsql;"} []
[2025-06-18T18:58:04.860556+00:00] doctrine.DEBUG: Executing query:     DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages; {"sql":"    DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages;"} []
[2025-06-18T18:58:04.860816+00:00] doctrine.DEBUG: Executing query:     CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages(); {"sql":"    CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages();"} []
[2025-06-18T18:58:04.861415+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F21082EA2E54 FOREIGN KEY (commande_id) REFERENCES "commande" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F21082EA2E54 FOREIGN KEY (commande_id) REFERENCES \"commande\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.862561+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F210F347EFB FOREIGN KEY (produit_id) REFERENCES produit (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F210F347EFB FOREIGN KEY (produit_id) REFERENCES produit (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.863427+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF3243BB18 FOREIGN KEY (hotel_id) REFERENCES hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF3243BB18 FOREIGN KEY (hotel_id) REFERENCES hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.864221+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF589AE8D9 FOREIGN KEY (format_chambre_id) REFERENCES format_chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF589AE8D9 FOREIGN KEY (format_chambre_id) REFERENCES format_chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.864918+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE dinosaure ADD CONSTRAINT FK_450ADBC0B1C0859 FOREIGN KEY (enclos_id) REFERENCES enclos (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE dinosaure ADD CONSTRAINT FK_450ADBC0B1C0859 FOREIGN KEY (enclos_id) REFERENCES enclos (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.865681+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE enclos ADD CONSTRAINT FK_8CCECB21E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE enclos ADD CONSTRAINT FK_8CCECB21E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.866237+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE hotel ADD CONSTRAINT FK_3535ED9E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE hotel ADD CONSTRAINT FK_3535ED9E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.866697+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FA76ED395 FOREIGN KEY (user_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FA76ED395 FOREIGN KEY (user_id) REFERENCES \"user\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.867384+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104F9B177F54 FOREIGN KEY (chambre_id) REFERENCES chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104F9B177F54 FOREIGN KEY (chambre_id) REFERENCES chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.867905+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.868540+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193B1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193B1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.869105+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193220C6AD0 FOREIGN KEY (jour_id) REFERENCES jour (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193220C6AD0 FOREIGN KEY (jour_id) REFERENCES jour (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.869573+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD19358C54515 FOREIGN KEY (horaire_id) REFERENCES horaire (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD19358C54515 FOREIGN KEY (horaire_id) REFERENCES horaire (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.870154+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CA76ED395 FOREIGN KEY (user_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CA76ED395 FOREIGN KEY (user_id) REFERENCES \"user\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.870680+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803C44973C78 FOREIGN KEY (billet_id) REFERENCES format_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803C44973C78 FOREIGN KEY (billet_id) REFERENCES format_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.871153+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.871538+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF19EB6921 FOREIGN KEY (client_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF19EB6921 FOREIGN KEY (client_id) REFERENCES \"user\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.872071+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF44973C78 FOREIGN KEY (billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF44973C78 FOREIGN KEY (billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.872465+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1F61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1F61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.872910+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1102C441 FOREIGN KEY (payer_billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1102C441 FOREIGN KEY (payer_billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.873341+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CF61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CF61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.873866+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CCB4C1B45 FOREIGN KEY (louer_hotel_id) REFERENCES louer_hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CCB4C1B45 FOREIGN KEY (louer_hotel_id) REFERENCES louer_hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.874272+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43A19EB6921 FOREIGN KEY (client_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43A19EB6921 FOREIGN KEY (client_id) REFERENCES \"user\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.874769+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.875232+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.875637+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE restaurant ADD CONSTRAINT FK_EB95123FE43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE restaurant ADD CONSTRAINT FK_EB95123FE43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T18:58:04.876267+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250618185801","2":"2025-06-18 18:58:04","3":179}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250618185801","2":"2025-06-18 18:58:04","3":179},"types":{"1":2,"2":2,"3":1}} []
[2025-06-18T18:58:04.876737+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-06-18T18:58:04.887267+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-18T18:58:04.887787+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-18T18:58:04.887909+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T19:00:09.289159+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T19:00:09.306728+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T19:00:12.917412+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-06-18T19:00:12.923798+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by PayerBillet.php:10, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by PayerBillet.php:10, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T19:00:12.939313+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T19:00:12.952942+00:00] doctrine.DEBUG: Executing statement: DELETE FROM dinosaure {"sql":"DELETE FROM dinosaure"} []
[2025-06-18T19:00:12.953968+00:00] doctrine.DEBUG: Executing statement: DELETE FROM enclos {"sql":"DELETE FROM enclos"} []
[2025-06-18T19:00:12.954503+00:00] doctrine.DEBUG: Executing statement: DELETE FROM remboursement_hotel {"sql":"DELETE FROM remboursement_hotel"} []
[2025-06-18T19:00:12.954908+00:00] doctrine.DEBUG: Executing statement: DELETE FROM louer_hotel {"sql":"DELETE FROM louer_hotel"} []
[2025-06-18T19:00:12.955430+00:00] doctrine.DEBUG: Executing statement: DELETE FROM chambre {"sql":"DELETE FROM chambre"} []
[2025-06-18T19:00:12.955827+00:00] doctrine.DEBUG: Executing statement: DELETE FROM hotel {"sql":"DELETE FROM hotel"} []
[2025-06-18T19:00:12.956242+00:00] doctrine.DEBUG: Executing statement: DELETE FROM reserver_restaurant {"sql":"DELETE FROM reserver_restaurant"} []
[2025-06-18T19:00:12.956720+00:00] doctrine.DEBUG: Executing statement: DELETE FROM ouverture_restaurant {"sql":"DELETE FROM ouverture_restaurant"} []
[2025-06-18T19:00:12.957146+00:00] doctrine.DEBUG: Executing statement: DELETE FROM restaurant {"sql":"DELETE FROM restaurant"} []
[2025-06-18T19:00:12.957517+00:00] doctrine.DEBUG: Executing statement: DELETE FROM biome {"sql":"DELETE FROM biome"} []
[2025-06-18T19:00:12.957879+00:00] doctrine.DEBUG: Executing statement: DELETE FROM format_chambre {"sql":"DELETE FROM format_chambre"} []
[2025-06-18T19:00:12.958188+00:00] doctrine.DEBUG: Executing statement: DELETE FROM remboursement_billet {"sql":"DELETE FROM remboursement_billet"} []
[2025-06-18T19:00:12.958513+00:00] doctrine.DEBUG: Executing statement: DELETE FROM remboursement {"sql":"DELETE FROM remboursement"} []
[2025-06-18T19:00:12.958821+00:00] doctrine.DEBUG: Executing statement: DELETE FROM payer_billet {"sql":"DELETE FROM payer_billet"} []
[2025-06-18T19:00:12.959246+00:00] doctrine.DEBUG: Executing statement: DELETE FROM "user" {"sql":"DELETE FROM \"user\""} []
[2025-06-18T19:00:12.959715+00:00] doctrine.DEBUG: Executing statement: DELETE FROM format_billet {"sql":"DELETE FROM format_billet"} []
[2025-06-18T19:00:12.959969+00:00] doctrine.DEBUG: Executing statement: DELETE FROM horaire {"sql":"DELETE FROM horaire"} []
[2025-06-18T19:00:12.960229+00:00] doctrine.DEBUG: Executing statement: DELETE FROM jour {"sql":"DELETE FROM jour"} []
[2025-06-18T19:00:12.960469+00:00] doctrine.DEBUG: Executing statement: DELETE FROM acheter_produit {"sql":"DELETE FROM acheter_produit"} []
[2025-06-18T19:00:12.960762+00:00] doctrine.DEBUG: Executing statement: DELETE FROM produit {"sql":"DELETE FROM produit"} []
[2025-06-18T19:00:12.961009+00:00] doctrine.DEBUG: Executing statement: DELETE FROM date {"sql":"DELETE FROM date"} []
[2025-06-18T19:00:12.961248+00:00] doctrine.DEBUG: Executing statement: DELETE FROM "commande" {"sql":"DELETE FROM \"commande\""} []
[2025-06-18T19:00:13.455838+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:00:13.944913+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:00:14.431654+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:00:14.923748+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:00:15.410043+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:00:15.413216+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:15.417283+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, admin_level, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":1,"2":"admin1@parc.com","3":"$2y$13$VkBjYiCD1OkKhR4UPL4x6eyDpewaurATdkz7TWEHlo.WWbhHILi2i","4":"0600000001","5":"Pierre","6":"Chartier","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":1,"12":"administrateur"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":1,"12":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, admin_level, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":1,"2":"admin1@parc.com","3":"$2y$13$VkBjYiCD1OkKhR4UPL4x6eyDpewaurATdkz7TWEHlo.WWbhHILi2i","4":"0600000001","5":"Pierre","6":"Chartier","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":1,"12":"administrateur"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":1,"12":2}} []
[2025-06-18T19:00:15.417947+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, admin_level, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":2,"2":"admin2@parc.com","3":"$2y$13$V0E0lXjqvlLYbH1RNM1wferGJtS/eiuovhG3zm4f7kP0WZ1j/3OZ.","4":"0600000002","5":"Martin","6":"Bruno","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":2,"12":"administrateur"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":1,"12":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, admin_level, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":2,"2":"admin2@parc.com","3":"$2y$13$V0E0lXjqvlLYbH1RNM1wferGJtS/eiuovhG3zm4f7kP0WZ1j/3OZ.","4":"0600000002","5":"Martin","6":"Bruno","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":2,"12":"administrateur"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":1,"12":2}} []
[2025-06-18T19:00:15.418300+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, admin_level, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"admin3@parc.com","3":"$2y$13$xx6S9FiSt/Ua2re8ttmCOug4Ui.lD0iXPb5w0ldJJi3K9d65iA11C","4":"0600000003","5":"Lemoine","6":"Chloé","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":3,"12":"administrateur"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":1,"12":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, admin_level, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"admin3@parc.com","3":"$2y$13$xx6S9FiSt/Ua2re8ttmCOug4Ui.lD0iXPb5w0ldJJi3K9d65iA11C","4":"0600000003","5":"Lemoine","6":"Chloé","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":3,"12":"administrateur"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":1,"12":2}} []
[2025-06-18T19:00:15.418555+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, admin_level, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"admin4@parc.com","3":"$2y$13$rNZZVRzbS0DEHVXMwsbmtuAfOFxclYgGZewsyDbrby69rnTs65CHe","4":"0600000004","5":"Bernard","6":"David","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":2,"12":"administrateur"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":1,"12":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, admin_level, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"admin4@parc.com","3":"$2y$13$rNZZVRzbS0DEHVXMwsbmtuAfOFxclYgGZewsyDbrby69rnTs65CHe","4":"0600000004","5":"Bernard","6":"David","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":2,"12":"administrateur"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":1,"12":2}} []
[2025-06-18T19:00:15.418775+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, admin_level, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"admin5@parc.com","3":"$2y$13$aBt/E8fdW7y8ZYxXmRQqeehJ6RsMNt/FhfE25g7mYakMiUAfB782m","4":"0600000005","5":"Petit","6":"Emma","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":1,"12":"administrateur"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":1,"12":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, admin_level, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"admin5@parc.com","3":"$2y$13$aBt/E8fdW7y8ZYxXmRQqeehJ6RsMNt/FhfE25g7mYakMiUAfB782m","4":"0600000005","5":"Petit","6":"Emma","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":1,"12":"administrateur"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":1,"12":2}} []
[2025-06-18T19:00:15.419185+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:15.419511+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:00:15.419867+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:00:15.420014+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:00:15.420140+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:00:15.420304+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:00:15.420449+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:00:15.420587+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:00:15.420807+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:00:15.420956+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:00:15.421103+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:00:15.421350+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:15.421600+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":1,"2":"Savane","3":"Une vaste étendue herbeuse parsemée d’arbres, idéale pour les grands herbivores."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":1,"2":"Savane","3":"Une vaste étendue herbeuse parsemée d’arbres, idéale pour les grands herbivores."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:00:15.422162+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":2,"2":"Forêt tropicale","3":"Un environnement humide et dense en végétation, abritant des espèces rares et exotiques."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":2,"2":"Forêt tropicale","3":"Un environnement humide et dense en végétation, abritant des espèces rares et exotiques."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:00:15.422415+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":3,"2":"Désert","3":"Un biome aride avec des températures extrêmes, peuplé de créatures adaptées à la sécheresse."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":3,"2":"Désert","3":"Un biome aride avec des températures extrêmes, peuplé de créatures adaptées à la sécheresse."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:00:15.422644+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":4,"2":"Montagne","3":"Un terrain escarpé aux conditions climatiques variables, parfait pour les espèces résistantes."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":4,"2":"Montagne","3":"Un terrain escarpé aux conditions climatiques variables, parfait pour les espèces résistantes."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:00:15.422873+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":5,"2":"Marécage","3":"Un biome humide et vaseux où vivent des espèces amphibies et semi-aquatiques."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":5,"2":"Marécage","3":"Un biome humide et vaseux où vivent des espèces amphibies et semi-aquatiques."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:00:15.423072+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":6,"2":"Plaines","3":"Des étendues ouvertes de végétation basse, idéales pour les grands troupeaux de dinosaures."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":6,"2":"Plaines","3":"Des étendues ouvertes de végétation basse, idéales pour les grands troupeaux de dinosaures."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:00:15.423232+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":7,"2":"Jungle","3":"Une forêt dense et tropicale, riche en biodiversité et peu explorée."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":7,"2":"Jungle","3":"Une forêt dense et tropicale, riche en biodiversité et peu explorée."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:00:15.423359+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":8,"2":"Toundra","3":"Une zone froide avec peu de végétation, habitée par des espèces résistantes au froid."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":8,"2":"Toundra","3":"Une zone froide avec peu de végétation, habitée par des espèces résistantes au froid."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:00:15.423488+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":9,"2":"Volcanique","3":"Un biome rocheux, chaud et instable, proche d’activités géothermiques."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":9,"2":"Volcanique","3":"Un biome rocheux, chaud et instable, proche d’activités géothermiques."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:00:15.423633+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":10,"2":"Lac","3":"Un grand plan d’eau entouré de végétation aquatique, idéal pour les espèces semi-aquatiques."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":10,"2":"Lac","3":"Un grand plan d’eau entouré de végétation aquatique, idéal pour les espèces semi-aquatiques."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:00:15.423776+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:15.911481+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:00:16.397095+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:00:16.882764+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:00:17.368432+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:00:17.853682+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:00:17.854276+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.854542+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, adresse_postal, code_postal, otp, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":6,"2":"lucas.dupont@mail.com","3":"$2y$13$pImyG4YTLDl2jcRaQRXNwucXYGEjnn84PBrxstwtYbuAiuarYhCJC","4":"0612345678","5":"Dupont","6":"Lucas","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"12 Rue des Tricératops","12":75001,"13":null,"14":"client"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2,"12":1,"13":2,"14":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, adresse_postal, code_postal, otp, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":6,"2":"lucas.dupont@mail.com","3":"$2y$13$pImyG4YTLDl2jcRaQRXNwucXYGEjnn84PBrxstwtYbuAiuarYhCJC","4":"0612345678","5":"Dupont","6":"Lucas","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"12 Rue des Tricératops","12":75001,"13":null,"14":"client"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2,"12":1,"13":2,"14":2}} []
[2025-06-18T19:00:17.857273+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, adresse_postal, code_postal, otp, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":7,"2":"marie.lemoine@mail.com","3":"$2y$13$AzPOxq.VNjSYR1UAAtZxX.GlyfGJ7T/O45cdhzDnFjdaLoXcZ6MDe","4":"0623456789","5":"Lemoine","6":"Marie","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"5 Avenue des Raptors","12":69002,"13":null,"14":"client"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2,"12":1,"13":2,"14":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, adresse_postal, code_postal, otp, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":7,"2":"marie.lemoine@mail.com","3":"$2y$13$AzPOxq.VNjSYR1UAAtZxX.GlyfGJ7T/O45cdhzDnFjdaLoXcZ6MDe","4":"0623456789","5":"Lemoine","6":"Marie","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"5 Avenue des Raptors","12":69002,"13":null,"14":"client"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2,"12":1,"13":2,"14":2}} []
[2025-06-18T19:00:17.857550+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, adresse_postal, code_postal, otp, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":8,"2":"kevin.nguyen@mail.com","3":"$2y$13$CvGFyB48SVmisTB1Mshwo.8Dl069JxqvGcgoQaIYvkkedw1grDvc6","4":"0634567890","5":"Nguyen","6":"Kevin","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"24 Allée des Palmiers","12":13003,"13":null,"14":"client"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2,"12":1,"13":2,"14":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, adresse_postal, code_postal, otp, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":8,"2":"kevin.nguyen@mail.com","3":"$2y$13$CvGFyB48SVmisTB1Mshwo.8Dl069JxqvGcgoQaIYvkkedw1grDvc6","4":"0634567890","5":"Nguyen","6":"Kevin","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"24 Allée des Palmiers","12":13003,"13":null,"14":"client"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2,"12":1,"13":2,"14":2}} []
[2025-06-18T19:00:17.857787+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, adresse_postal, code_postal, otp, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":9,"2":"claire.bertrand@mail.com","3":"$2y$13$cSfPB43RaGwiIkYpYehOCuHIKjQh6..65VIyZkSCyO0RyhyGeo5RK","4":"0645678901","5":"Bertrand","6":"Claire","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"8 Boulevard des Fossiles","12":44000,"13":null,"14":"client"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2,"12":1,"13":2,"14":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, adresse_postal, code_postal, otp, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":9,"2":"claire.bertrand@mail.com","3":"$2y$13$cSfPB43RaGwiIkYpYehOCuHIKjQh6..65VIyZkSCyO0RyhyGeo5RK","4":"0645678901","5":"Bertrand","6":"Claire","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"8 Boulevard des Fossiles","12":44000,"13":null,"14":"client"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2,"12":1,"13":2,"14":2}} []
[2025-06-18T19:00:17.857989+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, adresse_postal, code_postal, otp, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":10,"2":"sophie.rodriguez@mail.com","3":"$2y$13$cixttzUFDUFhmCOWnnDOB.qZiEH/6V3TczM1Dezck3Yg.kCpRLrq2","4":"0656789012","5":"Rodriguez","6":"Sophie","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"15 Route du T-Rex","12":34000,"13":null,"14":"client"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2,"12":1,"13":2,"14":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, adresse_postal, code_postal, otp, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":10,"2":"sophie.rodriguez@mail.com","3":"$2y$13$cixttzUFDUFhmCOWnnDOB.qZiEH/6V3TczM1Dezck3Yg.kCpRLrq2","4":"0656789012","5":"Rodriguez","6":"Sophie","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"15 Route du T-Rex","12":34000,"13":null,"14":"client"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2,"12":1,"13":2,"14":2}} []
[2025-06-18T19:00:17.858171+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.858400+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.858700+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.858889+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.859016+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.859153+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.859357+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.859543+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.859802+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.859959+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.860115+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.860303+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.860476+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.860627+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.860794+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.860946+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.861096+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.861291+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.861553+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.861826+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.861990+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.862135+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.862268+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.862392+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.862508+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.862630+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.862743+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.863392+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.863803+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.864003+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.864202+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.864411+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.864560+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.864703+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.864825+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.864942+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.865058+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.865187+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.865308+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.865429+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.865541+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.865677+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.865803+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.865921+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.866056+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.866196+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.866462+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.866688+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.866810+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.866910+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.867011+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.867125+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.867238+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.867347+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.867454+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.867559+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.867661+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.867763+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.867866+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.867989+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.868114+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.868232+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.868323+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.868414+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.868520+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.868610+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.868706+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.868798+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.868900+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.868998+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.869099+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.869201+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.869299+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.869390+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.869480+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.869580+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.869666+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.869756+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.869928+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.870227+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.870386+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:00:17.870638+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.870827+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":1,"2":"2025-06-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":1,"2":"2025-06-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.871115+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":2,"2":"2025-06-19 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":2,"2":"2025-06-19 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.871273+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":3,"2":"2025-06-20 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":3,"2":"2025-06-20 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.871419+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":4,"2":"2025-06-21 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":4,"2":"2025-06-21 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.871528+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":5,"2":"2025-06-22 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":5,"2":"2025-06-22 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.871636+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":6,"2":"2025-06-23 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":6,"2":"2025-06-23 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.871745+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":7,"2":"2025-06-24 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":7,"2":"2025-06-24 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.871846+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":8,"2":"2025-06-25 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":8,"2":"2025-06-25 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.871950+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":9,"2":"2025-06-26 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":9,"2":"2025-06-26 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.872046+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":10,"2":"2025-06-27 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":10,"2":"2025-06-27 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.872191+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":11,"2":"2025-06-28 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":11,"2":"2025-06-28 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.872322+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":12,"2":"2025-06-29 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":12,"2":"2025-06-29 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.872440+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":13,"2":"2025-06-30 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":13,"2":"2025-06-30 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.872553+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":14,"2":"2025-07-01 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":14,"2":"2025-07-01 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.872666+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":15,"2":"2025-07-02 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":15,"2":"2025-07-02 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.872773+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":16,"2":"2025-07-03 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":16,"2":"2025-07-03 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.872879+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":17,"2":"2025-07-04 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":17,"2":"2025-07-04 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.872994+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":18,"2":"2025-07-05 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":18,"2":"2025-07-05 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.873126+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":19,"2":"2025-07-06 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":19,"2":"2025-07-06 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.873259+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":20,"2":"2025-07-07 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":20,"2":"2025-07-07 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.873379+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":21,"2":"2025-06-17 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":21,"2":"2025-06-17 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.873489+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":22,"2":"2025-06-16 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":22,"2":"2025-06-16 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.873596+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":23,"2":"2025-06-15 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":23,"2":"2025-06-15 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.873709+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":24,"2":"2025-06-14 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":24,"2":"2025-06-14 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.873812+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":25,"2":"2025-06-13 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":25,"2":"2025-06-13 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.873918+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":26,"2":"2025-06-12 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":26,"2":"2025-06-12 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.874028+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":27,"2":"2025-06-11 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":27,"2":"2025-06-11 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.874142+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":28,"2":"2025-06-10 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":28,"2":"2025-06-10 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.874253+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":29,"2":"2025-06-09 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":29,"2":"2025-06-09 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.874363+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":30,"2":"2025-06-08 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":30,"2":"2025-06-08 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.874469+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":31,"2":"2025-06-07 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":31,"2":"2025-06-07 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.874572+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":32,"2":"2025-06-06 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":32,"2":"2025-06-06 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.874686+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":33,"2":"2025-06-05 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":33,"2":"2025-06-05 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.874801+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":34,"2":"2025-06-04 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":34,"2":"2025-06-04 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.874906+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":35,"2":"2025-06-03 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":35,"2":"2025-06-03 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.875017+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":36,"2":"2025-06-02 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":36,"2":"2025-06-02 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.875135+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":37,"2":"2025-06-01 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":37,"2":"2025-06-01 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.875253+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":38,"2":"2025-05-31 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":38,"2":"2025-05-31 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.875370+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":39,"2":"2025-05-30 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":39,"2":"2025-05-30 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.875476+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":40,"2":"2025-05-29 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":40,"2":"2025-05-29 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.875585+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":41,"2":"2025-05-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":41,"2":"2025-05-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.875690+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":42,"2":"2025-04-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":42,"2":"2025-04-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.875804+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":43,"2":"2025-03-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":43,"2":"2025-03-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.875915+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":44,"2":"2025-02-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":44,"2":"2025-02-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.876021+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":45,"2":"2025-01-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":45,"2":"2025-01-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.876129+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":46,"2":"2024-12-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":46,"2":"2024-12-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.876237+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":47,"2":"2024-11-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":47,"2":"2024-11-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.876344+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":48,"2":"2024-10-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":48,"2":"2024-10-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.876449+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":49,"2":"2024-09-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":49,"2":"2024-09-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.876561+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":50,"2":"2024-08-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":50,"2":"2024-08-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.876667+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":51,"2":"2024-07-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":51,"2":"2024-07-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.876774+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":52,"2":"2024-06-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":52,"2":"2024-06-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.876887+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":53,"2":"2024-05-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":53,"2":"2024-05-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.884300+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":54,"2":"2024-04-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":54,"2":"2024-04-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.884477+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":55,"2":"2024-03-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":55,"2":"2024-03-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.884597+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":56,"2":"2024-02-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":56,"2":"2024-02-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.884708+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":57,"2":"2024-01-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":57,"2":"2024-01-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.884814+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":58,"2":"2023-12-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":58,"2":"2023-12-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.884919+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":59,"2":"2023-11-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":59,"2":"2023-11-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.885034+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":60,"2":"2023-10-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":60,"2":"2023-10-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.885147+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":61,"2":"2024-06-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":61,"2":"2024-06-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.885257+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":62,"2":"2023-06-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":62,"2":"2023-06-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.885363+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":63,"2":"2022-06-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":63,"2":"2022-06-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.885480+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":64,"2":"2021-06-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":64,"2":"2021-06-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.885587+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":65,"2":"2020-06-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":65,"2":"2020-06-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.885694+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":66,"2":"2019-06-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":66,"2":"2019-06-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.885801+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":67,"2":"2018-06-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":67,"2":"2018-06-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.885905+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":68,"2":"2017-06-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":68,"2":"2017-06-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.886009+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":69,"2":"2016-06-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":69,"2":"2016-06-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.886119+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":70,"2":"2015-06-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":70,"2":"2015-06-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.886226+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":71,"2":"2014-06-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":71,"2":"2014-06-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.886331+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":72,"2":"2013-06-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":72,"2":"2013-06-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.886443+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":73,"2":"2012-06-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":73,"2":"2012-06-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.886549+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":74,"2":"2011-06-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":74,"2":"2011-06-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.886655+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":75,"2":"2010-06-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":75,"2":"2010-06-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.886760+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":76,"2":"2009-06-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":76,"2":"2009-06-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.886865+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":77,"2":"2008-06-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":77,"2":"2008-06-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.886970+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":78,"2":"2007-06-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":78,"2":"2007-06-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.887081+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":79,"2":"2006-06-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":79,"2":"2006-06-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.887282+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":80,"2":"2005-06-18 19:00:17"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":80,"2":"2005-06-18 19:00:17"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.887495+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.887721+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_billet_id_seq') {"sql":"SELECT NEXTVAL('format_billet_id_seq')"} []
[2025-06-18T19:00:17.888035+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_billet_id_seq') {"sql":"SELECT NEXTVAL('format_billet_id_seq')"} []
[2025-06-18T19:00:17.888207+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_billet_id_seq') {"sql":"SELECT NEXTVAL('format_billet_id_seq')"} []
[2025-06-18T19:00:17.888322+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_billet_id_seq') {"sql":"SELECT NEXTVAL('format_billet_id_seq')"} []
[2025-06-18T19:00:17.888429+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_billet_id_seq') {"sql":"SELECT NEXTVAL('format_billet_id_seq')"} []
[2025-06-18T19:00:17.888654+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.888866+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":1,"2":"Classique","3":"classique.jpg","4":"Un billet standard donnant accès à toutes les zones principales du parc.","5":50}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?)","params":{"1":1,"2":"Classique","3":"classique.jpg","4":"Un billet standard donnant accès à toutes les zones principales du parc.","5":50},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:00:17.889350+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":2,"2":"VIP","3":"vip.jpg","4":"Accès privilégié avec coupe-file, visite guidée et places réservées aux spectacles.","5":120}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?)","params":{"1":2,"2":"VIP","3":"vip.jpg","4":"Accès privilégié avec coupe-file, visite guidée et places réservées aux spectacles.","5":120},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:00:17.889600+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Famille","3":"famille.jpg","4":"Pack avantageux pour 2 adultes et jusqu’à 3 enfants.","5":160}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?)","params":{"1":3,"2":"Famille","3":"famille.jpg","4":"Pack avantageux pour 2 adultes et jusqu’à 3 enfants.","5":160},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:00:17.889954+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Étudiant","3":"etudiant.jpg","4":"Tarif réduit sur présentation d’une carte étudiante valide.","5":35}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?)","params":{"1":4,"2":"Étudiant","3":"etudiant.jpg","4":"Tarif réduit sur présentation d’une carte étudiante valide.","5":35},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:00:17.890376+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Soirée","3":"soiree.jpg","4":"Billet valable uniquement en fin de journée pour découvrir le parc au coucher du soleil.","5":25}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?)","params":{"1":5,"2":"Soirée","3":"soiree.jpg","4":"Billet valable uniquement en fin de journée pour découvrir le parc au coucher du soleil.","5":25},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:00:17.890668+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.901673+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('horaire_id_seq') {"sql":"SELECT NEXTVAL('horaire_id_seq')"} []
[2025-06-18T19:00:17.902134+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('horaire_id_seq') {"sql":"SELECT NEXTVAL('horaire_id_seq')"} []
[2025-06-18T19:00:17.902347+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('horaire_id_seq') {"sql":"SELECT NEXTVAL('horaire_id_seq')"} []
[2025-06-18T19:00:17.902491+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('horaire_id_seq') {"sql":"SELECT NEXTVAL('horaire_id_seq')"} []
[2025-06-18T19:00:17.902600+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('horaire_id_seq') {"sql":"SELECT NEXTVAL('horaire_id_seq')"} []
[2025-06-18T19:00:17.902704+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('horaire_id_seq') {"sql":"SELECT NEXTVAL('horaire_id_seq')"} []
[2025-06-18T19:00:17.902803+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('horaire_id_seq') {"sql":"SELECT NEXTVAL('horaire_id_seq')"} []
[2025-06-18T19:00:17.902950+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.903097+00:00] doctrine.DEBUG: Executing statement: INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?) (parameters: array{"1":1,"2":"2025-06-18 10:00:00","3":"2025-06-18 20:00:00"}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?)","params":{"1":1,"2":"2025-06-18 10:00:00","3":"2025-06-18 20:00:00"},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:00:17.903369+00:00] doctrine.DEBUG: Executing statement: INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?) (parameters: array{"1":2,"2":"2025-06-19 09:00:00","3":"2025-06-19 17:00:00"}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?)","params":{"1":2,"2":"2025-06-19 09:00:00","3":"2025-06-19 17:00:00"},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:00:17.903541+00:00] doctrine.DEBUG: Executing statement: INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?) (parameters: array{"1":3,"2":"2025-06-20 09:00:00","3":"2025-06-20 18:00:00"}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?)","params":{"1":3,"2":"2025-06-20 09:00:00","3":"2025-06-20 18:00:00"},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:00:17.903687+00:00] doctrine.DEBUG: Executing statement: INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?) (parameters: array{"1":4,"2":"2025-06-21 09:00:00","3":"2025-06-21 18:00:00"}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?)","params":{"1":4,"2":"2025-06-21 09:00:00","3":"2025-06-21 18:00:00"},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:00:17.903827+00:00] doctrine.DEBUG: Executing statement: INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?) (parameters: array{"1":5,"2":"2025-06-22 10:00:00","3":"2025-06-22 17:00:00"}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?)","params":{"1":5,"2":"2025-06-22 10:00:00","3":"2025-06-22 17:00:00"},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:00:17.903961+00:00] doctrine.DEBUG: Executing statement: INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?) (parameters: array{"1":6,"2":"2025-06-23 09:00:00","3":"2025-06-23 20:00:00"}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?)","params":{"1":6,"2":"2025-06-23 09:00:00","3":"2025-06-23 20:00:00"},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:00:17.904105+00:00] doctrine.DEBUG: Executing statement: INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?) (parameters: array{"1":7,"2":"2025-06-24 08:00:00","3":"2025-06-24 19:00:00"}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?)","params":{"1":7,"2":"2025-06-24 08:00:00","3":"2025-06-24 19:00:00"},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:00:17.904243+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.904407+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('jour_id_seq') {"sql":"SELECT NEXTVAL('jour_id_seq')"} []
[2025-06-18T19:00:17.904634+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('jour_id_seq') {"sql":"SELECT NEXTVAL('jour_id_seq')"} []
[2025-06-18T19:00:17.904756+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('jour_id_seq') {"sql":"SELECT NEXTVAL('jour_id_seq')"} []
[2025-06-18T19:00:17.904858+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('jour_id_seq') {"sql":"SELECT NEXTVAL('jour_id_seq')"} []
[2025-06-18T19:00:17.904955+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('jour_id_seq') {"sql":"SELECT NEXTVAL('jour_id_seq')"} []
[2025-06-18T19:00:17.905050+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('jour_id_seq') {"sql":"SELECT NEXTVAL('jour_id_seq')"} []
[2025-06-18T19:00:17.905169+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('jour_id_seq') {"sql":"SELECT NEXTVAL('jour_id_seq')"} []
[2025-06-18T19:00:17.905296+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.905416+00:00] doctrine.DEBUG: Executing statement: INSERT INTO jour (id, libelle_jour) VALUES (?, ?) (parameters: array{"1":1,"2":"Lundi"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO jour (id, libelle_jour) VALUES (?, ?)","params":{"1":1,"2":"Lundi"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.905643+00:00] doctrine.DEBUG: Executing statement: INSERT INTO jour (id, libelle_jour) VALUES (?, ?) (parameters: array{"1":2,"2":"Mardi"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO jour (id, libelle_jour) VALUES (?, ?)","params":{"1":2,"2":"Mardi"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.905790+00:00] doctrine.DEBUG: Executing statement: INSERT INTO jour (id, libelle_jour) VALUES (?, ?) (parameters: array{"1":3,"2":"Mercredi"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO jour (id, libelle_jour) VALUES (?, ?)","params":{"1":3,"2":"Mercredi"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.905970+00:00] doctrine.DEBUG: Executing statement: INSERT INTO jour (id, libelle_jour) VALUES (?, ?) (parameters: array{"1":4,"2":"Jeudi"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO jour (id, libelle_jour) VALUES (?, ?)","params":{"1":4,"2":"Jeudi"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.906194+00:00] doctrine.DEBUG: Executing statement: INSERT INTO jour (id, libelle_jour) VALUES (?, ?) (parameters: array{"1":5,"2":"Vendredi"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO jour (id, libelle_jour) VALUES (?, ?)","params":{"1":5,"2":"Vendredi"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.906372+00:00] doctrine.DEBUG: Executing statement: INSERT INTO jour (id, libelle_jour) VALUES (?, ?) (parameters: array{"1":6,"2":"Samedi"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO jour (id, libelle_jour) VALUES (?, ?)","params":{"1":6,"2":"Samedi"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.906529+00:00] doctrine.DEBUG: Executing statement: INSERT INTO jour (id, libelle_jour) VALUES (?, ?) (parameters: array{"1":7,"2":"Dimanche"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO jour (id, libelle_jour) VALUES (?, ?)","params":{"1":7,"2":"Dimanche"},"types":{"1":1,"2":2}} []
[2025-06-18T19:00:17.906672+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.906973+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:00:17.907538+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:00:17.908159+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:00:17.908604+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:00:17.908749+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:00:17.908942+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:00:17.909172+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:00:17.909421+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:00:17.909647+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:00:17.909859+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:00:17.910294+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:00:17.910505+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:00:17.910881+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.911197+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":1,"2":"Peluches Dino","3":"img/Produits/peluche.jpg","4":"Peluches douces représentant vos dinosaures préférés.","5":100,"6":1,"7":25.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":1,"2":"Peluches Dino","3":"img/Produits/peluche.jpg","4":"Peluches douces représentant vos dinosaures préférés.","5":100,"6":1,"7":25.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:00:17.911846+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":2,"2":"Casquette Jurassic","3":"img/Produits/casquette.jpg","4":"Casquette officielle du parc avec logo brodé.","5":50,"6":1,"7":18.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":2,"2":"Casquette Jurassic","3":"img/Produits/casquette.jpg","4":"Casquette officielle du parc avec logo brodé.","5":50,"6":1,"7":18.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:00:17.912084+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Gourde personnalisée","3":"img/Produits/gourde.jpg","4":"Gourde réutilisable avec prénom gravé, souvenir idéal.","5":75,"6":1,"7":15.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"Gourde personnalisée","3":"img/Produits/gourde.jpg","4":"Gourde réutilisable avec prénom gravé, souvenir idéal.","5":75,"6":1,"7":15.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:00:17.912317+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Poster panoramique","3":"img/Produits/poster.jpg","4":"Poster géant du parc vu du ciel, édition limitée.","5":30,"6":1,"7":100.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"Poster panoramique","3":"img/Produits/poster.jpg","4":"Poster géant du parc vu du ciel, édition limitée.","5":30,"6":1,"7":100.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:00:17.912663+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Mug T-Rex","3":"img/Produits/mug.jpg","4":"Mug en céramique avec illustration du célèbre T-Rex.","5":0,"6":0,"7":12.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Mug T-Rex","3":"img/Produits/mug.jpg","4":"Mug en céramique avec illustration du célèbre T-Rex.","5":0,"6":0,"7":12.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:00:17.912995+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":6,"2":"Sweat Velociraptor","3":"img/Produits/sweat.jpg","4":"Sweat à capuche ultra-confort avec motif Velociraptor en action.","5":45,"6":1,"7":40.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":6,"2":"Sweat Velociraptor","3":"img/Produits/sweat.jpg","4":"Sweat à capuche ultra-confort avec motif Velociraptor en action.","5":45,"6":1,"7":40.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:00:17.913287+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":7,"2":"Bracelet Fossile","3":"img/Produits/bracelet.jpg","4":"Bracelet en cuir avec pièce imitation fossile, élégant et préhistorique.","5":60,"6":1,"7":22.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":7,"2":"Bracelet Fossile","3":"img/Produits/bracelet.jpg","4":"Bracelet en cuir avec pièce imitation fossile, élégant et préhistorique.","5":60,"6":1,"7":22.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:00:17.913562+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":8,"2":"Sac à dos Isla Nublar","3":"img/Produits/sac.jpg","4":"Sac pratique avec carte du parc imprimée, idéal pour les explorateurs.","5":35,"6":1,"7":35.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":8,"2":"Sac à dos Isla Nublar","3":"img/Produits/sac.jpg","4":"Sac pratique avec carte du parc imprimée, idéal pour les explorateurs.","5":35,"6":1,"7":35.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:00:17.913793+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":9,"2":"Carnet Jurassic Notes","3":"img/Produits/carnet.jpg","4":"Petit carnet à spirale pour noter vos observations de terrain.","5":120,"6":1,"7":7.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":9,"2":"Carnet Jurassic Notes","3":"img/Produits/carnet.jpg","4":"Petit carnet à spirale pour noter vos observations de terrain.","5":120,"6":1,"7":7.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:00:17.914023+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":10,"2":"Stylo Raptor","3":"img/Produits/stylo.jpg","4":"Stylo noir avec tête de raptor en 3D, parfait pour écrire avec style.","5":200,"6":1,"7":40.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":10,"2":"Stylo Raptor","3":"img/Produits/stylo.jpg","4":"Stylo noir avec tête de raptor en 3D, parfait pour écrire avec style.","5":200,"6":1,"7":40.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:00:17.914235+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":11,"2":"T-Shirt DNA Lab","3":"img/Produits/tshirt.jpg","4":"T-shirt minimaliste avec logo du laboratoire ADN.","5":80,"6":1,"7":20.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":11,"2":"T-Shirt DNA Lab","3":"img/Produits/tshirt.jpg","4":"T-shirt minimaliste avec logo du laboratoire ADN.","5":80,"6":1,"7":20.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:00:17.914442+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":12,"2":"Badge VIP Jurassic","3":"img/Produits/badge.jpg","4":"Badge collector pour visiteurs privilégiés (ne donne pas accès au T-Rex 🦖).","5":300,"6":1,"7":5.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":12,"2":"Badge VIP Jurassic","3":"img/Produits/badge.jpg","4":"Badge collector pour visiteurs privilégiés (ne donne pas accès au T-Rex 🦖).","5":300,"6":1,"7":5.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:00:17.914619+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.915634+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0"} []
[2025-06-18T19:00:17.918165+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('hotel_id_seq') {"sql":"SELECT NEXTVAL('hotel_id_seq')"} []
[2025-06-18T19:00:17.918499+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('hotel_id_seq') {"sql":"SELECT NEXTVAL('hotel_id_seq')"} []
[2025-06-18T19:00:17.918663+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('hotel_id_seq') {"sql":"SELECT NEXTVAL('hotel_id_seq')"} []
[2025-06-18T19:00:17.918776+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('hotel_id_seq') {"sql":"SELECT NEXTVAL('hotel_id_seq')"} []
[2025-06-18T19:00:17.919079+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.919474+00:00] doctrine.DEBUG: Executing statement: INSERT INTO hotel (id, libelle_hotel, image_hotel, description_hotel, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":1,"2":"Hôtel Jurassique","3":"img/Hotels/hotel1.jpg","4":"Un hôtel tout confort au cœur du parc, idéal pour observer les dinosaures.","5":9}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO hotel (id, libelle_hotel, image_hotel, description_hotel, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":1,"2":"Hôtel Jurassique","3":"img/Hotels/hotel1.jpg","4":"Un hôtel tout confort au cœur du parc, idéal pour observer les dinosaures.","5":9},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:00:17.920132+00:00] doctrine.DEBUG: Executing statement: INSERT INTO hotel (id, libelle_hotel, image_hotel, description_hotel, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":2,"2":"Hôtel Safari","3":"img/Hotels/hotel2.jpg","4":"Dormez sous les étoiles avec vue sur les plaines préhistoriques.","5":2}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO hotel (id, libelle_hotel, image_hotel, description_hotel, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":2,"2":"Hôtel Safari","3":"img/Hotels/hotel2.jpg","4":"Dormez sous les étoiles avec vue sur les plaines préhistoriques.","5":2},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:00:17.920351+00:00] doctrine.DEBUG: Executing statement: INSERT INTO hotel (id, libelle_hotel, image_hotel, description_hotel, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Refuge Volcanique","3":"img/Hotels/hotel3.jpg","4":"Un hébergement insolite à proximité d’un ancien volcan actif.","5":6}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO hotel (id, libelle_hotel, image_hotel, description_hotel, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":3,"2":"Refuge Volcanique","3":"img/Hotels/hotel3.jpg","4":"Un hébergement insolite à proximité d’un ancien volcan actif.","5":6},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:00:17.920508+00:00] doctrine.DEBUG: Executing statement: INSERT INTO hotel (id, libelle_hotel, image_hotel, description_hotel, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Lodge Tropical","3":"img/Hotels/hotel4.jpg","4":"Une immersion totale dans la jungle, au plus près de la nature.","5":6}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO hotel (id, libelle_hotel, image_hotel, description_hotel, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":4,"2":"Lodge Tropical","3":"img/Hotels/hotel4.jpg","4":"Une immersion totale dans la jungle, au plus près de la nature.","5":6},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:00:17.920653+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.920868+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0"} []
[2025-06-18T19:00:17.921182+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:00:17.921393+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:00:17.921518+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:00:17.921623+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:00:17.921721+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:00:17.921805+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:00:17.921886+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:00:17.921967+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:00:17.922046+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:00:17.922141+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:00:17.922376+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.922560+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":1,"2":"Enclos #1","3":10}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":1,"2":"Enclos #1","3":10},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:00:17.922998+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":2,"2":"Enclos #2","3":10}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":2,"2":"Enclos #2","3":10},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:00:17.923249+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":3,"2":"Enclos #3","3":8}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":3,"2":"Enclos #3","3":8},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:00:17.923644+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":4,"2":"Enclos #4","3":3}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":4,"2":"Enclos #4","3":3},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:00:17.923965+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":5,"2":"Enclos #5","3":5}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":5,"2":"Enclos #5","3":5},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:00:17.924452+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":6,"2":"Enclos #6","3":4}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":6,"2":"Enclos #6","3":4},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:00:17.924996+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":7,"2":"Enclos #7","3":4}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":7,"2":"Enclos #7","3":4},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:00:17.925405+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":8,"2":"Enclos #8","3":4}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":8,"2":"Enclos #8","3":4},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:00:17.925715+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":9,"2":"Enclos #9","3":8}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":9,"2":"Enclos #9","3":8},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:00:17.926333+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":10,"2":"Enclos #10","3":10}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":10,"2":"Enclos #10","3":10},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:00:17.927114+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.927678+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0"} []
[2025-06-18T19:00:17.928387+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('restaurant_id_seq') {"sql":"SELECT NEXTVAL('restaurant_id_seq')"} []
[2025-06-18T19:00:17.928743+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('restaurant_id_seq') {"sql":"SELECT NEXTVAL('restaurant_id_seq')"} []
[2025-06-18T19:00:17.928876+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('restaurant_id_seq') {"sql":"SELECT NEXTVAL('restaurant_id_seq')"} []
[2025-06-18T19:00:17.928991+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('restaurant_id_seq') {"sql":"SELECT NEXTVAL('restaurant_id_seq')"} []
[2025-06-18T19:00:17.929107+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('restaurant_id_seq') {"sql":"SELECT NEXTVAL('restaurant_id_seq')"} []
[2025-06-18T19:00:17.929436+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.929795+00:00] doctrine.DEBUG: Executing statement: INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":1,"2":"Jurassic Grill","3":"img/Restaurants/res1.jpg","4":40,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":1,"2":"Jurassic Grill","3":"img/Restaurants/res1.jpg","4":40,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:17.930696+00:00] doctrine.DEBUG: Executing statement: INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":2,"2":"Dino Dîner","3":"img/Restaurants/res2.jpg","4":30,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":2,"2":"Dino Dîner","3":"img/Restaurants/res2.jpg","4":30,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:17.931070+00:00] doctrine.DEBUG: Executing statement: INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Volcan Pizza","3":"img/Restaurants/res3.jpg","4":20,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":3,"2":"Volcan Pizza","3":"img/Restaurants/res3.jpg","4":20,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:17.931374+00:00] doctrine.DEBUG: Executing statement: INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Herbivore Café","3":"img/Restaurants/res4.jpg","4":20,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":4,"2":"Herbivore Café","3":"img/Restaurants/res4.jpg","4":20,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:17.931653+00:00] doctrine.DEBUG: Executing statement: INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"T-Rex Snack","3":"img/Restaurants/res5.jpg","4":15,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":5,"2":"T-Rex Snack","3":"img/Restaurants/res5.jpg","4":15,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:17.931902+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.932587+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.type FROM "user" t0 WHERE t0.type IN ('client') {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.type FROM \"user\" t0 WHERE t0.type IN ('client')"} []
[2025-06-18T19:00:17.933525+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.date AS date_2 FROM date t0 {"sql":"SELECT t0.id AS id_1, t0.date AS date_2 FROM date t0"} []
[2025-06-18T19:00:17.934238+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_billet AS libelle_billet_2, t0.image_billet AS image_billet_3, t0.description_billet AS description_billet_4, t0.prix_billet AS prix_billet_5 FROM format_billet t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_billet AS libelle_billet_2, t0.image_billet AS image_billet_3, t0.description_billet AS description_billet_4, t0.prix_billet AS prix_billet_5 FROM format_billet t0"} []
[2025-06-18T19:00:17.934576+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.934791+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.934912+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.935018+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.935137+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.935241+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.935341+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.935441+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.935535+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.935630+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.935738+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.935834+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.935928+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.936025+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.936127+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.936223+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.936318+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.936412+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.936505+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.936595+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.936685+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.936777+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.936870+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.936962+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.937053+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.937161+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.937254+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.937347+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.937440+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.937540+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.937632+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.937729+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.937825+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.937918+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.938010+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.938107+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.938209+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.938302+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.938395+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.938495+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:00:17.939189+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.939530+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":1,"2":"2025-07-24 17:24:22","3":"2025-07-25 17:24:22","4":"Lemoine","5":"Marie","6":7,"7":5,"8":66}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":1,"2":"2025-07-24 17:24:22","3":"2025-07-25 17:24:22","4":"Lemoine","5":"Marie","6":7,"7":5,"8":66},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.940291+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":2,"2":"2025-07-28 09:57:51","3":"2025-07-29 09:57:51","4":"Lemoine","5":"Marie","6":7,"7":3,"8":72}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":2,"2":"2025-07-28 09:57:51","3":"2025-07-29 09:57:51","4":"Lemoine","5":"Marie","6":7,"7":3,"8":72},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.940857+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"2025-07-17 11:56:23","3":"2025-07-18 11:56:23","4":"Lemoine","5":"Marie","6":7,"7":3,"8":35}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"2025-07-17 11:56:23","3":"2025-07-18 11:56:23","4":"Lemoine","5":"Marie","6":7,"7":3,"8":35},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.941752+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"2025-07-24 17:06:18","3":"2025-07-25 17:06:18","4":"Lemoine","5":"Marie","6":7,"7":2,"8":76}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"2025-07-24 17:06:18","3":"2025-07-25 17:06:18","4":"Lemoine","5":"Marie","6":7,"7":2,"8":76},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.942395+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"2025-08-05 09:45:54","3":"2025-08-06 09:45:54","4":"Lemoine","5":"Marie","6":7,"7":2,"8":49}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"2025-08-05 09:45:54","3":"2025-08-06 09:45:54","4":"Lemoine","5":"Marie","6":7,"7":2,"8":49},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.943204+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":6,"2":"2025-05-16 21:31:58","3":"2025-05-17 21:31:58","4":"Lemoine","5":"Marie","6":7,"7":4,"8":34}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":6,"2":"2025-05-16 21:31:58","3":"2025-05-17 21:31:58","4":"Lemoine","5":"Marie","6":7,"7":4,"8":34},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.943852+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":7,"2":"2025-07-21 13:40:16","3":"2025-07-22 13:40:16","4":"Lemoine","5":"Marie","6":7,"7":3,"8":25}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":7,"2":"2025-07-21 13:40:16","3":"2025-07-22 13:40:16","4":"Lemoine","5":"Marie","6":7,"7":3,"8":25},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.944372+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":8,"2":"2025-04-29 06:06:27","3":"2025-04-30 06:06:27","4":"Lemoine","5":"Marie","6":7,"7":2,"8":18}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":8,"2":"2025-04-29 06:06:27","3":"2025-04-30 06:06:27","4":"Lemoine","5":"Marie","6":7,"7":2,"8":18},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.944933+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":9,"2":"2025-06-20 06:37:51","3":"2025-06-21 06:37:51","4":"Lemoine","5":"Marie","6":7,"7":2,"8":19}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":9,"2":"2025-06-20 06:37:51","3":"2025-06-21 06:37:51","4":"Lemoine","5":"Marie","6":7,"7":2,"8":19},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.945176+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":10,"2":"2025-07-01 16:27:18","3":"2025-07-02 16:27:18","4":"Lemoine","5":"Marie","6":7,"7":2,"8":80}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":10,"2":"2025-07-01 16:27:18","3":"2025-07-02 16:27:18","4":"Lemoine","5":"Marie","6":7,"7":2,"8":80},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.945402+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":11,"2":"2025-07-20 22:47:04","3":"2025-07-21 22:47:04","4":"Nguyen","5":"Kevin","6":8,"7":1,"8":4}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":11,"2":"2025-07-20 22:47:04","3":"2025-07-21 22:47:04","4":"Nguyen","5":"Kevin","6":8,"7":1,"8":4},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.945616+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":12,"2":"2025-08-05 10:41:59","3":"2025-08-06 10:41:59","4":"Nguyen","5":"Kevin","6":8,"7":2,"8":10}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":12,"2":"2025-08-05 10:41:59","3":"2025-08-06 10:41:59","4":"Nguyen","5":"Kevin","6":8,"7":2,"8":10},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.945852+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":13,"2":"2025-06-23 10:15:31","3":"2025-06-24 10:15:31","4":"Nguyen","5":"Kevin","6":8,"7":5,"8":22}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":13,"2":"2025-06-23 10:15:31","3":"2025-06-24 10:15:31","4":"Nguyen","5":"Kevin","6":8,"7":5,"8":22},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.946116+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":14,"2":"2025-04-20 15:23:22","3":"2025-04-21 15:23:22","4":"Nguyen","5":"Kevin","6":8,"7":1,"8":47}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":14,"2":"2025-04-20 15:23:22","3":"2025-04-21 15:23:22","4":"Nguyen","5":"Kevin","6":8,"7":1,"8":47},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.946365+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":15,"2":"2025-05-29 04:52:45","3":"2025-05-30 04:52:45","4":"Nguyen","5":"Kevin","6":8,"7":1,"8":30}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":15,"2":"2025-05-29 04:52:45","3":"2025-05-30 04:52:45","4":"Nguyen","5":"Kevin","6":8,"7":1,"8":30},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.946599+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":16,"2":"2025-06-04 05:18:38","3":"2025-06-05 05:18:38","4":"Nguyen","5":"Kevin","6":8,"7":5,"8":70}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":16,"2":"2025-06-04 05:18:38","3":"2025-06-05 05:18:38","4":"Nguyen","5":"Kevin","6":8,"7":5,"8":70},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.946963+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":17,"2":"2025-06-20 06:10:45","3":"2025-06-21 06:10:45","4":"Nguyen","5":"Kevin","6":8,"7":4,"8":12}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":17,"2":"2025-06-20 06:10:45","3":"2025-06-21 06:10:45","4":"Nguyen","5":"Kevin","6":8,"7":4,"8":12},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.947285+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":18,"2":"2025-05-14 13:28:32","3":"2025-05-15 13:28:32","4":"Nguyen","5":"Kevin","6":8,"7":3,"8":21}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":18,"2":"2025-05-14 13:28:32","3":"2025-05-15 13:28:32","4":"Nguyen","5":"Kevin","6":8,"7":3,"8":21},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.947597+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":19,"2":"2025-04-24 23:25:56","3":"2025-04-25 23:25:56","4":"Nguyen","5":"Kevin","6":8,"7":3,"8":22}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":19,"2":"2025-04-24 23:25:56","3":"2025-04-25 23:25:56","4":"Nguyen","5":"Kevin","6":8,"7":3,"8":22},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.947867+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":20,"2":"2025-07-14 17:21:03","3":"2025-07-15 17:21:03","4":"Nguyen","5":"Kevin","6":8,"7":2,"8":9}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":20,"2":"2025-07-14 17:21:03","3":"2025-07-15 17:21:03","4":"Nguyen","5":"Kevin","6":8,"7":2,"8":9},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.948124+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":21,"2":"2025-04-26 21:33:15","3":"2025-04-27 21:33:15","4":"Bertrand","5":"Claire","6":9,"7":4,"8":79}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":21,"2":"2025-04-26 21:33:15","3":"2025-04-27 21:33:15","4":"Bertrand","5":"Claire","6":9,"7":4,"8":79},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.948383+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":22,"2":"2025-06-11 00:01:40","3":"2025-06-12 00:01:40","4":"Bertrand","5":"Claire","6":9,"7":5,"8":60}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":22,"2":"2025-06-11 00:01:40","3":"2025-06-12 00:01:40","4":"Bertrand","5":"Claire","6":9,"7":5,"8":60},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.948597+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":23,"2":"2025-06-06 22:00:22","3":"2025-06-07 22:00:22","4":"Bertrand","5":"Claire","6":9,"7":5,"8":12}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":23,"2":"2025-06-06 22:00:22","3":"2025-06-07 22:00:22","4":"Bertrand","5":"Claire","6":9,"7":5,"8":12},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.948801+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":24,"2":"2025-07-08 09:53:24","3":"2025-07-09 09:53:24","4":"Bertrand","5":"Claire","6":9,"7":3,"8":23}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":24,"2":"2025-07-08 09:53:24","3":"2025-07-09 09:53:24","4":"Bertrand","5":"Claire","6":9,"7":3,"8":23},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.948996+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":25,"2":"2025-08-09 12:49:18","3":"2025-08-10 12:49:18","4":"Bertrand","5":"Claire","6":9,"7":5,"8":58}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":25,"2":"2025-08-09 12:49:18","3":"2025-08-10 12:49:18","4":"Bertrand","5":"Claire","6":9,"7":5,"8":58},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.949195+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":26,"2":"2025-04-22 10:01:12","3":"2025-04-23 10:01:12","4":"Bertrand","5":"Claire","6":9,"7":5,"8":8}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":26,"2":"2025-04-22 10:01:12","3":"2025-04-23 10:01:12","4":"Bertrand","5":"Claire","6":9,"7":5,"8":8},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.949384+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":27,"2":"2025-05-15 11:07:42","3":"2025-05-16 11:07:42","4":"Bertrand","5":"Claire","6":9,"7":3,"8":63}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":27,"2":"2025-05-15 11:07:42","3":"2025-05-16 11:07:42","4":"Bertrand","5":"Claire","6":9,"7":3,"8":63},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.949572+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":28,"2":"2025-06-19 21:06:47","3":"2025-06-20 21:06:47","4":"Bertrand","5":"Claire","6":9,"7":4,"8":71}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":28,"2":"2025-06-19 21:06:47","3":"2025-06-20 21:06:47","4":"Bertrand","5":"Claire","6":9,"7":4,"8":71},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.949761+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":29,"2":"2025-05-08 14:12:58","3":"2025-05-09 14:12:58","4":"Bertrand","5":"Claire","6":9,"7":5,"8":21}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":29,"2":"2025-05-08 14:12:58","3":"2025-05-09 14:12:58","4":"Bertrand","5":"Claire","6":9,"7":5,"8":21},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.949942+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":30,"2":"2025-04-25 15:07:29","3":"2025-04-26 15:07:29","4":"Bertrand","5":"Claire","6":9,"7":2,"8":54}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":30,"2":"2025-04-25 15:07:29","3":"2025-04-26 15:07:29","4":"Bertrand","5":"Claire","6":9,"7":2,"8":54},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.950134+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":31,"2":"2025-04-21 00:01:24","3":"2025-04-22 00:01:24","4":"Rodriguez","5":"Sophie","6":10,"7":5,"8":19}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":31,"2":"2025-04-21 00:01:24","3":"2025-04-22 00:01:24","4":"Rodriguez","5":"Sophie","6":10,"7":5,"8":19},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.950329+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":32,"2":"2025-08-15 03:54:55","3":"2025-08-16 03:54:55","4":"Rodriguez","5":"Sophie","6":10,"7":5,"8":79}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":32,"2":"2025-08-15 03:54:55","3":"2025-08-16 03:54:55","4":"Rodriguez","5":"Sophie","6":10,"7":5,"8":79},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.950514+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":33,"2":"2025-06-05 08:34:38","3":"2025-06-06 08:34:38","4":"Rodriguez","5":"Sophie","6":10,"7":5,"8":51}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":33,"2":"2025-06-05 08:34:38","3":"2025-06-06 08:34:38","4":"Rodriguez","5":"Sophie","6":10,"7":5,"8":51},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.950700+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":34,"2":"2025-05-09 10:26:58","3":"2025-05-10 10:26:58","4":"Rodriguez","5":"Sophie","6":10,"7":5,"8":75}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":34,"2":"2025-05-09 10:26:58","3":"2025-05-10 10:26:58","4":"Rodriguez","5":"Sophie","6":10,"7":5,"8":75},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.950888+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":35,"2":"2025-08-14 05:53:47","3":"2025-08-15 05:53:47","4":"Rodriguez","5":"Sophie","6":10,"7":4,"8":8}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":35,"2":"2025-08-14 05:53:47","3":"2025-08-15 05:53:47","4":"Rodriguez","5":"Sophie","6":10,"7":4,"8":8},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.951085+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":36,"2":"2025-07-16 14:37:02","3":"2025-07-17 14:37:02","4":"Rodriguez","5":"Sophie","6":10,"7":3,"8":77}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":36,"2":"2025-07-16 14:37:02","3":"2025-07-17 14:37:02","4":"Rodriguez","5":"Sophie","6":10,"7":3,"8":77},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.951287+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":37,"2":"2025-04-21 18:38:24","3":"2025-04-22 18:38:24","4":"Rodriguez","5":"Sophie","6":10,"7":4,"8":46}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":37,"2":"2025-04-21 18:38:24","3":"2025-04-22 18:38:24","4":"Rodriguez","5":"Sophie","6":10,"7":4,"8":46},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.951474+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":38,"2":"2025-07-11 05:23:29","3":"2025-07-12 05:23:29","4":"Rodriguez","5":"Sophie","6":10,"7":2,"8":46}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":38,"2":"2025-07-11 05:23:29","3":"2025-07-12 05:23:29","4":"Rodriguez","5":"Sophie","6":10,"7":2,"8":46},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.951660+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":39,"2":"2025-05-16 04:16:20","3":"2025-05-17 04:16:20","4":"Rodriguez","5":"Sophie","6":10,"7":4,"8":38}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":39,"2":"2025-05-16 04:16:20","3":"2025-05-17 04:16:20","4":"Rodriguez","5":"Sophie","6":10,"7":4,"8":38},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.951855+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":40,"2":"2025-07-19 21:26:10","3":"2025-07-20 21:26:10","4":"Rodriguez","5":"Sophie","6":10,"7":1,"8":5}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":40,"2":"2025-07-19 21:26:10","3":"2025-07-20 21:26:10","4":"Rodriguez","5":"Sophie","6":10,"7":1,"8":5},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:00:17.952107+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.952520+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.type FROM "user" t0 WHERE t0.type IN ('client') {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.type FROM \"user\" t0 WHERE t0.type IN ('client')"} []
[2025-06-18T19:00:17.953188+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.debut_billet AS debut_billet_2, t0.fin_billet AS fin_billet_3, t0.nom AS nom_4, t0.prenom AS prenom_5, t0.user_id AS user_id_6, t0.billet_id AS billet_id_7, t0.date_id AS date_id_8 FROM payer_billet t0 {"sql":"SELECT t0.id AS id_1, t0.debut_billet AS debut_billet_2, t0.fin_billet AS fin_billet_3, t0.nom AS nom_4, t0.prenom AS prenom_5, t0.user_id AS user_id_6, t0.billet_id AS billet_id_7, t0.date_id AS date_id_8 FROM payer_billet t0"} []
[2025-06-18T19:00:17.956900+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('remboursement_id_seq') {"sql":"SELECT NEXTVAL('remboursement_id_seq')"} []
[2025-06-18T19:00:17.957949+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('remboursement_id_seq') {"sql":"SELECT NEXTVAL('remboursement_id_seq')"} []
[2025-06-18T19:00:17.959682+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('remboursement_id_seq') {"sql":"SELECT NEXTVAL('remboursement_id_seq')"} []
[2025-06-18T19:00:17.960735+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('remboursement_id_seq') {"sql":"SELECT NEXTVAL('remboursement_id_seq')"} []
[2025-06-18T19:00:17.961246+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('remboursement_id_seq') {"sql":"SELECT NEXTVAL('remboursement_id_seq')"} []
[2025-06-18T19:00:17.961645+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('remboursement_id_seq') {"sql":"SELECT NEXTVAL('remboursement_id_seq')"} []
[2025-06-18T19:00:17.961904+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('remboursement_id_seq') {"sql":"SELECT NEXTVAL('remboursement_id_seq')"} []
[2025-06-18T19:00:17.962719+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.962977+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":1,"2":"2025-06-05 09:06:30","3":"En attente","4":"Ut corporis nihil esse quo numquam voluptates quis.","5":22.46,"6":8,"7":24}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}) {"sql":"INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":1,"2":"2025-06-05 09:06:30","3":"En attente","4":"Ut corporis nihil esse quo numquam voluptates quis.","5":22.46,"6":8,"7":24},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}} []
[2025-06-18T19:00:17.963731+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":2,"2":"2025-04-27 03:36:08","3":"Refusé","4":"Quasi dolor iure molestiae est saepe qui.","5":34.33,"6":9,"7":18}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}) {"sql":"INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":2,"2":"2025-04-27 03:36:08","3":"Refusé","4":"Quasi dolor iure molestiae est saepe qui.","5":34.33,"6":9,"7":18},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}} []
[2025-06-18T19:00:17.964626+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"2025-05-29 12:56:46","3":"Refusé","4":"Ipsa deleniti quidem nostrum repellendus repellendus sint delectus non.","5":14.52,"6":7,"7":31}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}) {"sql":"INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"2025-05-29 12:56:46","3":"Refusé","4":"Ipsa deleniti quidem nostrum repellendus repellendus sint delectus non.","5":14.52,"6":7,"7":31},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}} []
[2025-06-18T19:00:17.965172+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"2025-04-25 12:04:42","3":"Validé","4":"Non magnam et fugit omnis deserunt quo mollitia voluptatum harum qui.","5":49.2,"6":6,"7":21}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}) {"sql":"INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"2025-04-25 12:04:42","3":"Validé","4":"Non magnam et fugit omnis deserunt quo mollitia voluptatum harum qui.","5":49.2,"6":6,"7":21},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}} []
[2025-06-18T19:00:17.965840+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"2025-04-24 15:54:24","3":"Validé","4":"Aut sunt vel qui qui quia id atque nemo ut et et pariatur autem.","5":19.45,"6":10,"7":25}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}) {"sql":"INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"2025-04-24 15:54:24","3":"Validé","4":"Aut sunt vel qui qui quia id atque nemo ut et et pariatur autem.","5":19.45,"6":10,"7":25},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}} []
[2025-06-18T19:00:17.966323+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":6,"2":"2025-05-10 09:06:51","3":"Validé","4":"Velit dolorem omnis dolor neque neque incidunt molestias molestiae error similique non id ut.","5":61.4,"6":6,"7":38}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}) {"sql":"INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":6,"2":"2025-05-10 09:06:51","3":"Validé","4":"Velit dolorem omnis dolor neque neque incidunt molestias molestiae error similique non id ut.","5":61.4,"6":6,"7":38},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}} []
[2025-06-18T19:00:17.966660+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":7,"2":"2025-05-02 15:55:30","3":"Validé","4":"Rerum dignissimos aliquid quia dolor aut cumque libero sapiente totam a.","5":20.47,"6":10,"7":9}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}) {"sql":"INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":7,"2":"2025-05-02 15:55:30","3":"Validé","4":"Rerum dignissimos aliquid quia dolor aut cumque libero sapiente totam a.","5":20.47,"6":10,"7":9},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}} []
[2025-06-18T19:00:17.966842+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.967085+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_chambre_id_seq') {"sql":"SELECT NEXTVAL('format_chambre_id_seq')"} []
[2025-06-18T19:00:17.967490+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_chambre_id_seq') {"sql":"SELECT NEXTVAL('format_chambre_id_seq')"} []
[2025-06-18T19:00:17.967758+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_chambre_id_seq') {"sql":"SELECT NEXTVAL('format_chambre_id_seq')"} []
[2025-06-18T19:00:17.967958+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_chambre_id_seq') {"sql":"SELECT NEXTVAL('format_chambre_id_seq')"} []
[2025-06-18T19:00:17.968143+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_chambre_id_seq') {"sql":"SELECT NEXTVAL('format_chambre_id_seq')"} []
[2025-06-18T19:00:17.968449+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.968638+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?) (parameters: array{"1":1,"2":"Chambre Standard","3":90,"4":"Une chambre confortable avec un lit double, salle de bain privée et vue sur le parc."}, types: array{"1":1,"2":2,"3":1,"4":2}) {"sql":"INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?)","params":{"1":1,"2":"Chambre Standard","3":90,"4":"Une chambre confortable avec un lit double, salle de bain privée et vue sur le parc."},"types":{"1":1,"2":2,"3":1,"4":2}} []
[2025-06-18T19:00:17.968945+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?) (parameters: array{"1":2,"2":"Chambre Familiale","3":140,"4":"Spacieuse, idéale pour les familles avec lits superposés, lit double et coin salon."}, types: array{"1":1,"2":2,"3":1,"4":2}) {"sql":"INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?)","params":{"1":2,"2":"Chambre Familiale","3":140,"4":"Spacieuse, idéale pour les familles avec lits superposés, lit double et coin salon."},"types":{"1":1,"2":2,"3":1,"4":2}} []
[2025-06-18T19:00:17.969141+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?) (parameters: array{"1":3,"2":"Suite Luxe","3":250,"4":"Suite haut de gamme avec jacuzzi privé, balcon panoramique et services exclusifs."}, types: array{"1":1,"2":2,"3":1,"4":2}) {"sql":"INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?)","params":{"1":3,"2":"Suite Luxe","3":250,"4":"Suite haut de gamme avec jacuzzi privé, balcon panoramique et services exclusifs."},"types":{"1":1,"2":2,"3":1,"4":2}} []
[2025-06-18T19:00:17.969344+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?) (parameters: array{"1":4,"2":"Cabane Jungle","3":120,"4":"Hébergement insolite perché dans les arbres, avec accès direct à la nature."}, types: array{"1":1,"2":2,"3":1,"4":2}) {"sql":"INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?)","params":{"1":4,"2":"Cabane Jungle","3":120,"4":"Hébergement insolite perché dans les arbres, avec accès direct à la nature."},"types":{"1":1,"2":2,"3":1,"4":2}} []
[2025-06-18T19:00:17.969561+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?) (parameters: array{"1":5,"2":"Tente Safari","3":100,"4":"Tente équipée pour une immersion totale dans le décor préhistorique, avec confort moderne."}, types: array{"1":1,"2":2,"3":1,"4":2}) {"sql":"INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?)","params":{"1":5,"2":"Tente Safari","3":100,"4":"Tente équipée pour une immersion totale dans le décor préhistorique, avec confort moderne."},"types":{"1":1,"2":2,"3":1,"4":2}} []
[2025-06-18T19:00:17.969792+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.970500+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_enclos AS libelle_enclos_2, t0.biome_id AS biome_id_3 FROM enclos t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_enclos AS libelle_enclos_2, t0.biome_id AS biome_id_3 FROM enclos t0"} []
[2025-06-18T19:00:17.971462+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.971773+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.971911+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.972026+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.972144+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.972259+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.972451+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.972612+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.972771+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.972912+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.973155+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.973493+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.973773+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.974039+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.974602+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.975049+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.975438+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.975695+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.976128+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.976629+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.977031+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.977263+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.977504+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.977729+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.977887+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.978046+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.978365+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.978518+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.978670+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.978800+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.978925+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.979073+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.979278+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.979526+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.979725+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.979886+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.980048+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.980278+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.980490+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.980680+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.980824+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.980980+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.981136+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.981281+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:00:17.981766+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.981998+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":1,"2":"img/Dinosaures/Dsungaripterus.png","3":"Dsungaripterus","4":"Carnivore","5":"Permien","6":"Aliquam id et excepturi consequuntur facere odio. Cumque quam qui dolorem perspiciatis nobis soluta.","7":6}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":1,"2":"img/Dinosaures/Dsungaripterus.png","3":"Dsungaripterus","4":"Carnivore","5":"Permien","6":"Aliquam id et excepturi consequuntur facere odio. Cumque quam qui dolorem perspiciatis nobis soluta.","7":6},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.982458+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":2,"2":"img/Dinosaures/Pachycephalosaurus.png","3":"Pachycephalosaurus","4":"Omnivore","5":"Permien","6":"Sint perspiciatis nihil dolor voluptas. Maiores odit aliquam architecto deleniti. Error modi aut repellendus.","7":3}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":2,"2":"img/Dinosaures/Pachycephalosaurus.png","3":"Pachycephalosaurus","4":"Omnivore","5":"Permien","6":"Sint perspiciatis nihil dolor voluptas. Maiores odit aliquam architecto deleniti. Error modi aut repellendus.","7":3},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.982642+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"img/Dinosaures/Apatosaurus.png","3":"Apatosaurus","4":"Omnivore","5":"Jurassique","6":"Voluptate est accusamus necessitatibus. Expedita vel impedit iure et.","7":1}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"img/Dinosaures/Apatosaurus.png","3":"Apatosaurus","4":"Omnivore","5":"Jurassique","6":"Voluptate est accusamus necessitatibus. Expedita vel impedit iure et.","7":1},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.982794+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"img/Dinosaures/Gigantspinosaurus.png","3":"Gigantspinosaurus","4":"Omnivore","5":"Crétacé","6":"Sequi numquam est veniam iste nesciunt. Sunt consectetur illum inventore.","7":5}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"img/Dinosaures/Gigantspinosaurus.png","3":"Gigantspinosaurus","4":"Omnivore","5":"Crétacé","6":"Sequi numquam est veniam iste nesciunt. Sunt consectetur illum inventore.","7":5},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.982941+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"img/Dinosaures/Baryonyx.png","3":"Baryonyx","4":"Omnivore","5":"Ordovicien","6":"Dolorem aut porro deserunt quis non quisquam illo. Labore enim illo consectetur ut quis.","7":5}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"img/Dinosaures/Baryonyx.png","3":"Baryonyx","4":"Omnivore","5":"Ordovicien","6":"Dolorem aut porro deserunt quis non quisquam illo. Labore enim illo consectetur ut quis.","7":5},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.983103+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":6,"2":"img/Dinosaures/Attenborosaurus.png","3":"Attenborosaurus","4":"Omnivore","5":"Ordovicien","6":"Provident vero et et placeat dolores consectetur reprehenderit. Ab cum ut sed quae ut. Et soluta quaerat quia impedit dolores facere.","7":5}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":6,"2":"img/Dinosaures/Attenborosaurus.png","3":"Attenborosaurus","4":"Omnivore","5":"Ordovicien","6":"Provident vero et et placeat dolores consectetur reprehenderit. Ab cum ut sed quae ut. Et soluta quaerat quia impedit dolores facere.","7":5},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.983270+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":7,"2":"img/Dinosaures/Struthiomimus.png","3":"Struthiomimus","4":"Herbivore","5":"Ordovicien","6":"Omnis quidem ex in iusto sed autem. Consectetur delectus non veniam natus dolorem amet quia.","7":10}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":7,"2":"img/Dinosaures/Struthiomimus.png","3":"Struthiomimus","4":"Herbivore","5":"Ordovicien","6":"Omnis quidem ex in iusto sed autem. Consectetur delectus non veniam natus dolorem amet quia.","7":10},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.983405+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":8,"2":"img/Dinosaures/Ouranosaurus.png","3":"Ouranosaurus","4":"Omnivore","5":"Silurien","6":"Repudiandae accusantium nulla perspiciatis fuga sequi consequatur labore numquam. Adipisci excepturi et quae vitae optio. Dolorem hic nesciunt itaque earum culpa.","7":5}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":8,"2":"img/Dinosaures/Ouranosaurus.png","3":"Ouranosaurus","4":"Omnivore","5":"Silurien","6":"Repudiandae accusantium nulla perspiciatis fuga sequi consequatur labore numquam. Adipisci excepturi et quae vitae optio. Dolorem hic nesciunt itaque earum culpa.","7":5},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.983536+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":9,"2":"img/Dinosaures/Compsognathus.png","3":"Compsognathus","4":"Herbivore","5":"Cambrien","6":"Nobis voluptatem magnam sit nostrum sint voluptas. Repellat asperiores quidem at sed laborum enim ea. Dignissimos quasi autem velit tenetur quae sequi.","7":6}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":9,"2":"img/Dinosaures/Compsognathus.png","3":"Compsognathus","4":"Herbivore","5":"Cambrien","6":"Nobis voluptatem magnam sit nostrum sint voluptas. Repellat asperiores quidem at sed laborum enim ea. Dignissimos quasi autem velit tenetur quae sequi.","7":6},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.983672+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":10,"2":"img/Dinosaures/Polacanthus.png","3":"Polacanthus","4":"Carnivore","5":"Permien","6":"Dolor et sit dolorum quidem nostrum accusamus aut enim. Sint ea error atque cupiditate.","7":7}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":10,"2":"img/Dinosaures/Polacanthus.png","3":"Polacanthus","4":"Carnivore","5":"Permien","6":"Dolor et sit dolorum quidem nostrum accusamus aut enim. Sint ea error atque cupiditate.","7":7},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.983799+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":11,"2":"img/Dinosaures/Suchomimus.png","3":"Suchomimus","4":"Herbivore","5":"Neogene","6":"Sunt quia corrupti saepe optio iure. Est sed rerum vitae aspernatur et voluptas dolor quia. Sit ad rem optio consequuntur ea inventore consequatur.","7":7}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":11,"2":"img/Dinosaures/Suchomimus.png","3":"Suchomimus","4":"Herbivore","5":"Neogene","6":"Sunt quia corrupti saepe optio iure. Est sed rerum vitae aspernatur et voluptas dolor quia. Sit ad rem optio consequuntur ea inventore consequatur.","7":7},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.983925+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":12,"2":"img/Dinosaures/Ichthyosaurus.png","3":"Ichthyosaurus","4":"Omnivore","5":"Jurassique","6":"Vel ducimus et officiis ut totam. Nihil accusamus veniam quod non quam. Dolor debitis ad unde rem.","7":2}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":12,"2":"img/Dinosaures/Ichthyosaurus.png","3":"Ichthyosaurus","4":"Omnivore","5":"Jurassique","6":"Vel ducimus et officiis ut totam. Nihil accusamus veniam quod non quam. Dolor debitis ad unde rem.","7":2},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.984049+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":13,"2":"img/Dinosaures/Maaradactylus.png","3":"Maaradactylus","4":"Herbivore","5":"Permien","6":"Et velit asperiores et dolorem illo voluptate. Aliquid sint odio ex dolor.","7":6}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":13,"2":"img/Dinosaures/Maaradactylus.png","3":"Maaradactylus","4":"Herbivore","5":"Permien","6":"Et velit asperiores et dolorem illo voluptate. Aliquid sint odio ex dolor.","7":6},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.984191+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":14,"2":"img/Dinosaures/Tropeognathus.png","3":"Tropeognathus","4":"Herbivore","5":"Carbonifère","6":"Distinctio necessitatibus voluptates tenetur numquam similique enim. Fugiat est et quis corporis magni et nihil. Error odio possimus earum dolorum minus.","7":6}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":14,"2":"img/Dinosaures/Tropeognathus.png","3":"Tropeognathus","4":"Herbivore","5":"Carbonifère","6":"Distinctio necessitatibus voluptates tenetur numquam similique enim. Fugiat est et quis corporis magni et nihil. Error odio possimus earum dolorum minus.","7":6},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.984322+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":15,"2":"img/Dinosaures/Mamenchisaurus.png","3":"Mamenchisaurus","4":"Omnivore","5":"Carbonifère","6":"Facere laborum autem adipisci officia. Architecto reprehenderit quod quo in. Sed consequatur mollitia beatae ipsum.","7":9}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":15,"2":"img/Dinosaures/Mamenchisaurus.png","3":"Mamenchisaurus","4":"Omnivore","5":"Carbonifère","6":"Facere laborum autem adipisci officia. Architecto reprehenderit quod quo in. Sed consequatur mollitia beatae ipsum.","7":9},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.984447+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":16,"2":"img/Dinosaures/Archaeornithomimus.png","3":"Archaeornithomimus","4":"Herbivore","5":"Devonien","6":"Voluptatem id consequatur quia rerum est ipsam. Quasi est quo consequatur sed sint.","7":1}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":16,"2":"img/Dinosaures/Archaeornithomimus.png","3":"Archaeornithomimus","4":"Herbivore","5":"Devonien","6":"Voluptatem id consequatur quia rerum est ipsam. Quasi est quo consequatur sed sint.","7":1},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.984572+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":17,"2":"img/Dinosaures/Archaeornithomimus.png","3":"Archaeornithomimus","4":"Omnivore","5":"Neogene","6":"Repudiandae voluptas et minima dolores laboriosam dolores iure. Veritatis cumque accusantium quia eaque sed.","7":6}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":17,"2":"img/Dinosaures/Archaeornithomimus.png","3":"Archaeornithomimus","4":"Omnivore","5":"Neogene","6":"Repudiandae voluptas et minima dolores laboriosam dolores iure. Veritatis cumque accusantium quia eaque sed.","7":6},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.984699+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":18,"2":"img/Dinosaures/Carnotaurus.png","3":"Carnotaurus","4":"Carnivore","5":"Crétacé","6":"Deserunt dolores quis aliquam exercitationem ipsam aut. Enim architecto molestiae excepturi est. Esse iure hic quas sint.","7":5}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":18,"2":"img/Dinosaures/Carnotaurus.png","3":"Carnotaurus","4":"Carnivore","5":"Crétacé","6":"Deserunt dolores quis aliquam exercitationem ipsam aut. Enim architecto molestiae excepturi est. Esse iure hic quas sint.","7":5},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.984832+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":19,"2":"img/Dinosaures/Elasmosaurus.png","3":"Elasmosaurus","4":"Herbivore","5":"Neogene","6":"Vel quae incidunt quam reiciendis qui libero quo. Distinctio corporis animi quidem repellat eum aut minus.","7":10}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":19,"2":"img/Dinosaures/Elasmosaurus.png","3":"Elasmosaurus","4":"Herbivore","5":"Neogene","6":"Vel quae incidunt quam reiciendis qui libero quo. Distinctio corporis animi quidem repellat eum aut minus.","7":10},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.984963+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":20,"2":"img/Dinosaures/Gallimimus.png","3":"Gallimimus","4":"Carnivore","5":"Neogene","6":"Rem quia aut eum. Ut quasi aut totam reiciendis occaecati voluptatum quidem.","7":1}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":20,"2":"img/Dinosaures/Gallimimus.png","3":"Gallimimus","4":"Carnivore","5":"Neogene","6":"Rem quia aut eum. Ut quasi aut totam reiciendis occaecati voluptatum quidem.","7":1},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.985096+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":21,"2":"img/Dinosaures/Sinosauropteryx.png","3":"Sinosauropteryx","4":"Carnivore","5":"Trias","6":"Soluta rem nulla nam omnis aperiam. Ea debitis eius et non. Ut repellat quasi hic laborum ex et.","7":4}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":21,"2":"img/Dinosaures/Sinosauropteryx.png","3":"Sinosauropteryx","4":"Carnivore","5":"Trias","6":"Soluta rem nulla nam omnis aperiam. Ea debitis eius et non. Ut repellat quasi hic laborum ex et.","7":4},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.985227+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":22,"2":"img/Dinosaures/Giganotosaurus.png","3":"Giganotosaurus","4":"Carnivore","5":"Neogene","6":"Molestias nihil consequatur culpa aut. Magnam sequi quas facilis perspiciatis quis sed quia.","7":9}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":22,"2":"img/Dinosaures/Giganotosaurus.png","3":"Giganotosaurus","4":"Carnivore","5":"Neogene","6":"Molestias nihil consequatur culpa aut. Magnam sequi quas facilis perspiciatis quis sed quia.","7":9},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.985357+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":23,"2":"img/Dinosaures/Pentaceratops.png","3":"Pentaceratops","4":"Herbivore","5":"Jurassique","6":"Est corrupti magni explicabo officiis. Ab aliquam incidunt beatae error laborum illum fugiat. Quia voluptatem harum voluptate voluptates expedita sapiente iure corrupti.","7":3}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":23,"2":"img/Dinosaures/Pentaceratops.png","3":"Pentaceratops","4":"Herbivore","5":"Jurassique","6":"Est corrupti magni explicabo officiis. Ab aliquam incidunt beatae error laborum illum fugiat. Quia voluptatem harum voluptate voluptates expedita sapiente iure corrupti.","7":3},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.985484+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":24,"2":"img/Dinosaures/Corythosaurus.png","3":"Corythosaurus","4":"Omnivore","5":"Paleogene","6":"Ut quod tempora ut voluptas. Non autem suscipit autem esse quo.","7":9}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":24,"2":"img/Dinosaures/Corythosaurus.png","3":"Corythosaurus","4":"Omnivore","5":"Paleogene","6":"Ut quod tempora ut voluptas. Non autem suscipit autem esse quo.","7":9},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.985611+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":25,"2":"img/Dinosaures/Jeholopterus.png","3":"Jeholopterus","4":"Carnivore","5":"Paleogene","6":"Explicabo itaque veniam nihil est vitae animi cum eum. Aperiam accusamus consequatur voluptas omnis quasi neque.","7":4}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":25,"2":"img/Dinosaures/Jeholopterus.png","3":"Jeholopterus","4":"Carnivore","5":"Paleogene","6":"Explicabo itaque veniam nihil est vitae animi cum eum. Aperiam accusamus consequatur voluptas omnis quasi neque.","7":4},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.985733+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":26,"2":"img/Dinosaures/Euoplocephalus.png","3":"Euoplocephalus","4":"Herbivore","5":"Paleogene","6":"Ea iusto voluptatem aut nemo earum et id quae. Corporis neque ex qui dolore est. Facere sint magnam quia tempora labore velit.","7":9}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":26,"2":"img/Dinosaures/Euoplocephalus.png","3":"Euoplocephalus","4":"Herbivore","5":"Paleogene","6":"Ea iusto voluptatem aut nemo earum et id quae. Corporis neque ex qui dolore est. Facere sint magnam quia tempora labore velit.","7":9},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.985861+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":27,"2":"img/Dinosaures/Indoraptor.png","3":"Indoraptor","4":"Omnivore","5":"Carbonifère","6":"Dolor maxime neque cum libero quisquam. Nulla ad iste eum blanditiis placeat autem. Voluptas dolore nisi deserunt et.","7":9}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":27,"2":"img/Dinosaures/Indoraptor.png","3":"Indoraptor","4":"Omnivore","5":"Carbonifère","6":"Dolor maxime neque cum libero quisquam. Nulla ad iste eum blanditiis placeat autem. Voluptas dolore nisi deserunt et.","7":9},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.985983+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":28,"2":"img/Dinosaures/Chungkingosaurus.png","3":"Chungkingosaurus","4":"Omnivore","5":"Ordovicien","6":"Ipsum qui sunt deserunt deserunt soluta iusto beatae. Error autem mollitia et quia dolorem ratione et nihil. Accusamus quis ut suscipit.","7":7}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":28,"2":"img/Dinosaures/Chungkingosaurus.png","3":"Chungkingosaurus","4":"Omnivore","5":"Ordovicien","6":"Ipsum qui sunt deserunt deserunt soluta iusto beatae. Error autem mollitia et quia dolorem ratione et nihil. Accusamus quis ut suscipit.","7":7},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.986114+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":29,"2":"img/Dinosaures/Chasmosaurus.png","3":"Chasmosaurus","4":"Herbivore","5":"Jurassique","6":"Dolores laborum distinctio ratione nemo voluptatem at quis. Quas explicabo quam totam accusantium maxime at eligendi. Aut iusto perspiciatis molestiae illo est voluptatem.","7":5}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":29,"2":"img/Dinosaures/Chasmosaurus.png","3":"Chasmosaurus","4":"Herbivore","5":"Jurassique","6":"Dolores laborum distinctio ratione nemo voluptatem at quis. Quas explicabo quam totam accusantium maxime at eligendi. Aut iusto perspiciatis molestiae illo est voluptatem.","7":5},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.986248+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":30,"2":"img/Dinosaures/Liopleurodon.png","3":"Liopleurodon","4":"Herbivore","5":"Neogene","6":"Quas excepturi voluptatum quae rerum et asperiores. Voluptatum rerum autem esse ut ex doloribus.","7":7}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":30,"2":"img/Dinosaures/Liopleurodon.png","3":"Liopleurodon","4":"Herbivore","5":"Neogene","6":"Quas excepturi voluptatum quae rerum et asperiores. Voluptatum rerum autem esse ut ex doloribus.","7":7},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.986380+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":31,"2":"img/Dinosaures/Tarbosaurus.png","3":"Tarbosaurus","4":"Herbivore","5":"Carbonifère","6":"Autem molestiae optio aliquid nisi. Aliquam itaque repudiandae ipsum sit maxime.","7":3}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":31,"2":"img/Dinosaures/Tarbosaurus.png","3":"Tarbosaurus","4":"Herbivore","5":"Carbonifère","6":"Autem molestiae optio aliquid nisi. Aliquam itaque repudiandae ipsum sit maxime.","7":3},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.986507+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":32,"2":"img/Dinosaures/Proceratosaurus.png","3":"Proceratosaurus","4":"Omnivore","5":"Carbonifère","6":"At id voluptas accusamus. Aut animi soluta aut numquam expedita et. Facere omnis mollitia beatae.","7":9}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":32,"2":"img/Dinosaures/Proceratosaurus.png","3":"Proceratosaurus","4":"Omnivore","5":"Carbonifère","6":"At id voluptas accusamus. Aut animi soluta aut numquam expedita et. Facere omnis mollitia beatae.","7":9},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.986628+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":33,"2":"img/Dinosaures/Stegoceratops.png","3":"Stegoceratops","4":"Omnivore","5":"Cambrien","6":"Quidem odio ut suscipit eum soluta sint enim. Soluta quia earum exercitationem fugit autem omnis.","7":6}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":33,"2":"img/Dinosaures/Stegoceratops.png","3":"Stegoceratops","4":"Omnivore","5":"Cambrien","6":"Quidem odio ut suscipit eum soluta sint enim. Soluta quia earum exercitationem fugit autem omnis.","7":6},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.986751+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":34,"2":"img/Dinosaures/Monolophosaurus.png","3":"Monolophosaurus","4":"Herbivore","5":"Devonien","6":"Reprehenderit veritatis qui deleniti sequi porro sit. Incidunt qui voluptates dolorem cupiditate commodi aut sapiente. Possimus omnis corrupti inventore placeat est neque.","7":7}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":34,"2":"img/Dinosaures/Monolophosaurus.png","3":"Monolophosaurus","4":"Herbivore","5":"Devonien","6":"Reprehenderit veritatis qui deleniti sequi porro sit. Incidunt qui voluptates dolorem cupiditate commodi aut sapiente. Possimus omnis corrupti inventore placeat est neque.","7":7},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.986881+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":35,"2":"img/Dinosaures/Nothosaurus.png","3":"Nothosaurus","4":"Omnivore","5":"Paleogene","6":"Sunt animi dicta odio rerum et nihil expedita. Similique voluptatem aut eos dolor. Dolorem ut quam qui itaque quidem quas.","7":3}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":35,"2":"img/Dinosaures/Nothosaurus.png","3":"Nothosaurus","4":"Omnivore","5":"Paleogene","6":"Sunt animi dicta odio rerum et nihil expedita. Similique voluptatem aut eos dolor. Dolorem ut quam qui itaque quidem quas.","7":3},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.987002+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":36,"2":"img/Dinosaures/Spinoceratops.png","3":"Spinoceratops","4":"Omnivore","5":"Ordovicien","6":"Odit at voluptatem doloremque ad culpa fuga. Consequatur et blanditiis nihil omnis vero quod.","7":1}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":36,"2":"img/Dinosaures/Spinoceratops.png","3":"Spinoceratops","4":"Omnivore","5":"Ordovicien","6":"Odit at voluptatem doloremque ad culpa fuga. Consequatur et blanditiis nihil omnis vero quod.","7":1},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.987129+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":37,"2":"img/Dinosaures/Deinocheirus.png","3":"Deinocheirus","4":"Carnivore","5":"Trias","6":"Repellendus consequatur iusto pariatur dolores voluptatem. Dolores officiis ea consequatur omnis ut nihil fugit at. Recusandae et sunt laudantium pariatur.","7":9}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":37,"2":"img/Dinosaures/Deinocheirus.png","3":"Deinocheirus","4":"Carnivore","5":"Trias","6":"Repellendus consequatur iusto pariatur dolores voluptatem. Dolores officiis ea consequatur omnis ut nihil fugit at. Recusandae et sunt laudantium pariatur.","7":9},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.987257+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":38,"2":"img/Dinosaures/Styxosaurus.png","3":"Styxosaurus","4":"Carnivore","5":"Permien","6":"Amet illum ducimus quia illo. Et maiores distinctio vero dolor ut iure.","7":9}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":38,"2":"img/Dinosaures/Styxosaurus.png","3":"Styxosaurus","4":"Carnivore","5":"Permien","6":"Amet illum ducimus quia illo. Et maiores distinctio vero dolor ut iure.","7":9},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.987507+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":39,"2":"img/Dinosaures/Dunkleosteus.png","3":"Dunkleosteus","4":"Omnivore","5":"Trias","6":"Reprehenderit quaerat officiis velit sed dolores accusamus maxime iusto. Doloribus laborum ipsa nemo soluta cumque unde voluptatem. Ut consequatur est asperiores nihil tempore quas.","7":5}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":39,"2":"img/Dinosaures/Dunkleosteus.png","3":"Dunkleosteus","4":"Omnivore","5":"Trias","6":"Reprehenderit quaerat officiis velit sed dolores accusamus maxime iusto. Doloribus laborum ipsa nemo soluta cumque unde voluptatem. Ut consequatur est asperiores nihil tempore quas.","7":5},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.987649+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":40,"2":"img/Dinosaures/Alamosaurus.png","3":"Alamosaurus","4":"Carnivore","5":"Silurien","6":"Eveniet consequatur consequatur occaecati id molestiae eum. Dolorum veritatis excepturi natus delectus tempore dolorem cupiditate.","7":1}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":40,"2":"img/Dinosaures/Alamosaurus.png","3":"Alamosaurus","4":"Carnivore","5":"Silurien","6":"Eveniet consequatur consequatur occaecati id molestiae eum. Dolorum veritatis excepturi natus delectus tempore dolorem cupiditate.","7":1},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.987777+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":41,"2":"img/Dinosaures/Concavenator.png","3":"Concavenator","4":"Carnivore","5":"Devonien","6":"Quisquam dolorem est ex voluptates est ad quaerat et. Adipisci iste ipsa alias ea quod minus.","7":6}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":41,"2":"img/Dinosaures/Concavenator.png","3":"Concavenator","4":"Carnivore","5":"Devonien","6":"Quisquam dolorem est ex voluptates est ad quaerat et. Adipisci iste ipsa alias ea quod minus.","7":6},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.987902+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":42,"2":"img/Dinosaures/Tsintaosaurus.png","3":"Tsintaosaurus","4":"Omnivore","5":"Permien","6":"Enim et blanditiis consequatur quibusdam. Provident vero autem voluptatem deleniti quia natus. Aut numquam aut molestiae molestiae et sapiente ad assumenda.","7":1}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":42,"2":"img/Dinosaures/Tsintaosaurus.png","3":"Tsintaosaurus","4":"Omnivore","5":"Permien","6":"Enim et blanditiis consequatur quibusdam. Provident vero autem voluptatem deleniti quia natus. Aut numquam aut molestiae molestiae et sapiente ad assumenda.","7":1},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.988033+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":43,"2":"img/Dinosaures/Dilophosaurus.png","3":"Dilophosaurus","4":"Omnivore","5":"Neogene","6":"Fugiat unde eaque et atque adipisci. Sit sint unde et est. Aut accusantium voluptatem eligendi sapiente vero sapiente architecto.","7":7}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":43,"2":"img/Dinosaures/Dilophosaurus.png","3":"Dilophosaurus","4":"Omnivore","5":"Neogene","6":"Fugiat unde eaque et atque adipisci. Sit sint unde et est. Aut accusantium voluptatem eligendi sapiente vero sapiente architecto.","7":7},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.988163+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":44,"2":"img/Dinosaures/Sinoceratops.png","3":"Sinoceratops","4":"Herbivore","5":"Silurien","6":"Voluptas odit blanditiis dolorum itaque nobis. Unde delectus mollitia ut.","7":3}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":44,"2":"img/Dinosaures/Sinoceratops.png","3":"Sinoceratops","4":"Herbivore","5":"Silurien","6":"Voluptas odit blanditiis dolorum itaque nobis. Unde delectus mollitia ut.","7":3},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:00:17.988312+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.988900+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-18T19:00:17.989464+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_jour AS libelle_jour_2 FROM jour t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_jour AS libelle_jour_2 FROM jour t0"} []
[2025-06-18T19:00:17.990328+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.ouverture AS ouverture_2, t0.fermeture AS fermeture_3 FROM horaire t0 {"sql":"SELECT t0.id AS id_1, t0.ouverture AS ouverture_2, t0.fermeture AS fermeture_3 FROM horaire t0"} []
[2025-06-18T19:00:17.993374+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:17.994122+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":1,"2":7,"3":6}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":1,"2":7,"3":6},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:17.995278+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":1,"2":7,"3":3}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":1,"2":7,"3":3},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:17.996623+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":1,"2":1,"3":5}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":1,"2":1,"3":5},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.003036+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":1,"2":2,"3":4}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":1,"2":2,"3":4},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.003637+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":1,"2":2,"3":2}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":1,"2":2,"3":2},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.003883+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":1,"2":6,"3":5}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":1,"2":6,"3":5},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.004104+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":1,"2":4,"3":3}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":1,"2":4,"3":3},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.004350+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":2,"2":7,"3":7}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":2,"2":7,"3":7},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.004506+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":2,"2":7,"3":2}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":2,"2":7,"3":2},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.004649+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":2,"2":5,"3":3}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":2,"2":5,"3":3},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.004788+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":2,"2":5,"3":1}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":2,"2":5,"3":1},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.004926+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":2,"2":3,"3":5}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":2,"2":3,"3":5},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.005080+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":2,"2":4,"3":3}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":2,"2":4,"3":3},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.005222+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":2,"2":4,"3":2}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":2,"2":4,"3":2},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.005365+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":2,"2":1,"3":3}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":2,"2":1,"3":3},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.005500+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":2,"2":1,"3":7}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":2,"2":1,"3":7},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.005638+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":2,"2":6,"3":7}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":2,"2":6,"3":7},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.005789+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":3,"2":1,"3":1}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":3,"2":1,"3":1},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.005957+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":3,"2":1,"3":2}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":3,"2":1,"3":2},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.006142+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":3,"2":2,"3":4}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":3,"2":2,"3":4},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.006329+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":3,"2":2,"3":3}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":3,"2":2,"3":3},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.006559+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":3,"2":3,"3":4}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":3,"2":3,"3":4},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.006992+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":3,"2":3,"3":3}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":3,"2":3,"3":3},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.007911+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":3,"2":4,"3":7}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":3,"2":4,"3":7},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.008233+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":3,"2":4,"3":6}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":3,"2":4,"3":6},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.008462+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":3,"2":5,"3":6}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":3,"2":5,"3":6},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.008635+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":3,"2":5,"3":4}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":3,"2":5,"3":4},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.008802+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":3,"2":7,"3":2}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":3,"2":7,"3":2},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.008956+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":4,"2":6,"3":6}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":4,"2":6,"3":6},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.009122+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":4,"2":5,"3":4}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":4,"2":5,"3":4},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.009295+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":4,"2":5,"3":5}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":4,"2":5,"3":5},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.009448+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":4,"2":4,"3":2}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":4,"2":4,"3":2},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.009609+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":4,"2":4,"3":1}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":4,"2":4,"3":1},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.009762+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":4,"2":3,"3":7}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":4,"2":3,"3":7},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.009923+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":4,"2":1,"3":3}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":4,"2":1,"3":3},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.010098+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":4,"2":1,"3":6}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":4,"2":1,"3":6},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.010286+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":4,"2":2,"3":5}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":4,"2":2,"3":5},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.010452+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":4,"2":2,"3":4}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":4,"2":2,"3":4},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.010616+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":5,"2":4,"3":6}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":5,"2":4,"3":6},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.010772+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":5,"2":4,"3":4}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":5,"2":4,"3":4},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.010924+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":5,"2":6,"3":2}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":5,"2":6,"3":2},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.011095+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":5,"2":3,"3":4}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":5,"2":3,"3":4},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.011283+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":5,"2":3,"3":6}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":5,"2":3,"3":6},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.011444+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":5,"2":2,"3":2}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":5,"2":2,"3":2},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.011692+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":5,"2":2,"3":3}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":5,"2":2,"3":3},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.011894+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":5,"2":1,"3":6}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":5,"2":1,"3":6},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.012047+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":5,"2":1,"3":7}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":5,"2":1,"3":7},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:00:18.012257+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:18.014851+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.debut_billet AS debut_billet_2, t0.fin_billet AS fin_billet_3, t0.nom AS nom_4, t0.prenom AS prenom_5, t0.user_id AS user_id_6, t0.billet_id AS billet_id_7, t0.date_id AS date_id_8 FROM payer_billet t0 {"sql":"SELECT t0.id AS id_1, t0.debut_billet AS debut_billet_2, t0.fin_billet AS fin_billet_3, t0.nom AS nom_4, t0.prenom AS prenom_5, t0.user_id AS user_id_6, t0.billet_id AS billet_id_7, t0.date_id AS date_id_8 FROM payer_billet t0"} []
[2025-06-18T19:00:18.015413+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.type, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.admin_level AS admin_level_14 FROM "user" t0 WHERE t0.id = ? AND t0.type IN ('user', 'client', 'administrateur') (parameters: array{"1":7}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.type, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.admin_level AS admin_level_14 FROM \"user\" t0 WHERE t0.id = ? AND t0.type IN ('user', 'client', 'administrateur')","params":{"1":7},"types":{"1":1}} []
[2025-06-18T19:00:18.016275+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.type, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.admin_level AS admin_level_14 FROM "user" t0 WHERE t0.id = ? AND t0.type IN ('user', 'client', 'administrateur') (parameters: array{"1":8}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.type, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.admin_level AS admin_level_14 FROM \"user\" t0 WHERE t0.id = ? AND t0.type IN ('user', 'client', 'administrateur')","params":{"1":8},"types":{"1":1}} []
[2025-06-18T19:00:18.016806+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.type, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.admin_level AS admin_level_14 FROM "user" t0 WHERE t0.id = ? AND t0.type IN ('user', 'client', 'administrateur') (parameters: array{"1":9}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.type, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.admin_level AS admin_level_14 FROM \"user\" t0 WHERE t0.id = ? AND t0.type IN ('user', 'client', 'administrateur')","params":{"1":9},"types":{"1":1}} []
[2025-06-18T19:00:18.017255+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.type, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.admin_level AS admin_level_14 FROM "user" t0 WHERE t0.id = ? AND t0.type IN ('user', 'client', 'administrateur') (parameters: array{"1":10}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.type, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.admin_level AS admin_level_14 FROM \"user\" t0 WHERE t0.id = ? AND t0.type IN ('user', 'client', 'administrateur')","params":{"1":10},"types":{"1":1}} []
[2025-06-18T19:00:18.018993+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:18.019196+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":1,"2":27}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":1,"2":27},"types":{"1":1,"2":1}} []
[2025-06-18T19:00:18.019639+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":2,"2":5}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":2,"2":5},"types":{"1":1,"2":1}} []
[2025-06-18T19:00:18.019818+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":2,"2":13}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":2,"2":13},"types":{"1":1,"2":1}} []
[2025-06-18T19:00:18.019971+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":2,"2":16}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":2,"2":16},"types":{"1":1,"2":1}} []
[2025-06-18T19:00:18.020138+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":3,"2":12}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":3,"2":12},"types":{"1":1,"2":1}} []
[2025-06-18T19:00:18.020365+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":4,"2":11}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":4,"2":11},"types":{"1":1,"2":1}} []
[2025-06-18T19:00:18.020592+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":4,"2":15}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":4,"2":15},"types":{"1":1,"2":1}} []
[2025-06-18T19:00:18.020732+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":4,"2":16}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":4,"2":16},"types":{"1":1,"2":1}} []
[2025-06-18T19:00:18.020864+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":5,"2":7}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":5,"2":7},"types":{"1":1,"2":1}} []
[2025-06-18T19:00:18.020992+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":5,"2":28}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":5,"2":28},"types":{"1":1,"2":1}} []
[2025-06-18T19:00:18.021130+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":5,"2":32}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":5,"2":32},"types":{"1":1,"2":1}} []
[2025-06-18T19:00:18.021263+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":6,"2":37}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":6,"2":37},"types":{"1":1,"2":1}} []
[2025-06-18T19:00:18.021391+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":6,"2":20}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":6,"2":20},"types":{"1":1,"2":1}} []
[2025-06-18T19:00:18.021517+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":6,"2":33}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":6,"2":33},"types":{"1":1,"2":1}} []
[2025-06-18T19:00:18.021645+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":7,"2":11}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":7,"2":11},"types":{"1":1,"2":1}} []
[2025-06-18T19:00:18.021773+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":7,"2":33}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":7,"2":33},"types":{"1":1,"2":1}} []
[2025-06-18T19:00:18.021915+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:18.022435+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_format_chambre AS libelle_format_chambre_2, t0.prix_format_chambre AS prix_format_chambre_3, t0.description_format_billet AS description_format_billet_4 FROM format_chambre t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_format_chambre AS libelle_format_chambre_2, t0.prix_format_chambre AS prix_format_chambre_3, t0.description_format_billet AS description_format_billet_4 FROM format_chambre t0"} []
[2025-06-18T19:00:18.022885+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T19:00:18.023168+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.023371+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.023496+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.023591+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.023677+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.023760+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.023843+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.023927+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.024010+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.024099+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.024186+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.024268+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.024351+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.024462+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.024560+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.024653+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.024743+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.024859+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.025147+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.025366+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.025511+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.025630+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.025735+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.025842+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.025945+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.026053+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.026182+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.026291+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.026396+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.026506+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.026618+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.026726+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.026832+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.027041+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.027249+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.027415+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.027528+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.027636+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.027742+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.027851+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.027954+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.028058+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.028191+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.028299+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.028409+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.028522+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.028647+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.028778+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.028899+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.029020+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.029156+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.029293+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.029408+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.029531+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.029645+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.029746+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.029853+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.029964+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.030072+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.030195+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.030302+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.030405+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.030511+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.030614+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.030724+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.030824+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.030985+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.031156+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.031317+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.031473+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.032376+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.032771+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.032881+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.032987+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.033104+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.033204+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.033306+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.033402+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.033502+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.033595+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.033689+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.033796+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.033892+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.033985+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.034098+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.034203+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.034297+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.034396+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.034490+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.034591+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.034683+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.034778+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.034879+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.034971+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.035075+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.035181+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.035278+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.035373+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.035473+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.035569+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.035665+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.035764+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.035867+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.035968+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.036066+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.036171+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.036275+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.036368+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.036463+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.036565+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.036662+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.036756+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.036854+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.036956+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.037049+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.037162+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.037256+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.037361+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.037502+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.037640+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.037774+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.037866+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.037952+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.038043+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.038145+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.038236+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.038326+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.038411+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.038502+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.038587+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.038676+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.038768+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.038850+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.038933+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.039020+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.039110+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.039197+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.039285+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.039366+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.039449+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.039536+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.039621+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.039708+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.039790+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.039872+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.039966+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.040046+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.040137+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.040231+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.040312+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.040394+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.040479+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.040561+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.040651+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.040731+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.040815+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.040904+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.040984+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.041074+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.041165+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.041247+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.041330+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.041417+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.041499+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.041581+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.041667+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.041751+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.041839+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.041921+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.042003+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.042096+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.042181+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.042272+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.042367+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.042453+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.042536+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.042624+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.042713+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.042797+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.042884+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.042964+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.043056+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.043148+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.043232+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.043320+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.043401+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.043488+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.043578+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.043660+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.043744+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.043831+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.043911+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.043999+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.044087+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.044173+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.044266+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.044348+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.044432+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.044520+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.044602+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:00:18.046405+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:18.046883+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":1,"2":"124","3":"Première étage","4":1,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":1,"2":"124","3":"Première étage","4":1,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.047456+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":2,"2":"124","3":"Première étage","4":4,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":2,"2":"124","3":"Première étage","4":4,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.047737+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"124","3":"Première étage","4":2,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":3,"2":"124","3":"Première étage","4":2,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.047959+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":4,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.048183+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"124","3":"Première étage","4":1,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":5,"2":"124","3":"Première étage","4":1,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.048384+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":6,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":6,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.048622+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":7,"2":"124","3":"Première étage","4":3,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":7,"2":"124","3":"Première étage","4":3,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.048793+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":8,"2":"124","3":"Première étage","4":2,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":8,"2":"124","3":"Première étage","4":2,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.048966+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":9,"2":"124","3":"Première étage","4":2,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":9,"2":"124","3":"Première étage","4":2,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.049137+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":10,"2":"124","3":"Première étage","4":2,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":10,"2":"124","3":"Première étage","4":2,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.049311+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":11,"2":"124","3":"Première étage","4":3,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":11,"2":"124","3":"Première étage","4":3,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.049470+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":12,"2":"124","3":"Première étage","4":2,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":12,"2":"124","3":"Première étage","4":2,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.049631+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":13,"2":"124","3":"Première étage","4":2,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":13,"2":"124","3":"Première étage","4":2,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.049798+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":14,"2":"124","3":"Première étage","4":2,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":14,"2":"124","3":"Première étage","4":2,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.049956+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":15,"2":"124","3":"Première étage","4":3,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":15,"2":"124","3":"Première étage","4":3,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.050117+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":16,"2":"124","3":"Première étage","4":2,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":16,"2":"124","3":"Première étage","4":2,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.050287+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":17,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":17,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.050446+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":18,"2":"124","3":"Première étage","4":4,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":18,"2":"124","3":"Première étage","4":4,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.050600+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":19,"2":"124","3":"Première étage","4":2,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":19,"2":"124","3":"Première étage","4":2,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.050763+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":20,"2":"124","3":"Première étage","4":1,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":20,"2":"124","3":"Première étage","4":1,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.050925+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":21,"2":"124","3":"Première étage","4":2,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":21,"2":"124","3":"Première étage","4":2,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.051088+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":22,"2":"124","3":"Première étage","4":1,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":22,"2":"124","3":"Première étage","4":1,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.051257+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":23,"2":"124","3":"Première étage","4":3,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":23,"2":"124","3":"Première étage","4":3,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.051418+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":24,"2":"124","3":"Première étage","4":3,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":24,"2":"124","3":"Première étage","4":3,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.051579+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":25,"2":"124","3":"Première étage","4":1,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":25,"2":"124","3":"Première étage","4":1,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.051743+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":26,"2":"124","3":"Première étage","4":2,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":26,"2":"124","3":"Première étage","4":2,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.051898+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":27,"2":"124","3":"Première étage","4":1,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":27,"2":"124","3":"Première étage","4":1,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.052054+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":28,"2":"124","3":"Première étage","4":4,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":28,"2":"124","3":"Première étage","4":4,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.052232+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":29,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":29,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.052390+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":30,"2":"124","3":"Première étage","4":3,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":30,"2":"124","3":"Première étage","4":3,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.052547+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":31,"2":"124","3":"Première étage","4":2,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":31,"2":"124","3":"Première étage","4":2,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.052705+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":32,"2":"124","3":"Première étage","4":1,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":32,"2":"124","3":"Première étage","4":1,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.052860+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":33,"2":"124","3":"Première étage","4":1,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":33,"2":"124","3":"Première étage","4":1,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.053015+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":34,"2":"124","3":"Première étage","4":1,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":34,"2":"124","3":"Première étage","4":1,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.053181+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":35,"2":"124","3":"Première étage","4":4,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":35,"2":"124","3":"Première étage","4":4,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.053343+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":36,"2":"124","3":"Première étage","4":3,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":36,"2":"124","3":"Première étage","4":3,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.053499+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":37,"2":"124","3":"Première étage","4":1,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":37,"2":"124","3":"Première étage","4":1,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.053658+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":38,"2":"124","3":"Première étage","4":4,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":38,"2":"124","3":"Première étage","4":4,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.053811+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":39,"2":"124","3":"Première étage","4":3,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":39,"2":"124","3":"Première étage","4":3,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.053972+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":40,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":40,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.054152+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":41,"2":"124","3":"Première étage","4":1,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":41,"2":"124","3":"Première étage","4":1,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.054311+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":42,"2":"124","3":"Première étage","4":3,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":42,"2":"124","3":"Première étage","4":3,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.054464+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":43,"2":"124","3":"Première étage","4":1,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":43,"2":"124","3":"Première étage","4":1,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.054632+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":44,"2":"124","3":"Première étage","4":1,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":44,"2":"124","3":"Première étage","4":1,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.054787+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":45,"2":"124","3":"Première étage","4":3,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":45,"2":"124","3":"Première étage","4":3,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.054950+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":46,"2":"124","3":"Première étage","4":2,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":46,"2":"124","3":"Première étage","4":2,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.055112+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":47,"2":"124","3":"Première étage","4":1,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":47,"2":"124","3":"Première étage","4":1,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.055278+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":48,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":48,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.055438+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":49,"2":"124","3":"Première étage","4":4,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":49,"2":"124","3":"Première étage","4":4,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.055594+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":50,"2":"124","3":"Première étage","4":1,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":50,"2":"124","3":"Première étage","4":1,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.055754+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":51,"2":"124","3":"Première étage","4":3,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":51,"2":"124","3":"Première étage","4":3,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.055919+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":52,"2":"124","3":"Première étage","4":1,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":52,"2":"124","3":"Première étage","4":1,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.056085+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":53,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":53,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.056249+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":54,"2":"124","3":"Première étage","4":1,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":54,"2":"124","3":"Première étage","4":1,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.056414+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":55,"2":"124","3":"Première étage","4":2,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":55,"2":"124","3":"Première étage","4":2,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.056575+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":56,"2":"124","3":"Première étage","4":1,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":56,"2":"124","3":"Première étage","4":1,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.056732+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":57,"2":"124","3":"Première étage","4":2,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":57,"2":"124","3":"Première étage","4":2,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.056898+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":58,"2":"124","3":"Première étage","4":2,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":58,"2":"124","3":"Première étage","4":2,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.057052+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":59,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":59,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.057222+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":60,"2":"124","3":"Première étage","4":1,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":60,"2":"124","3":"Première étage","4":1,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.057429+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":61,"2":"124","3":"Première étage","4":4,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":61,"2":"124","3":"Première étage","4":4,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.057625+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":62,"2":"124","3":"Première étage","4":1,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":62,"2":"124","3":"Première étage","4":1,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.057806+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":63,"2":"124","3":"Première étage","4":3,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":63,"2":"124","3":"Première étage","4":3,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.057985+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":64,"2":"124","3":"Première étage","4":1,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":64,"2":"124","3":"Première étage","4":1,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.058161+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":65,"2":"124","3":"Première étage","4":4,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":65,"2":"124","3":"Première étage","4":4,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.058337+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":66,"2":"124","3":"Première étage","4":1,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":66,"2":"124","3":"Première étage","4":1,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.058516+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":67,"2":"124","3":"Première étage","4":1,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":67,"2":"124","3":"Première étage","4":1,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.066215+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":68,"2":"124","3":"Première étage","4":2,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":68,"2":"124","3":"Première étage","4":2,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.066573+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":69,"2":"124","3":"Première étage","4":4,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":69,"2":"124","3":"Première étage","4":4,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.066807+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":70,"2":"124","3":"Première étage","4":4,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":70,"2":"124","3":"Première étage","4":4,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.067022+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":71,"2":"124","3":"Première étage","4":3,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":71,"2":"124","3":"Première étage","4":3,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.067213+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":72,"2":"124","3":"Première étage","4":1,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":72,"2":"124","3":"Première étage","4":1,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.067387+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":73,"2":"124","3":"Première étage","4":1,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":73,"2":"124","3":"Première étage","4":1,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.067564+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":74,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":74,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.067789+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":75,"2":"124","3":"Première étage","4":4,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":75,"2":"124","3":"Première étage","4":4,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.067965+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":76,"2":"124","3":"Première étage","4":4,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":76,"2":"124","3":"Première étage","4":4,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.068175+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":77,"2":"124","3":"Première étage","4":3,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":77,"2":"124","3":"Première étage","4":3,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.068366+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":78,"2":"124","3":"Première étage","4":4,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":78,"2":"124","3":"Première étage","4":4,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.068535+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":79,"2":"124","3":"Première étage","4":3,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":79,"2":"124","3":"Première étage","4":3,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.068695+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":80,"2":"124","3":"Première étage","4":1,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":80,"2":"124","3":"Première étage","4":1,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.068867+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":81,"2":"124","3":"Première étage","4":1,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":81,"2":"124","3":"Première étage","4":1,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.069346+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":82,"2":"124","3":"Première étage","4":2,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":82,"2":"124","3":"Première étage","4":2,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.069657+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":83,"2":"124","3":"Première étage","4":3,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":83,"2":"124","3":"Première étage","4":3,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.069981+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":84,"2":"124","3":"Première étage","4":3,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":84,"2":"124","3":"Première étage","4":3,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.070225+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":85,"2":"124","3":"Première étage","4":3,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":85,"2":"124","3":"Première étage","4":3,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.070432+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":86,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":86,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.070607+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":87,"2":"124","3":"Première étage","4":1,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":87,"2":"124","3":"Première étage","4":1,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.070839+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":88,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":88,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.071025+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":89,"2":"124","3":"Première étage","4":3,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":89,"2":"124","3":"Première étage","4":3,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.071248+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":90,"2":"124","3":"Première étage","4":4,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":90,"2":"124","3":"Première étage","4":4,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.071469+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":91,"2":"124","3":"Première étage","4":2,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":91,"2":"124","3":"Première étage","4":2,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.071638+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":92,"2":"124","3":"Première étage","4":2,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":92,"2":"124","3":"Première étage","4":2,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.071804+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":93,"2":"124","3":"Première étage","4":1,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":93,"2":"124","3":"Première étage","4":1,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.071974+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":94,"2":"124","3":"Première étage","4":1,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":94,"2":"124","3":"Première étage","4":1,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.072163+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":95,"2":"124","3":"Première étage","4":4,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":95,"2":"124","3":"Première étage","4":4,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.072358+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":96,"2":"124","3":"Première étage","4":4,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":96,"2":"124","3":"Première étage","4":4,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.072540+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":97,"2":"124","3":"Première étage","4":2,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":97,"2":"124","3":"Première étage","4":2,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.072701+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":98,"2":"124","3":"Première étage","4":4,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":98,"2":"124","3":"Première étage","4":4,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.072877+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":99,"2":"124","3":"Première étage","4":2,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":99,"2":"124","3":"Première étage","4":2,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.073042+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":100,"2":"124","3":"Première étage","4":3,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":100,"2":"124","3":"Première étage","4":3,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.073226+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":101,"2":"124","3":"Première étage","4":1,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":101,"2":"124","3":"Première étage","4":1,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.073402+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":102,"2":"124","3":"Première étage","4":1,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":102,"2":"124","3":"Première étage","4":1,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.073570+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":103,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":103,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.073731+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":104,"2":"124","3":"Première étage","4":4,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":104,"2":"124","3":"Première étage","4":4,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.073887+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":105,"2":"124","3":"Première étage","4":4,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":105,"2":"124","3":"Première étage","4":4,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.074050+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":106,"2":"124","3":"Première étage","4":4,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":106,"2":"124","3":"Première étage","4":4,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.074230+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":107,"2":"124","3":"Première étage","4":4,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":107,"2":"124","3":"Première étage","4":4,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.074393+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":108,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":108,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.074562+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":109,"2":"124","3":"Première étage","4":3,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":109,"2":"124","3":"Première étage","4":3,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.074722+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":110,"2":"124","3":"Première étage","4":4,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":110,"2":"124","3":"Première étage","4":4,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.074886+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":111,"2":"124","3":"Première étage","4":3,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":111,"2":"124","3":"Première étage","4":3,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.075044+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":112,"2":"124","3":"Première étage","4":1,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":112,"2":"124","3":"Première étage","4":1,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.075215+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":113,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":113,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.075419+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":114,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":114,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.075601+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":115,"2":"124","3":"Première étage","4":3,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":115,"2":"124","3":"Première étage","4":3,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.075764+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":116,"2":"124","3":"Première étage","4":4,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":116,"2":"124","3":"Première étage","4":4,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.075932+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":117,"2":"124","3":"Première étage","4":1,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":117,"2":"124","3":"Première étage","4":1,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.076113+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":118,"2":"124","3":"Première étage","4":1,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":118,"2":"124","3":"Première étage","4":1,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.076299+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":119,"2":"124","3":"Première étage","4":3,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":119,"2":"124","3":"Première étage","4":3,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.076482+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":120,"2":"124","3":"Première étage","4":2,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":120,"2":"124","3":"Première étage","4":2,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.076645+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":121,"2":"124","3":"Première étage","4":4,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":121,"2":"124","3":"Première étage","4":4,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.076924+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":122,"2":"124","3":"Première étage","4":3,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":122,"2":"124","3":"Première étage","4":3,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.077132+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":123,"2":"124","3":"Première étage","4":4,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":123,"2":"124","3":"Première étage","4":4,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.077335+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":124,"2":"124","3":"Première étage","4":1,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":124,"2":"124","3":"Première étage","4":1,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.077517+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":125,"2":"124","3":"Première étage","4":2,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":125,"2":"124","3":"Première étage","4":2,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.077687+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":126,"2":"124","3":"Première étage","4":3,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":126,"2":"124","3":"Première étage","4":3,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.077851+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":127,"2":"124","3":"Première étage","4":2,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":127,"2":"124","3":"Première étage","4":2,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.078015+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":128,"2":"124","3":"Première étage","4":1,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":128,"2":"124","3":"Première étage","4":1,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.078204+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":129,"2":"124","3":"Première étage","4":4,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":129,"2":"124","3":"Première étage","4":4,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.078390+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":130,"2":"124","3":"Première étage","4":2,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":130,"2":"124","3":"Première étage","4":2,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.078553+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":131,"2":"124","3":"Première étage","4":4,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":131,"2":"124","3":"Première étage","4":4,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.078720+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":132,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":132,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.078876+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":133,"2":"124","3":"Première étage","4":4,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":133,"2":"124","3":"Première étage","4":4,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.079032+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":134,"2":"124","3":"Première étage","4":1,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":134,"2":"124","3":"Première étage","4":1,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.079206+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":135,"2":"124","3":"Première étage","4":2,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":135,"2":"124","3":"Première étage","4":2,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.079373+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":136,"2":"124","3":"Première étage","4":2,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":136,"2":"124","3":"Première étage","4":2,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.079531+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":137,"2":"124","3":"Première étage","4":4,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":137,"2":"124","3":"Première étage","4":4,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.079707+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":138,"2":"124","3":"Première étage","4":1,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":138,"2":"124","3":"Première étage","4":1,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.079871+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":139,"2":"124","3":"Première étage","4":1,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":139,"2":"124","3":"Première étage","4":1,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.080032+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":140,"2":"124","3":"Première étage","4":2,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":140,"2":"124","3":"Première étage","4":2,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.080218+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":141,"2":"124","3":"Première étage","4":4,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":141,"2":"124","3":"Première étage","4":4,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.080385+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":142,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":142,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.080566+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":143,"2":"124","3":"Première étage","4":1,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":143,"2":"124","3":"Première étage","4":1,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.080727+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":144,"2":"124","3":"Première étage","4":4,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":144,"2":"124","3":"Première étage","4":4,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.080884+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":145,"2":"124","3":"Première étage","4":4,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":145,"2":"124","3":"Première étage","4":4,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.081056+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":146,"2":"124","3":"Première étage","4":1,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":146,"2":"124","3":"Première étage","4":1,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.081267+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":147,"2":"124","3":"Première étage","4":3,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":147,"2":"124","3":"Première étage","4":3,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.081446+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":148,"2":"124","3":"Première étage","4":3,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":148,"2":"124","3":"Première étage","4":3,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.081615+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":149,"2":"124","3":"Première étage","4":3,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":149,"2":"124","3":"Première étage","4":3,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.081773+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":150,"2":"124","3":"Première étage","4":3,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":150,"2":"124","3":"Première étage","4":3,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.081929+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":151,"2":"124","3":"Première étage","4":3,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":151,"2":"124","3":"Première étage","4":3,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.082106+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":152,"2":"124","3":"Première étage","4":2,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":152,"2":"124","3":"Première étage","4":2,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.082307+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":153,"2":"124","3":"Première étage","4":1,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":153,"2":"124","3":"Première étage","4":1,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.082494+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":154,"2":"124","3":"Première étage","4":3,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":154,"2":"124","3":"Première étage","4":3,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.082660+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":155,"2":"124","3":"Première étage","4":1,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":155,"2":"124","3":"Première étage","4":1,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.082819+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":156,"2":"124","3":"Première étage","4":1,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":156,"2":"124","3":"Première étage","4":1,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.082984+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":157,"2":"124","3":"Première étage","4":3,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":157,"2":"124","3":"Première étage","4":3,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.083159+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":158,"2":"124","3":"Première étage","4":3,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":158,"2":"124","3":"Première étage","4":3,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.083342+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":159,"2":"124","3":"Première étage","4":2,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":159,"2":"124","3":"Première étage","4":2,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.083518+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":160,"2":"124","3":"Première étage","4":1,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":160,"2":"124","3":"Première étage","4":1,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.083682+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":161,"2":"124","3":"Première étage","4":3,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":161,"2":"124","3":"Première étage","4":3,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.083846+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":162,"2":"124","3":"Première étage","4":2,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":162,"2":"124","3":"Première étage","4":2,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.084006+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":163,"2":"124","3":"Première étage","4":4,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":163,"2":"124","3":"Première étage","4":4,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.084182+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":164,"2":"124","3":"Première étage","4":1,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":164,"2":"124","3":"Première étage","4":1,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.084360+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":165,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":165,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.084523+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":166,"2":"124","3":"Première étage","4":1,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":166,"2":"124","3":"Première étage","4":1,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.084690+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":167,"2":"124","3":"Première étage","4":4,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":167,"2":"124","3":"Première étage","4":4,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.084849+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":168,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":168,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.085008+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":169,"2":"124","3":"Première étage","4":3,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":169,"2":"124","3":"Première étage","4":3,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.085186+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":170,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":170,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.085357+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":171,"2":"124","3":"Première étage","4":3,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":171,"2":"124","3":"Première étage","4":3,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.085529+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":172,"2":"124","3":"Première étage","4":3,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":172,"2":"124","3":"Première étage","4":3,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.085697+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":173,"2":"124","3":"Première étage","4":4,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":173,"2":"124","3":"Première étage","4":4,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.085856+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":174,"2":"124","3":"Première étage","4":2,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":174,"2":"124","3":"Première étage","4":2,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.086019+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":175,"2":"124","3":"Première étage","4":2,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":175,"2":"124","3":"Première étage","4":2,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.086188+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":176,"2":"124","3":"Première étage","4":2,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":176,"2":"124","3":"Première étage","4":2,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.086357+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":177,"2":"124","3":"Première étage","4":4,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":177,"2":"124","3":"Première étage","4":4,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.086535+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":178,"2":"124","3":"Première étage","4":2,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":178,"2":"124","3":"Première étage","4":2,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.086697+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":179,"2":"124","3":"Première étage","4":2,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":179,"2":"124","3":"Première étage","4":2,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.086860+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":180,"2":"124","3":"Première étage","4":3,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":180,"2":"124","3":"Première étage","4":3,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.087027+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":181,"2":"124","3":"Première étage","4":3,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":181,"2":"124","3":"Première étage","4":3,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.087196+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":182,"2":"124","3":"Première étage","4":4,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":182,"2":"124","3":"Première étage","4":4,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.087364+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":183,"2":"124","3":"Première étage","4":2,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":183,"2":"124","3":"Première étage","4":2,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.087527+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":184,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":184,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.087691+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":185,"2":"124","3":"Première étage","4":3,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":185,"2":"124","3":"Première étage","4":3,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.087856+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":186,"2":"124","3":"Première étage","4":1,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":186,"2":"124","3":"Première étage","4":1,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.088023+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":187,"2":"124","3":"Première étage","4":4,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":187,"2":"124","3":"Première étage","4":4,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.088189+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":188,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":188,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.088354+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":189,"2":"124","3":"Première étage","4":3,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":189,"2":"124","3":"Première étage","4":3,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.088518+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":190,"2":"124","3":"Première étage","4":4,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":190,"2":"124","3":"Première étage","4":4,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.088675+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":191,"2":"124","3":"Première étage","4":3,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":191,"2":"124","3":"Première étage","4":3,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.088849+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":192,"2":"124","3":"Première étage","4":1,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":192,"2":"124","3":"Première étage","4":1,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.089029+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":193,"2":"124","3":"Première étage","4":1,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":193,"2":"124","3":"Première étage","4":1,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.089203+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":194,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":194,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.089370+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":195,"2":"124","3":"Première étage","4":4,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":195,"2":"124","3":"Première étage","4":4,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.089540+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":196,"2":"124","3":"Première étage","4":1,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":196,"2":"124","3":"Première étage","4":1,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.089708+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":197,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":197,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.089866+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":198,"2":"124","3":"Première étage","4":4,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":198,"2":"124","3":"Première étage","4":4,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.090032+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":199,"2":"124","3":"Première étage","4":1,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":199,"2":"124","3":"Première étage","4":1,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.090209+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":200,"2":"124","3":"Première étage","4":1,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":200,"2":"124","3":"Première étage","4":1,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:00:18.090538+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:18.090969+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.type FROM "user" t0 WHERE t0.type IN ('client') {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.type FROM \"user\" t0 WHERE t0.type IN ('client')"} []
[2025-06-18T19:00:18.091882+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.numero_chambre AS numero_chambre_2, t0.etage_chambre AS etage_chambre_3, t0.hotel_id AS hotel_id_4, t0.format_chambre_id AS format_chambre_id_5 FROM chambre t0 {"sql":"SELECT t0.id AS id_1, t0.numero_chambre AS numero_chambre_2, t0.etage_chambre AS etage_chambre_3, t0.hotel_id AS hotel_id_4, t0.format_chambre_id AS format_chambre_id_5 FROM chambre t0"} []
[2025-06-18T19:00:18.095339+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.date AS date_2 FROM date t0 {"sql":"SELECT t0.id AS id_1, t0.date AS date_2 FROM date t0"} []
[2025-06-18T19:00:18.096527+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.097186+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.097664+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.098002+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.098311+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.098590+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.098867+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.099397+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.100480+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.100738+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.100900+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.101050+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.101228+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.101390+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.101530+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.101651+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.101765+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.101907+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.102051+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.102220+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.102355+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.102500+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.102629+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.102779+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.102914+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.103106+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.103300+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.103467+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.103625+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.103760+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.103907+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.104047+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.104185+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.104311+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.104451+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.104573+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.104727+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.104859+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.105008+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.105154+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:00:18.107170+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:18.107558+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":1,"2":5,"3":"2025-07-06 23:08:06","4":"2025-07-10 23:08:06","5":7,"6":22,"7":67}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":1,"2":5,"3":"2025-07-06 23:08:06","4":"2025-07-10 23:08:06","5":7,"6":22,"7":67},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:00:18.108450+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":2,"2":null,"3":"2025-06-27 16:45:45","4":"2025-06-30 16:45:45","5":7,"6":131,"7":77}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":2,"2":null,"3":"2025-06-27 16:45:45","4":"2025-06-30 16:45:45","5":7,"6":131,"7":77},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:00:18.110015+00:00] doctrine.DEBUG: Executing statement: ROLLBACK TO SAVEPOINT DOCTRINE_2 {"sql":"ROLLBACK TO SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:00:18.110261+00:00] doctrine.DEBUG: Rolling back transaction [] []
[2025-06-18T19:00:18.110891+00:00] console.CRITICAL: Error thrown while running command "doctrine:fixtures:load". Message: "An exception occurred while executing a query: SQLSTATE[23502]: Not null violation: 7 ERROR:  null value in column "note" of relation "louer_hotel" violates not-null constraint DETAIL:  Failing row contains (2, 7, 131, 77, null, 2025-06-27 16:45:45, 2025-06-30 16:45:45)." {"exception":"[object] (Doctrine\\DBAL\\Exception\\NotNullConstraintViolationException(code: 7): An exception occurred while executing a query: SQLSTATE[23502]: Not null violation: 7 ERROR:  null value in column \"note\" of relation \"louer_hotel\" violates not-null constraint\nDETAIL:  Failing row contains (2, 7, 131, 77, null, 2025-06-27 16:45:45, 2025-06-30 16:45:45). at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:47)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[23502]: Not null violation: 7 ERROR:  null value in column \"note\" of relation \"louer_hotel\" violates not-null constraint\nDETAIL:  Failing row contains (2, 7, 131, 77, null, 2025-06-27 16:45:45, 2025-06-30 16:45:45). at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 23502): SQLSTATE[23502]: Not null violation: 7 ERROR:  null value in column \"note\" of relation \"louer_hotel\" violates not-null constraint\nDETAIL:  Failing row contains (2, 7, 131, 77, null, 2025-06-27 16:45:45, 2025-06-30 16:45:45). at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Statement.php:130)","command":"doctrine:fixtures:load","message":"An exception occurred while executing a query: SQLSTATE[23502]: Not null violation: 7 ERROR:  null value in column \"note\" of relation \"louer_hotel\" violates not-null constraint\nDETAIL:  Failing row contains (2, 7, 131, 77, null, 2025-06-27 16:45:45, 2025-06-30 16:45:45)."} []
[2025-06-18T19:00:18.111171+00:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "7" {"command":"doctrine:fixtures:load","code":7} []
[2025-06-18T19:00:18.115790+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T19:02:56.963389+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T19:02:56.974288+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T19:02:58.307463+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-06-18T19:02:58.310103+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T19:02:58.318400+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T19:02:58.328551+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T19:02:58.335051+00:00] doctrine.DEBUG: Executing statement: DELETE FROM remboursement_hotel {"sql":"DELETE FROM remboursement_hotel"} []
[2025-06-18T19:02:58.335717+00:00] doctrine.DEBUG: Executing statement: DELETE FROM louer_hotel {"sql":"DELETE FROM louer_hotel"} []
[2025-06-18T19:02:58.336033+00:00] doctrine.DEBUG: Executing statement: DELETE FROM remboursement_billet {"sql":"DELETE FROM remboursement_billet"} []
[2025-06-18T19:02:58.336273+00:00] doctrine.DEBUG: Executing statement: DELETE FROM remboursement {"sql":"DELETE FROM remboursement"} []
[2025-06-18T19:02:58.336524+00:00] doctrine.DEBUG: Executing statement: DELETE FROM payer_billet {"sql":"DELETE FROM payer_billet"} []
[2025-06-18T19:02:58.336815+00:00] doctrine.DEBUG: Executing statement: DELETE FROM reserver_restaurant {"sql":"DELETE FROM reserver_restaurant"} []
[2025-06-18T19:02:58.337132+00:00] doctrine.DEBUG: Executing statement: DELETE FROM "user" {"sql":"DELETE FROM \"user\""} []
[2025-06-18T19:02:58.337454+00:00] doctrine.DEBUG: Executing statement: DELETE FROM dinosaure {"sql":"DELETE FROM dinosaure"} []
[2025-06-18T19:02:58.337672+00:00] doctrine.DEBUG: Executing statement: DELETE FROM enclos {"sql":"DELETE FROM enclos"} []
[2025-06-18T19:02:58.337848+00:00] doctrine.DEBUG: Executing statement: DELETE FROM acheter_produit {"sql":"DELETE FROM acheter_produit"} []
[2025-06-18T19:02:58.338037+00:00] doctrine.DEBUG: Executing statement: DELETE FROM produit {"sql":"DELETE FROM produit"} []
[2025-06-18T19:02:58.338230+00:00] doctrine.DEBUG: Executing statement: DELETE FROM ouverture_restaurant {"sql":"DELETE FROM ouverture_restaurant"} []
[2025-06-18T19:02:58.338459+00:00] doctrine.DEBUG: Executing statement: DELETE FROM horaire {"sql":"DELETE FROM horaire"} []
[2025-06-18T19:02:58.338615+00:00] doctrine.DEBUG: Executing statement: DELETE FROM chambre {"sql":"DELETE FROM chambre"} []
[2025-06-18T19:02:58.338797+00:00] doctrine.DEBUG: Executing statement: DELETE FROM format_chambre {"sql":"DELETE FROM format_chambre"} []
[2025-06-18T19:02:58.338965+00:00] doctrine.DEBUG: Executing statement: DELETE FROM "commande" {"sql":"DELETE FROM \"commande\""} []
[2025-06-18T19:02:58.339116+00:00] doctrine.DEBUG: Executing statement: DELETE FROM restaurant {"sql":"DELETE FROM restaurant"} []
[2025-06-18T19:02:58.339284+00:00] doctrine.DEBUG: Executing statement: DELETE FROM hotel {"sql":"DELETE FROM hotel"} []
[2025-06-18T19:02:58.339463+00:00] doctrine.DEBUG: Executing statement: DELETE FROM biome {"sql":"DELETE FROM biome"} []
[2025-06-18T19:02:58.339616+00:00] doctrine.DEBUG: Executing statement: DELETE FROM date {"sql":"DELETE FROM date"} []
[2025-06-18T19:02:58.339754+00:00] doctrine.DEBUG: Executing statement: DELETE FROM format_billet {"sql":"DELETE FROM format_billet"} []
[2025-06-18T19:02:58.339903+00:00] doctrine.DEBUG: Executing statement: DELETE FROM jour {"sql":"DELETE FROM jour"} []
[2025-06-18T19:02:58.829952+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:02:59.319043+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:02:59.805039+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:03:00.292344+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:03:00.778718+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:03:00.783012+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:00.787202+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, admin_level, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":11,"2":"admin1@parc.com","3":"$2y$13$Sk2W8zVOmDzxk2JqgWQ7I.TH.d95SSq.A1SWXLqpri232NtGUceb2","4":"0600000001","5":"Pierre","6":"Chartier","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":1,"12":"administrateur"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":1,"12":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, admin_level, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":11,"2":"admin1@parc.com","3":"$2y$13$Sk2W8zVOmDzxk2JqgWQ7I.TH.d95SSq.A1SWXLqpri232NtGUceb2","4":"0600000001","5":"Pierre","6":"Chartier","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":1,"12":"administrateur"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":1,"12":2}} []
[2025-06-18T19:03:00.787807+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, admin_level, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":12,"2":"admin2@parc.com","3":"$2y$13$Ki2kiuHIAePrV6YPiJ.3X.TXS8jQC.nYPD.8cZaiio.nGSuTWDcoK","4":"0600000002","5":"Martin","6":"Bruno","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":2,"12":"administrateur"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":1,"12":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, admin_level, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":12,"2":"admin2@parc.com","3":"$2y$13$Ki2kiuHIAePrV6YPiJ.3X.TXS8jQC.nYPD.8cZaiio.nGSuTWDcoK","4":"0600000002","5":"Martin","6":"Bruno","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":2,"12":"administrateur"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":1,"12":2}} []
[2025-06-18T19:03:00.788137+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, admin_level, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":13,"2":"admin3@parc.com","3":"$2y$13$eTqWPQ0Ky6nQk9P.A7BXo.58Qy8K13nWEC2BwVmJn9SdGGcbJLTD.","4":"0600000003","5":"Lemoine","6":"Chloé","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":3,"12":"administrateur"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":1,"12":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, admin_level, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":13,"2":"admin3@parc.com","3":"$2y$13$eTqWPQ0Ky6nQk9P.A7BXo.58Qy8K13nWEC2BwVmJn9SdGGcbJLTD.","4":"0600000003","5":"Lemoine","6":"Chloé","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":3,"12":"administrateur"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":1,"12":2}} []
[2025-06-18T19:03:00.788409+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, admin_level, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":14,"2":"admin4@parc.com","3":"$2y$13$aI1.qPYU3yT/l4gUUT1sZeRg1VY2T5n0ouqLpo5RUsjVCLXX8KTDS","4":"0600000004","5":"Bernard","6":"David","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":2,"12":"administrateur"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":1,"12":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, admin_level, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":14,"2":"admin4@parc.com","3":"$2y$13$aI1.qPYU3yT/l4gUUT1sZeRg1VY2T5n0ouqLpo5RUsjVCLXX8KTDS","4":"0600000004","5":"Bernard","6":"David","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":2,"12":"administrateur"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":1,"12":2}} []
[2025-06-18T19:03:00.788630+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, admin_level, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":15,"2":"admin5@parc.com","3":"$2y$13$U5vcZ1MLdwikRmQfEqtHde2Wt2kH48iAujJ/ES4Ips5HX/Oo6JNaK","4":"0600000005","5":"Petit","6":"Emma","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":1,"12":"administrateur"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":1,"12":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, admin_level, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":15,"2":"admin5@parc.com","3":"$2y$13$U5vcZ1MLdwikRmQfEqtHde2Wt2kH48iAujJ/ES4Ips5HX/Oo6JNaK","4":"0600000005","5":"Petit","6":"Emma","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":1,"12":"administrateur"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":1,"12":2}} []
[2025-06-18T19:03:00.789017+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:00.789335+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:03:00.789703+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:03:00.789881+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:03:00.790000+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:03:00.790117+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:03:00.790226+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:03:00.790381+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:03:00.790668+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:03:00.790829+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:03:00.790962+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:03:00.791251+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:00.791516+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":11,"2":"Savane","3":"Une vaste étendue herbeuse parsemée d’arbres, idéale pour les grands herbivores."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":11,"2":"Savane","3":"Une vaste étendue herbeuse parsemée d’arbres, idéale pour les grands herbivores."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:03:00.791981+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":12,"2":"Forêt tropicale","3":"Un environnement humide et dense en végétation, abritant des espèces rares et exotiques."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":12,"2":"Forêt tropicale","3":"Un environnement humide et dense en végétation, abritant des espèces rares et exotiques."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:03:00.792202+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":13,"2":"Désert","3":"Un biome aride avec des températures extrêmes, peuplé de créatures adaptées à la sécheresse."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":13,"2":"Désert","3":"Un biome aride avec des températures extrêmes, peuplé de créatures adaptées à la sécheresse."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:03:00.792475+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":14,"2":"Montagne","3":"Un terrain escarpé aux conditions climatiques variables, parfait pour les espèces résistantes."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":14,"2":"Montagne","3":"Un terrain escarpé aux conditions climatiques variables, parfait pour les espèces résistantes."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:03:00.792680+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":15,"2":"Marécage","3":"Un biome humide et vaseux où vivent des espèces amphibies et semi-aquatiques."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":15,"2":"Marécage","3":"Un biome humide et vaseux où vivent des espèces amphibies et semi-aquatiques."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:03:00.792861+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":16,"2":"Plaines","3":"Des étendues ouvertes de végétation basse, idéales pour les grands troupeaux de dinosaures."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":16,"2":"Plaines","3":"Des étendues ouvertes de végétation basse, idéales pour les grands troupeaux de dinosaures."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:03:00.793011+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":17,"2":"Jungle","3":"Une forêt dense et tropicale, riche en biodiversité et peu explorée."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":17,"2":"Jungle","3":"Une forêt dense et tropicale, riche en biodiversité et peu explorée."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:03:00.793203+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":18,"2":"Toundra","3":"Une zone froide avec peu de végétation, habitée par des espèces résistantes au froid."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":18,"2":"Toundra","3":"Une zone froide avec peu de végétation, habitée par des espèces résistantes au froid."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:03:00.793354+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":19,"2":"Volcanique","3":"Un biome rocheux, chaud et instable, proche d’activités géothermiques."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":19,"2":"Volcanique","3":"Un biome rocheux, chaud et instable, proche d’activités géothermiques."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:03:00.793490+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":20,"2":"Lac","3":"Un grand plan d’eau entouré de végétation aquatique, idéal pour les espèces semi-aquatiques."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":20,"2":"Lac","3":"Un grand plan d’eau entouré de végétation aquatique, idéal pour les espèces semi-aquatiques."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:03:00.793640+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:01.280400+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:03:01.765971+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:03:02.251919+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:03:02.738038+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:03:03.224116+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:03:03.224658+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.224901+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, adresse_postal, code_postal, otp, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":16,"2":"lucas.dupont@mail.com","3":"$2y$13$IWf2BXTQ7Go398aso5b.Iu46yUnQR.rcLW65H8MglFHDG5/pUerXy","4":"0612345678","5":"Dupont","6":"Lucas","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"12 Rue des Tricératops","12":75001,"13":null,"14":"client"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2,"12":1,"13":2,"14":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, adresse_postal, code_postal, otp, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":16,"2":"lucas.dupont@mail.com","3":"$2y$13$IWf2BXTQ7Go398aso5b.Iu46yUnQR.rcLW65H8MglFHDG5/pUerXy","4":"0612345678","5":"Dupont","6":"Lucas","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"12 Rue des Tricératops","12":75001,"13":null,"14":"client"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2,"12":1,"13":2,"14":2}} []
[2025-06-18T19:03:03.225232+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, adresse_postal, code_postal, otp, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":17,"2":"marie.lemoine@mail.com","3":"$2y$13$xkST.3Yr/Bqns3zI5ucmLuWH1OrlzSrn7cSXLsUtAVzNguIJ2L.Xm","4":"0623456789","5":"Lemoine","6":"Marie","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"5 Avenue des Raptors","12":69002,"13":null,"14":"client"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2,"12":1,"13":2,"14":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, adresse_postal, code_postal, otp, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":17,"2":"marie.lemoine@mail.com","3":"$2y$13$xkST.3Yr/Bqns3zI5ucmLuWH1OrlzSrn7cSXLsUtAVzNguIJ2L.Xm","4":"0623456789","5":"Lemoine","6":"Marie","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"5 Avenue des Raptors","12":69002,"13":null,"14":"client"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2,"12":1,"13":2,"14":2}} []
[2025-06-18T19:03:03.225501+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, adresse_postal, code_postal, otp, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":18,"2":"kevin.nguyen@mail.com","3":"$2y$13$Ys4RVHk9/5..1tL4Vh9S5uEJ01x8.pSzwExbu49LkS5QEBYRSP.bC","4":"0634567890","5":"Nguyen","6":"Kevin","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"24 Allée des Palmiers","12":13003,"13":null,"14":"client"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2,"12":1,"13":2,"14":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, adresse_postal, code_postal, otp, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":18,"2":"kevin.nguyen@mail.com","3":"$2y$13$Ys4RVHk9/5..1tL4Vh9S5uEJ01x8.pSzwExbu49LkS5QEBYRSP.bC","4":"0634567890","5":"Nguyen","6":"Kevin","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"24 Allée des Palmiers","12":13003,"13":null,"14":"client"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2,"12":1,"13":2,"14":2}} []
[2025-06-18T19:03:03.225715+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, adresse_postal, code_postal, otp, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":19,"2":"claire.bertrand@mail.com","3":"$2y$13$m.6P3uT2YD7C8st3/IBkme6Yhfpg2PJjLL60.0/NWTQnVQ/CCh8Fu","4":"0645678901","5":"Bertrand","6":"Claire","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"8 Boulevard des Fossiles","12":44000,"13":null,"14":"client"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2,"12":1,"13":2,"14":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, adresse_postal, code_postal, otp, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":19,"2":"claire.bertrand@mail.com","3":"$2y$13$m.6P3uT2YD7C8st3/IBkme6Yhfpg2PJjLL60.0/NWTQnVQ/CCh8Fu","4":"0645678901","5":"Bertrand","6":"Claire","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"8 Boulevard des Fossiles","12":44000,"13":null,"14":"client"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2,"12":1,"13":2,"14":2}} []
[2025-06-18T19:03:03.225938+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, adresse_postal, code_postal, otp, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":20,"2":"sophie.rodriguez@mail.com","3":"$2y$13$2BlT07vED.JQ7cyPqcsJ5O02Lh/AbutPRr0YW64Elrrf0AaukREA.","4":"0656789012","5":"Rodriguez","6":"Sophie","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"15 Route du T-Rex","12":34000,"13":null,"14":"client"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2,"12":1,"13":2,"14":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, adresse_postal, code_postal, otp, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":20,"2":"sophie.rodriguez@mail.com","3":"$2y$13$2BlT07vED.JQ7cyPqcsJ5O02Lh/AbutPRr0YW64Elrrf0AaukREA.","4":"0656789012","5":"Rodriguez","6":"Sophie","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"15 Route du T-Rex","12":34000,"13":null,"14":"client"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2,"12":1,"13":2,"14":2}} []
[2025-06-18T19:03:03.226122+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.226320+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.226570+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.226768+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.226896+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.227065+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.227292+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.227506+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.227669+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.227832+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.228125+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.228312+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.228461+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.228600+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.228735+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.228863+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.228982+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.229113+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.229259+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.229390+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.229523+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.229658+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.229788+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.229906+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.230118+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.230263+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.230376+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.230487+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.230597+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.230703+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.230814+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.230939+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.231129+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.231387+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.231629+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.231819+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.232000+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.232256+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.232409+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.232544+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.232658+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.232791+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.232920+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.233036+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.233169+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.233304+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.233420+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.233533+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.233629+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.233731+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.233884+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.233998+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.234121+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.234255+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.234392+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.234538+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.235511+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.235826+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.235942+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.236065+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.236204+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.236340+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.236429+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.236520+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.236613+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.236692+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.236778+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.236863+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.236943+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.237023+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.237115+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.237203+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.237283+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.237370+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.237450+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.237538+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.237616+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.237695+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.237780+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.237859+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.237938+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:03:03.238183+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.238432+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":81,"2":"2025-06-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":81,"2":"2025-06-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.238767+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":82,"2":"2025-06-19 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":82,"2":"2025-06-19 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.238959+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":83,"2":"2025-06-20 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":83,"2":"2025-06-20 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.239114+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":84,"2":"2025-06-21 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":84,"2":"2025-06-21 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.239246+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":85,"2":"2025-06-22 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":85,"2":"2025-06-22 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.239376+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":86,"2":"2025-06-23 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":86,"2":"2025-06-23 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.239514+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":87,"2":"2025-06-24 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":87,"2":"2025-06-24 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.239634+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":88,"2":"2025-06-25 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":88,"2":"2025-06-25 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.239753+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":89,"2":"2025-06-26 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":89,"2":"2025-06-26 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.239881+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":90,"2":"2025-06-27 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":90,"2":"2025-06-27 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.239998+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":91,"2":"2025-06-28 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":91,"2":"2025-06-28 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.240126+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":92,"2":"2025-06-29 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":92,"2":"2025-06-29 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.240287+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":93,"2":"2025-06-30 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":93,"2":"2025-06-30 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.240419+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":94,"2":"2025-07-01 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":94,"2":"2025-07-01 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.240540+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":95,"2":"2025-07-02 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":95,"2":"2025-07-02 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.240680+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":96,"2":"2025-07-03 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":96,"2":"2025-07-03 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.240807+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":97,"2":"2025-07-04 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":97,"2":"2025-07-04 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.240925+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":98,"2":"2025-07-05 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":98,"2":"2025-07-05 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.241058+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":99,"2":"2025-07-06 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":99,"2":"2025-07-06 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.241193+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":100,"2":"2025-07-07 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":100,"2":"2025-07-07 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.241366+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":101,"2":"2025-06-17 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":101,"2":"2025-06-17 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.241508+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":102,"2":"2025-06-16 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":102,"2":"2025-06-16 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.241629+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":103,"2":"2025-06-15 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":103,"2":"2025-06-15 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.241759+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":104,"2":"2025-06-14 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":104,"2":"2025-06-14 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.241885+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":105,"2":"2025-06-13 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":105,"2":"2025-06-13 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.242007+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":106,"2":"2025-06-12 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":106,"2":"2025-06-12 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.242140+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":107,"2":"2025-06-11 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":107,"2":"2025-06-11 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.242262+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":108,"2":"2025-06-10 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":108,"2":"2025-06-10 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.242387+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":109,"2":"2025-06-09 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":109,"2":"2025-06-09 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.242512+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":110,"2":"2025-06-08 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":110,"2":"2025-06-08 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.242632+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":111,"2":"2025-06-07 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":111,"2":"2025-06-07 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.242752+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":112,"2":"2025-06-06 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":112,"2":"2025-06-06 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.242873+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":113,"2":"2025-06-05 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":113,"2":"2025-06-05 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.242991+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":114,"2":"2025-06-04 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":114,"2":"2025-06-04 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.243112+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":115,"2":"2025-06-03 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":115,"2":"2025-06-03 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.243246+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":116,"2":"2025-06-02 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":116,"2":"2025-06-02 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.243366+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":117,"2":"2025-06-01 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":117,"2":"2025-06-01 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.243484+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":118,"2":"2025-05-31 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":118,"2":"2025-05-31 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.243612+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":119,"2":"2025-05-30 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":119,"2":"2025-05-30 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.243733+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":120,"2":"2025-05-29 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":120,"2":"2025-05-29 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.243849+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":121,"2":"2025-05-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":121,"2":"2025-05-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.243974+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":122,"2":"2025-04-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":122,"2":"2025-04-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.244137+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":123,"2":"2025-03-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":123,"2":"2025-03-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.244354+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":124,"2":"2025-02-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":124,"2":"2025-02-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.244522+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":125,"2":"2025-01-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":125,"2":"2025-01-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.244679+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":126,"2":"2024-12-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":126,"2":"2024-12-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.244813+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":127,"2":"2024-11-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":127,"2":"2024-11-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.244955+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":128,"2":"2024-10-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":128,"2":"2024-10-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.245085+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":129,"2":"2024-09-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":129,"2":"2024-09-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.245223+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":130,"2":"2024-08-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":130,"2":"2024-08-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.245385+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":131,"2":"2024-07-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":131,"2":"2024-07-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.245508+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":132,"2":"2024-06-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":132,"2":"2024-06-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.245624+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":133,"2":"2024-05-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":133,"2":"2024-05-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.245751+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":134,"2":"2024-04-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":134,"2":"2024-04-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.245871+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":135,"2":"2024-03-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":135,"2":"2024-03-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.245998+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":136,"2":"2024-02-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":136,"2":"2024-02-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.246130+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":137,"2":"2024-01-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":137,"2":"2024-01-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.246252+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":138,"2":"2023-12-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":138,"2":"2023-12-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.246377+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":139,"2":"2023-11-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":139,"2":"2023-11-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.246494+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":140,"2":"2023-10-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":140,"2":"2023-10-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.246617+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":141,"2":"2024-06-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":141,"2":"2024-06-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.246739+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":142,"2":"2023-06-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":142,"2":"2023-06-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.246858+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":143,"2":"2022-06-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":143,"2":"2022-06-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.246972+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":144,"2":"2021-06-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":144,"2":"2021-06-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.247103+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":145,"2":"2020-06-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":145,"2":"2020-06-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.247227+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":146,"2":"2019-06-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":146,"2":"2019-06-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.247347+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":147,"2":"2018-06-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":147,"2":"2018-06-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.247478+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":148,"2":"2017-06-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":148,"2":"2017-06-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.247598+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":149,"2":"2016-06-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":149,"2":"2016-06-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.247719+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":150,"2":"2015-06-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":150,"2":"2015-06-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.247842+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":151,"2":"2014-06-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":151,"2":"2014-06-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.247958+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":152,"2":"2013-06-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":152,"2":"2013-06-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.248079+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":153,"2":"2012-06-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":153,"2":"2012-06-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.248211+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":154,"2":"2011-06-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":154,"2":"2011-06-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.248327+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":155,"2":"2010-06-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":155,"2":"2010-06-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.248448+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":156,"2":"2009-06-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":156,"2":"2009-06-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.248571+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":157,"2":"2008-06-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":157,"2":"2008-06-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.248698+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":158,"2":"2007-06-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":158,"2":"2007-06-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.248818+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":159,"2":"2006-06-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":159,"2":"2006-06-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.248941+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":160,"2":"2005-06-18 19:03:03"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":160,"2":"2005-06-18 19:03:03"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.249119+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.249333+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_billet_id_seq') {"sql":"SELECT NEXTVAL('format_billet_id_seq')"} []
[2025-06-18T19:03:03.249629+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_billet_id_seq') {"sql":"SELECT NEXTVAL('format_billet_id_seq')"} []
[2025-06-18T19:03:03.249774+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_billet_id_seq') {"sql":"SELECT NEXTVAL('format_billet_id_seq')"} []
[2025-06-18T19:03:03.249896+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_billet_id_seq') {"sql":"SELECT NEXTVAL('format_billet_id_seq')"} []
[2025-06-18T19:03:03.249996+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_billet_id_seq') {"sql":"SELECT NEXTVAL('format_billet_id_seq')"} []
[2025-06-18T19:03:03.250169+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.250316+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":6,"2":"Classique","3":"classique.jpg","4":"Un billet standard donnant accès à toutes les zones principales du parc.","5":50}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?)","params":{"1":6,"2":"Classique","3":"classique.jpg","4":"Un billet standard donnant accès à toutes les zones principales du parc.","5":50},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:03:03.250539+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":7,"2":"VIP","3":"vip.jpg","4":"Accès privilégié avec coupe-file, visite guidée et places réservées aux spectacles.","5":120}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?)","params":{"1":7,"2":"VIP","3":"vip.jpg","4":"Accès privilégié avec coupe-file, visite guidée et places réservées aux spectacles.","5":120},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:03:03.250698+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":8,"2":"Famille","3":"famille.jpg","4":"Pack avantageux pour 2 adultes et jusqu’à 3 enfants.","5":160}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?)","params":{"1":8,"2":"Famille","3":"famille.jpg","4":"Pack avantageux pour 2 adultes et jusqu’à 3 enfants.","5":160},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:03:03.250847+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":9,"2":"Étudiant","3":"etudiant.jpg","4":"Tarif réduit sur présentation d’une carte étudiante valide.","5":35}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?)","params":{"1":9,"2":"Étudiant","3":"etudiant.jpg","4":"Tarif réduit sur présentation d’une carte étudiante valide.","5":35},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:03:03.250993+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":10,"2":"Soirée","3":"soiree.jpg","4":"Billet valable uniquement en fin de journée pour découvrir le parc au coucher du soleil.","5":25}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?)","params":{"1":10,"2":"Soirée","3":"soiree.jpg","4":"Billet valable uniquement en fin de journée pour découvrir le parc au coucher du soleil.","5":25},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:03:03.251143+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.264020+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('horaire_id_seq') {"sql":"SELECT NEXTVAL('horaire_id_seq')"} []
[2025-06-18T19:03:03.264462+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('horaire_id_seq') {"sql":"SELECT NEXTVAL('horaire_id_seq')"} []
[2025-06-18T19:03:03.264640+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('horaire_id_seq') {"sql":"SELECT NEXTVAL('horaire_id_seq')"} []
[2025-06-18T19:03:03.264767+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('horaire_id_seq') {"sql":"SELECT NEXTVAL('horaire_id_seq')"} []
[2025-06-18T19:03:03.264872+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('horaire_id_seq') {"sql":"SELECT NEXTVAL('horaire_id_seq')"} []
[2025-06-18T19:03:03.264969+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('horaire_id_seq') {"sql":"SELECT NEXTVAL('horaire_id_seq')"} []
[2025-06-18T19:03:03.265090+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('horaire_id_seq') {"sql":"SELECT NEXTVAL('horaire_id_seq')"} []
[2025-06-18T19:03:03.265272+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.265428+00:00] doctrine.DEBUG: Executing statement: INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?) (parameters: array{"1":8,"2":"2025-06-18 10:00:00","3":"2025-06-18 19:00:00"}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?)","params":{"1":8,"2":"2025-06-18 10:00:00","3":"2025-06-18 19:00:00"},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:03:03.265644+00:00] doctrine.DEBUG: Executing statement: INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?) (parameters: array{"1":9,"2":"2025-06-19 08:00:00","3":"2025-06-19 17:00:00"}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?)","params":{"1":9,"2":"2025-06-19 08:00:00","3":"2025-06-19 17:00:00"},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:03:03.265796+00:00] doctrine.DEBUG: Executing statement: INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?) (parameters: array{"1":10,"2":"2025-06-20 09:00:00","3":"2025-06-20 18:00:00"}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?)","params":{"1":10,"2":"2025-06-20 09:00:00","3":"2025-06-20 18:00:00"},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:03:03.265933+00:00] doctrine.DEBUG: Executing statement: INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?) (parameters: array{"1":11,"2":"2025-06-21 09:00:00","3":"2025-06-21 18:00:00"}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?)","params":{"1":11,"2":"2025-06-21 09:00:00","3":"2025-06-21 18:00:00"},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:03:03.266097+00:00] doctrine.DEBUG: Executing statement: INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?) (parameters: array{"1":12,"2":"2025-06-22 09:00:00","3":"2025-06-22 18:00:00"}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?)","params":{"1":12,"2":"2025-06-22 09:00:00","3":"2025-06-22 18:00:00"},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:03:03.266296+00:00] doctrine.DEBUG: Executing statement: INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?) (parameters: array{"1":13,"2":"2025-06-23 09:00:00","3":"2025-06-23 18:00:00"}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?)","params":{"1":13,"2":"2025-06-23 09:00:00","3":"2025-06-23 18:00:00"},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:03:03.266432+00:00] doctrine.DEBUG: Executing statement: INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?) (parameters: array{"1":14,"2":"2025-06-24 09:00:00","3":"2025-06-24 18:00:00"}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?)","params":{"1":14,"2":"2025-06-24 09:00:00","3":"2025-06-24 18:00:00"},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:03:03.266558+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.266721+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('jour_id_seq') {"sql":"SELECT NEXTVAL('jour_id_seq')"} []
[2025-06-18T19:03:03.266983+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('jour_id_seq') {"sql":"SELECT NEXTVAL('jour_id_seq')"} []
[2025-06-18T19:03:03.267180+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('jour_id_seq') {"sql":"SELECT NEXTVAL('jour_id_seq')"} []
[2025-06-18T19:03:03.267286+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('jour_id_seq') {"sql":"SELECT NEXTVAL('jour_id_seq')"} []
[2025-06-18T19:03:03.267373+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('jour_id_seq') {"sql":"SELECT NEXTVAL('jour_id_seq')"} []
[2025-06-18T19:03:03.267469+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('jour_id_seq') {"sql":"SELECT NEXTVAL('jour_id_seq')"} []
[2025-06-18T19:03:03.267551+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('jour_id_seq') {"sql":"SELECT NEXTVAL('jour_id_seq')"} []
[2025-06-18T19:03:03.267677+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.267815+00:00] doctrine.DEBUG: Executing statement: INSERT INTO jour (id, libelle_jour) VALUES (?, ?) (parameters: array{"1":8,"2":"Lundi"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO jour (id, libelle_jour) VALUES (?, ?)","params":{"1":8,"2":"Lundi"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.268011+00:00] doctrine.DEBUG: Executing statement: INSERT INTO jour (id, libelle_jour) VALUES (?, ?) (parameters: array{"1":9,"2":"Mardi"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO jour (id, libelle_jour) VALUES (?, ?)","params":{"1":9,"2":"Mardi"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.268163+00:00] doctrine.DEBUG: Executing statement: INSERT INTO jour (id, libelle_jour) VALUES (?, ?) (parameters: array{"1":10,"2":"Mercredi"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO jour (id, libelle_jour) VALUES (?, ?)","params":{"1":10,"2":"Mercredi"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.268289+00:00] doctrine.DEBUG: Executing statement: INSERT INTO jour (id, libelle_jour) VALUES (?, ?) (parameters: array{"1":11,"2":"Jeudi"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO jour (id, libelle_jour) VALUES (?, ?)","params":{"1":11,"2":"Jeudi"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.268400+00:00] doctrine.DEBUG: Executing statement: INSERT INTO jour (id, libelle_jour) VALUES (?, ?) (parameters: array{"1":12,"2":"Vendredi"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO jour (id, libelle_jour) VALUES (?, ?)","params":{"1":12,"2":"Vendredi"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.268515+00:00] doctrine.DEBUG: Executing statement: INSERT INTO jour (id, libelle_jour) VALUES (?, ?) (parameters: array{"1":13,"2":"Samedi"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO jour (id, libelle_jour) VALUES (?, ?)","params":{"1":13,"2":"Samedi"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.268619+00:00] doctrine.DEBUG: Executing statement: INSERT INTO jour (id, libelle_jour) VALUES (?, ?) (parameters: array{"1":14,"2":"Dimanche"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO jour (id, libelle_jour) VALUES (?, ?)","params":{"1":14,"2":"Dimanche"},"types":{"1":1,"2":2}} []
[2025-06-18T19:03:03.268725+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.268890+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:03:03.269147+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:03:03.269282+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:03:03.269378+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:03:03.269489+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:03:03.269572+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:03:03.269652+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:03:03.269743+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:03:03.269832+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:03:03.269921+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:03:03.270011+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:03:03.270214+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:03:03.270457+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.270620+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":13,"2":"Peluches Dino","3":"img/Produits/peluche.jpg","4":"Peluches douces représentant vos dinosaures préférés.","5":100,"6":1,"7":25.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":13,"2":"Peluches Dino","3":"img/Produits/peluche.jpg","4":"Peluches douces représentant vos dinosaures préférés.","5":100,"6":1,"7":25.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:03:03.270845+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":14,"2":"Casquette Jurassic","3":"img/Produits/casquette.jpg","4":"Casquette officielle du parc avec logo brodé.","5":50,"6":1,"7":18.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":14,"2":"Casquette Jurassic","3":"img/Produits/casquette.jpg","4":"Casquette officielle du parc avec logo brodé.","5":50,"6":1,"7":18.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:03:03.271019+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":15,"2":"Gourde personnalisée","3":"img/Produits/gourde.jpg","4":"Gourde réutilisable avec prénom gravé, souvenir idéal.","5":75,"6":1,"7":15.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":15,"2":"Gourde personnalisée","3":"img/Produits/gourde.jpg","4":"Gourde réutilisable avec prénom gravé, souvenir idéal.","5":75,"6":1,"7":15.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:03:03.271182+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":16,"2":"Poster panoramique","3":"img/Produits/poster.jpg","4":"Poster géant du parc vu du ciel, édition limitée.","5":30,"6":1,"7":100.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":16,"2":"Poster panoramique","3":"img/Produits/poster.jpg","4":"Poster géant du parc vu du ciel, édition limitée.","5":30,"6":1,"7":100.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:03:03.271335+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":17,"2":"Mug T-Rex","3":"img/Produits/mug.jpg","4":"Mug en céramique avec illustration du célèbre T-Rex.","5":0,"6":0,"7":12.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":17,"2":"Mug T-Rex","3":"img/Produits/mug.jpg","4":"Mug en céramique avec illustration du célèbre T-Rex.","5":0,"6":0,"7":12.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:03:03.271493+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":18,"2":"Sweat Velociraptor","3":"img/Produits/sweat.jpg","4":"Sweat à capuche ultra-confort avec motif Velociraptor en action.","5":45,"6":1,"7":40.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":18,"2":"Sweat Velociraptor","3":"img/Produits/sweat.jpg","4":"Sweat à capuche ultra-confort avec motif Velociraptor en action.","5":45,"6":1,"7":40.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:03:03.271633+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":19,"2":"Bracelet Fossile","3":"img/Produits/bracelet.jpg","4":"Bracelet en cuir avec pièce imitation fossile, élégant et préhistorique.","5":60,"6":1,"7":22.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":19,"2":"Bracelet Fossile","3":"img/Produits/bracelet.jpg","4":"Bracelet en cuir avec pièce imitation fossile, élégant et préhistorique.","5":60,"6":1,"7":22.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:03:03.271857+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":20,"2":"Sac à dos Isla Nublar","3":"img/Produits/sac.jpg","4":"Sac pratique avec carte du parc imprimée, idéal pour les explorateurs.","5":35,"6":1,"7":35.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":20,"2":"Sac à dos Isla Nublar","3":"img/Produits/sac.jpg","4":"Sac pratique avec carte du parc imprimée, idéal pour les explorateurs.","5":35,"6":1,"7":35.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:03:03.272104+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":21,"2":"Carnet Jurassic Notes","3":"img/Produits/carnet.jpg","4":"Petit carnet à spirale pour noter vos observations de terrain.","5":120,"6":1,"7":7.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":21,"2":"Carnet Jurassic Notes","3":"img/Produits/carnet.jpg","4":"Petit carnet à spirale pour noter vos observations de terrain.","5":120,"6":1,"7":7.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:03:03.272291+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":22,"2":"Stylo Raptor","3":"img/Produits/stylo.jpg","4":"Stylo noir avec tête de raptor en 3D, parfait pour écrire avec style.","5":200,"6":1,"7":40.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":22,"2":"Stylo Raptor","3":"img/Produits/stylo.jpg","4":"Stylo noir avec tête de raptor en 3D, parfait pour écrire avec style.","5":200,"6":1,"7":40.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:03:03.272474+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":23,"2":"T-Shirt DNA Lab","3":"img/Produits/tshirt.jpg","4":"T-shirt minimaliste avec logo du laboratoire ADN.","5":80,"6":1,"7":20.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":23,"2":"T-Shirt DNA Lab","3":"img/Produits/tshirt.jpg","4":"T-shirt minimaliste avec logo du laboratoire ADN.","5":80,"6":1,"7":20.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:03:03.272639+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":24,"2":"Badge VIP Jurassic","3":"img/Produits/badge.jpg","4":"Badge collector pour visiteurs privilégiés (ne donne pas accès au T-Rex 🦖).","5":300,"6":1,"7":5.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":24,"2":"Badge VIP Jurassic","3":"img/Produits/badge.jpg","4":"Badge collector pour visiteurs privilégiés (ne donne pas accès au T-Rex 🦖).","5":300,"6":1,"7":5.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:03:03.272799+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.273838+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0"} []
[2025-06-18T19:03:03.276503+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('hotel_id_seq') {"sql":"SELECT NEXTVAL('hotel_id_seq')"} []
[2025-06-18T19:03:03.276872+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('hotel_id_seq') {"sql":"SELECT NEXTVAL('hotel_id_seq')"} []
[2025-06-18T19:03:03.277139+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('hotel_id_seq') {"sql":"SELECT NEXTVAL('hotel_id_seq')"} []
[2025-06-18T19:03:03.277365+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('hotel_id_seq') {"sql":"SELECT NEXTVAL('hotel_id_seq')"} []
[2025-06-18T19:03:03.277931+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.278778+00:00] doctrine.DEBUG: Executing statement: INSERT INTO hotel (id, libelle_hotel, image_hotel, description_hotel, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Hôtel Jurassique","3":"img/Hotels/hotel1.jpg","4":"Un hôtel tout confort au cœur du parc, idéal pour observer les dinosaures.","5":14}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO hotel (id, libelle_hotel, image_hotel, description_hotel, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":5,"2":"Hôtel Jurassique","3":"img/Hotels/hotel1.jpg","4":"Un hôtel tout confort au cœur du parc, idéal pour observer les dinosaures.","5":14},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:03:03.279973+00:00] doctrine.DEBUG: Executing statement: INSERT INTO hotel (id, libelle_hotel, image_hotel, description_hotel, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":6,"2":"Hôtel Safari","3":"img/Hotels/hotel2.jpg","4":"Dormez sous les étoiles avec vue sur les plaines préhistoriques.","5":11}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO hotel (id, libelle_hotel, image_hotel, description_hotel, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":6,"2":"Hôtel Safari","3":"img/Hotels/hotel2.jpg","4":"Dormez sous les étoiles avec vue sur les plaines préhistoriques.","5":11},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:03:03.280422+00:00] doctrine.DEBUG: Executing statement: INSERT INTO hotel (id, libelle_hotel, image_hotel, description_hotel, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":7,"2":"Refuge Volcanique","3":"img/Hotels/hotel3.jpg","4":"Un hébergement insolite à proximité d’un ancien volcan actif.","5":14}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO hotel (id, libelle_hotel, image_hotel, description_hotel, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":7,"2":"Refuge Volcanique","3":"img/Hotels/hotel3.jpg","4":"Un hébergement insolite à proximité d’un ancien volcan actif.","5":14},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:03:03.280669+00:00] doctrine.DEBUG: Executing statement: INSERT INTO hotel (id, libelle_hotel, image_hotel, description_hotel, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":8,"2":"Lodge Tropical","3":"img/Hotels/hotel4.jpg","4":"Une immersion totale dans la jungle, au plus près de la nature.","5":15}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO hotel (id, libelle_hotel, image_hotel, description_hotel, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":8,"2":"Lodge Tropical","3":"img/Hotels/hotel4.jpg","4":"Une immersion totale dans la jungle, au plus près de la nature.","5":15},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:03:03.280886+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.281187+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0"} []
[2025-06-18T19:03:03.281613+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:03:03.282046+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:03:03.282256+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:03:03.282391+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:03:03.282506+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:03:03.282614+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:03:03.282709+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:03:03.282814+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:03:03.282953+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:03:03.283101+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:03:03.283404+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.283617+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":11,"2":"Enclos #1","3":13}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":11,"2":"Enclos #1","3":13},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:03:03.284055+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":12,"2":"Enclos #2","3":17}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":12,"2":"Enclos #2","3":17},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:03:03.284234+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":13,"2":"Enclos #3","3":20}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":13,"2":"Enclos #3","3":20},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:03:03.284381+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":14,"2":"Enclos #4","3":16}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":14,"2":"Enclos #4","3":16},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:03:03.289195+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":15,"2":"Enclos #5","3":19}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":15,"2":"Enclos #5","3":19},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:03:03.290172+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":16,"2":"Enclos #6","3":13}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":16,"2":"Enclos #6","3":13},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:03:03.290873+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":17,"2":"Enclos #7","3":19}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":17,"2":"Enclos #7","3":19},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:03:03.291342+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":18,"2":"Enclos #8","3":20}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":18,"2":"Enclos #8","3":20},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:03:03.291678+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":19,"2":"Enclos #9","3":16}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":19,"2":"Enclos #9","3":16},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:03:03.292044+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":20,"2":"Enclos #10","3":11}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":20,"2":"Enclos #10","3":11},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:03:03.292412+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.292682+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0"} []
[2025-06-18T19:03:03.293131+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('restaurant_id_seq') {"sql":"SELECT NEXTVAL('restaurant_id_seq')"} []
[2025-06-18T19:03:03.293522+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('restaurant_id_seq') {"sql":"SELECT NEXTVAL('restaurant_id_seq')"} []
[2025-06-18T19:03:03.293778+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('restaurant_id_seq') {"sql":"SELECT NEXTVAL('restaurant_id_seq')"} []
[2025-06-18T19:03:03.293982+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('restaurant_id_seq') {"sql":"SELECT NEXTVAL('restaurant_id_seq')"} []
[2025-06-18T19:03:03.294246+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('restaurant_id_seq') {"sql":"SELECT NEXTVAL('restaurant_id_seq')"} []
[2025-06-18T19:03:03.294653+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.294928+00:00] doctrine.DEBUG: Executing statement: INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":6,"2":"Jurassic Grill","3":"img/Restaurants/res1.jpg","4":40,"5":19}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":6,"2":"Jurassic Grill","3":"img/Restaurants/res1.jpg","4":40,"5":19},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.295579+00:00] doctrine.DEBUG: Executing statement: INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":7,"2":"Dino Dîner","3":"img/Restaurants/res2.jpg","4":30,"5":11}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":7,"2":"Dino Dîner","3":"img/Restaurants/res2.jpg","4":30,"5":11},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.295943+00:00] doctrine.DEBUG: Executing statement: INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":8,"2":"Volcan Pizza","3":"img/Restaurants/res3.jpg","4":20,"5":18}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":8,"2":"Volcan Pizza","3":"img/Restaurants/res3.jpg","4":20,"5":18},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.296204+00:00] doctrine.DEBUG: Executing statement: INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":9,"2":"Herbivore Café","3":"img/Restaurants/res4.jpg","4":20,"5":19}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":9,"2":"Herbivore Café","3":"img/Restaurants/res4.jpg","4":20,"5":19},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.296415+00:00] doctrine.DEBUG: Executing statement: INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":10,"2":"T-Rex Snack","3":"img/Restaurants/res5.jpg","4":15,"5":12}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":10,"2":"T-Rex Snack","3":"img/Restaurants/res5.jpg","4":15,"5":12},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.296606+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.297210+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.type FROM "user" t0 WHERE t0.type IN ('client') {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.type FROM \"user\" t0 WHERE t0.type IN ('client')"} []
[2025-06-18T19:03:03.298179+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.date AS date_2 FROM date t0 {"sql":"SELECT t0.id AS id_1, t0.date AS date_2 FROM date t0"} []
[2025-06-18T19:03:03.298983+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_billet AS libelle_billet_2, t0.image_billet AS image_billet_3, t0.description_billet AS description_billet_4, t0.prix_billet AS prix_billet_5 FROM format_billet t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_billet AS libelle_billet_2, t0.image_billet AS image_billet_3, t0.description_billet AS description_billet_4, t0.prix_billet AS prix_billet_5 FROM format_billet t0"} []
[2025-06-18T19:03:03.299358+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.299604+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.299754+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.299886+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.300020+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.300162+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.300313+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.300454+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.300577+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.300687+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.300798+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.300914+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.301024+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.301145+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.301265+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.301373+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.301490+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.301606+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.301714+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.301825+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.301945+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.302057+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.302194+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.302313+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.302432+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.302679+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.303432+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.303965+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.304228+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.304535+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.304811+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.305056+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.305285+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.305528+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.305768+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.305994+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.306237+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.306411+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.306603+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.306864+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:03:03.308153+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.308611+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":41,"2":"2025-07-23 01:02:57","3":"2025-07-24 01:02:57","4":"Lemoine","5":"Marie","6":17,"7":7,"8":87}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":41,"2":"2025-07-23 01:02:57","3":"2025-07-24 01:02:57","4":"Lemoine","5":"Marie","6":17,"7":7,"8":87},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.309604+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":42,"2":"2025-07-17 08:50:05","3":"2025-07-18 08:50:05","4":"Lemoine","5":"Marie","6":17,"7":10,"8":115}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":42,"2":"2025-07-17 08:50:05","3":"2025-07-18 08:50:05","4":"Lemoine","5":"Marie","6":17,"7":10,"8":115},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.310274+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":43,"2":"2025-04-30 07:57:00","3":"2025-05-01 07:57:00","4":"Lemoine","5":"Marie","6":17,"7":7,"8":138}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":43,"2":"2025-04-30 07:57:00","3":"2025-05-01 07:57:00","4":"Lemoine","5":"Marie","6":17,"7":7,"8":138},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.310854+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":44,"2":"2025-07-12 14:45:00","3":"2025-07-13 14:45:00","4":"Lemoine","5":"Marie","6":17,"7":10,"8":116}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":44,"2":"2025-07-12 14:45:00","3":"2025-07-13 14:45:00","4":"Lemoine","5":"Marie","6":17,"7":10,"8":116},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.311299+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":45,"2":"2025-06-09 09:33:12","3":"2025-06-10 09:33:12","4":"Lemoine","5":"Marie","6":17,"7":6,"8":103}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":45,"2":"2025-06-09 09:33:12","3":"2025-06-10 09:33:12","4":"Lemoine","5":"Marie","6":17,"7":6,"8":103},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.311638+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":46,"2":"2025-08-14 19:32:04","3":"2025-08-15 19:32:04","4":"Lemoine","5":"Marie","6":17,"7":7,"8":144}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":46,"2":"2025-08-14 19:32:04","3":"2025-08-15 19:32:04","4":"Lemoine","5":"Marie","6":17,"7":7,"8":144},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.311930+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":47,"2":"2025-04-22 22:19:22","3":"2025-04-23 22:19:22","4":"Lemoine","5":"Marie","6":17,"7":10,"8":135}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":47,"2":"2025-04-22 22:19:22","3":"2025-04-23 22:19:22","4":"Lemoine","5":"Marie","6":17,"7":10,"8":135},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.312157+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":48,"2":"2025-06-01 19:21:25","3":"2025-06-02 19:21:25","4":"Lemoine","5":"Marie","6":17,"7":9,"8":148}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":48,"2":"2025-06-01 19:21:25","3":"2025-06-02 19:21:25","4":"Lemoine","5":"Marie","6":17,"7":9,"8":148},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.312363+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":49,"2":"2025-05-18 22:38:12","3":"2025-05-19 22:38:12","4":"Lemoine","5":"Marie","6":17,"7":6,"8":82}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":49,"2":"2025-05-18 22:38:12","3":"2025-05-19 22:38:12","4":"Lemoine","5":"Marie","6":17,"7":6,"8":82},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.312570+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":50,"2":"2025-07-18 15:53:30","3":"2025-07-19 15:53:30","4":"Lemoine","5":"Marie","6":17,"7":9,"8":93}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":50,"2":"2025-07-18 15:53:30","3":"2025-07-19 15:53:30","4":"Lemoine","5":"Marie","6":17,"7":9,"8":93},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.312765+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":51,"2":"2025-06-04 17:36:04","3":"2025-06-05 17:36:04","4":"Nguyen","5":"Kevin","6":18,"7":7,"8":92}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":51,"2":"2025-06-04 17:36:04","3":"2025-06-05 17:36:04","4":"Nguyen","5":"Kevin","6":18,"7":7,"8":92},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.312956+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":52,"2":"2025-06-15 03:18:15","3":"2025-06-16 03:18:15","4":"Nguyen","5":"Kevin","6":18,"7":6,"8":141}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":52,"2":"2025-06-15 03:18:15","3":"2025-06-16 03:18:15","4":"Nguyen","5":"Kevin","6":18,"7":6,"8":141},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.313277+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":53,"2":"2025-07-28 15:27:57","3":"2025-07-29 15:27:57","4":"Nguyen","5":"Kevin","6":18,"7":10,"8":158}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":53,"2":"2025-07-28 15:27:57","3":"2025-07-29 15:27:57","4":"Nguyen","5":"Kevin","6":18,"7":10,"8":158},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.313468+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":54,"2":"2025-05-20 12:14:31","3":"2025-05-21 12:14:31","4":"Nguyen","5":"Kevin","6":18,"7":9,"8":141}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":54,"2":"2025-05-20 12:14:31","3":"2025-05-21 12:14:31","4":"Nguyen","5":"Kevin","6":18,"7":9,"8":141},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.313667+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":55,"2":"2025-06-30 22:27:32","3":"2025-07-01 22:27:32","4":"Nguyen","5":"Kevin","6":18,"7":10,"8":92}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":55,"2":"2025-06-30 22:27:32","3":"2025-07-01 22:27:32","4":"Nguyen","5":"Kevin","6":18,"7":10,"8":92},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.313857+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":56,"2":"2025-06-16 22:06:15","3":"2025-06-17 22:06:15","4":"Nguyen","5":"Kevin","6":18,"7":6,"8":140}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":56,"2":"2025-06-16 22:06:15","3":"2025-06-17 22:06:15","4":"Nguyen","5":"Kevin","6":18,"7":6,"8":140},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.314042+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":57,"2":"2025-07-02 00:53:48","3":"2025-07-03 00:53:48","4":"Nguyen","5":"Kevin","6":18,"7":9,"8":126}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":57,"2":"2025-07-02 00:53:48","3":"2025-07-03 00:53:48","4":"Nguyen","5":"Kevin","6":18,"7":9,"8":126},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.314258+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":58,"2":"2025-08-12 20:57:05","3":"2025-08-13 20:57:05","4":"Nguyen","5":"Kevin","6":18,"7":10,"8":88}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":58,"2":"2025-08-12 20:57:05","3":"2025-08-13 20:57:05","4":"Nguyen","5":"Kevin","6":18,"7":10,"8":88},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.314447+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":59,"2":"2025-08-13 01:43:03","3":"2025-08-14 01:43:03","4":"Nguyen","5":"Kevin","6":18,"7":7,"8":81}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":59,"2":"2025-08-13 01:43:03","3":"2025-08-14 01:43:03","4":"Nguyen","5":"Kevin","6":18,"7":7,"8":81},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.314635+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":60,"2":"2025-05-23 13:13:16","3":"2025-05-24 13:13:16","4":"Nguyen","5":"Kevin","6":18,"7":6,"8":122}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":60,"2":"2025-05-23 13:13:16","3":"2025-05-24 13:13:16","4":"Nguyen","5":"Kevin","6":18,"7":6,"8":122},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.314834+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":61,"2":"2025-08-09 07:44:50","3":"2025-08-10 07:44:50","4":"Bertrand","5":"Claire","6":19,"7":10,"8":159}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":61,"2":"2025-08-09 07:44:50","3":"2025-08-10 07:44:50","4":"Bertrand","5":"Claire","6":19,"7":10,"8":159},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.315028+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":62,"2":"2025-08-04 06:58:11","3":"2025-08-05 06:58:11","4":"Bertrand","5":"Claire","6":19,"7":7,"8":95}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":62,"2":"2025-08-04 06:58:11","3":"2025-08-05 06:58:11","4":"Bertrand","5":"Claire","6":19,"7":7,"8":95},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.315223+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":63,"2":"2025-05-21 06:20:32","3":"2025-05-22 06:20:32","4":"Bertrand","5":"Claire","6":19,"7":7,"8":115}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":63,"2":"2025-05-21 06:20:32","3":"2025-05-22 06:20:32","4":"Bertrand","5":"Claire","6":19,"7":7,"8":115},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.315419+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":64,"2":"2025-06-18 10:06:45","3":"2025-06-19 10:06:45","4":"Bertrand","5":"Claire","6":19,"7":6,"8":158}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":64,"2":"2025-06-18 10:06:45","3":"2025-06-19 10:06:45","4":"Bertrand","5":"Claire","6":19,"7":6,"8":158},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.315607+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":65,"2":"2025-07-15 11:25:42","3":"2025-07-16 11:25:42","4":"Bertrand","5":"Claire","6":19,"7":7,"8":104}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":65,"2":"2025-07-15 11:25:42","3":"2025-07-16 11:25:42","4":"Bertrand","5":"Claire","6":19,"7":7,"8":104},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.315839+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":66,"2":"2025-06-11 10:31:32","3":"2025-06-12 10:31:32","4":"Bertrand","5":"Claire","6":19,"7":8,"8":113}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":66,"2":"2025-06-11 10:31:32","3":"2025-06-12 10:31:32","4":"Bertrand","5":"Claire","6":19,"7":8,"8":113},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.316015+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":67,"2":"2025-08-15 22:14:40","3":"2025-08-16 22:14:40","4":"Bertrand","5":"Claire","6":19,"7":6,"8":120}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":67,"2":"2025-08-15 22:14:40","3":"2025-08-16 22:14:40","4":"Bertrand","5":"Claire","6":19,"7":6,"8":120},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.316197+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":68,"2":"2025-05-24 06:59:10","3":"2025-05-25 06:59:10","4":"Bertrand","5":"Claire","6":19,"7":6,"8":116}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":68,"2":"2025-05-24 06:59:10","3":"2025-05-25 06:59:10","4":"Bertrand","5":"Claire","6":19,"7":6,"8":116},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.316356+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":69,"2":"2025-06-23 01:49:18","3":"2025-06-24 01:49:18","4":"Bertrand","5":"Claire","6":19,"7":6,"8":121}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":69,"2":"2025-06-23 01:49:18","3":"2025-06-24 01:49:18","4":"Bertrand","5":"Claire","6":19,"7":6,"8":121},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.316509+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":70,"2":"2025-08-09 13:46:45","3":"2025-08-10 13:46:45","4":"Bertrand","5":"Claire","6":19,"7":9,"8":130}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":70,"2":"2025-08-09 13:46:45","3":"2025-08-10 13:46:45","4":"Bertrand","5":"Claire","6":19,"7":9,"8":130},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.316656+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":71,"2":"2025-05-21 18:52:42","3":"2025-05-22 18:52:42","4":"Rodriguez","5":"Sophie","6":20,"7":6,"8":150}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":71,"2":"2025-05-21 18:52:42","3":"2025-05-22 18:52:42","4":"Rodriguez","5":"Sophie","6":20,"7":6,"8":150},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.316804+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":72,"2":"2025-06-28 21:39:43","3":"2025-06-29 21:39:43","4":"Rodriguez","5":"Sophie","6":20,"7":7,"8":99}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":72,"2":"2025-06-28 21:39:43","3":"2025-06-29 21:39:43","4":"Rodriguez","5":"Sophie","6":20,"7":7,"8":99},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.316956+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":73,"2":"2025-07-08 21:54:10","3":"2025-07-09 21:54:10","4":"Rodriguez","5":"Sophie","6":20,"7":8,"8":82}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":73,"2":"2025-07-08 21:54:10","3":"2025-07-09 21:54:10","4":"Rodriguez","5":"Sophie","6":20,"7":8,"8":82},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.317108+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":74,"2":"2025-04-28 05:17:17","3":"2025-04-29 05:17:17","4":"Rodriguez","5":"Sophie","6":20,"7":8,"8":135}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":74,"2":"2025-04-28 05:17:17","3":"2025-04-29 05:17:17","4":"Rodriguez","5":"Sophie","6":20,"7":8,"8":135},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.317265+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":75,"2":"2025-05-23 04:02:07","3":"2025-05-24 04:02:07","4":"Rodriguez","5":"Sophie","6":20,"7":6,"8":112}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":75,"2":"2025-05-23 04:02:07","3":"2025-05-24 04:02:07","4":"Rodriguez","5":"Sophie","6":20,"7":6,"8":112},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.317420+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":76,"2":"2025-06-03 10:51:18","3":"2025-06-04 10:51:18","4":"Rodriguez","5":"Sophie","6":20,"7":10,"8":125}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":76,"2":"2025-06-03 10:51:18","3":"2025-06-04 10:51:18","4":"Rodriguez","5":"Sophie","6":20,"7":10,"8":125},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.317567+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":77,"2":"2025-07-09 09:53:32","3":"2025-07-10 09:53:32","4":"Rodriguez","5":"Sophie","6":20,"7":6,"8":147}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":77,"2":"2025-07-09 09:53:32","3":"2025-07-10 09:53:32","4":"Rodriguez","5":"Sophie","6":20,"7":6,"8":147},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.317715+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":78,"2":"2025-07-04 14:29:19","3":"2025-07-05 14:29:19","4":"Rodriguez","5":"Sophie","6":20,"7":8,"8":136}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":78,"2":"2025-07-04 14:29:19","3":"2025-07-05 14:29:19","4":"Rodriguez","5":"Sophie","6":20,"7":8,"8":136},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.317879+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":79,"2":"2025-05-01 11:31:11","3":"2025-05-02 11:31:11","4":"Rodriguez","5":"Sophie","6":20,"7":10,"8":147}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":79,"2":"2025-05-01 11:31:11","3":"2025-05-02 11:31:11","4":"Rodriguez","5":"Sophie","6":20,"7":10,"8":147},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.318026+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":80,"2":"2025-06-20 15:32:00","3":"2025-06-21 15:32:00","4":"Rodriguez","5":"Sophie","6":20,"7":10,"8":82}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":80,"2":"2025-06-20 15:32:00","3":"2025-06-21 15:32:00","4":"Rodriguez","5":"Sophie","6":20,"7":10,"8":82},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:03:03.318197+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.318529+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.type FROM "user" t0 WHERE t0.type IN ('client') {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.type FROM \"user\" t0 WHERE t0.type IN ('client')"} []
[2025-06-18T19:03:03.319651+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.debut_billet AS debut_billet_2, t0.fin_billet AS fin_billet_3, t0.nom AS nom_4, t0.prenom AS prenom_5, t0.user_id AS user_id_6, t0.billet_id AS billet_id_7, t0.date_id AS date_id_8 FROM payer_billet t0 {"sql":"SELECT t0.id AS id_1, t0.debut_billet AS debut_billet_2, t0.fin_billet AS fin_billet_3, t0.nom AS nom_4, t0.prenom AS prenom_5, t0.user_id AS user_id_6, t0.billet_id AS billet_id_7, t0.date_id AS date_id_8 FROM payer_billet t0"} []
[2025-06-18T19:03:03.326709+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('remboursement_id_seq') {"sql":"SELECT NEXTVAL('remboursement_id_seq')"} []
[2025-06-18T19:03:03.328055+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('remboursement_id_seq') {"sql":"SELECT NEXTVAL('remboursement_id_seq')"} []
[2025-06-18T19:03:03.328365+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('remboursement_id_seq') {"sql":"SELECT NEXTVAL('remboursement_id_seq')"} []
[2025-06-18T19:03:03.328588+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('remboursement_id_seq') {"sql":"SELECT NEXTVAL('remboursement_id_seq')"} []
[2025-06-18T19:03:03.328788+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('remboursement_id_seq') {"sql":"SELECT NEXTVAL('remboursement_id_seq')"} []
[2025-06-18T19:03:03.328955+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('remboursement_id_seq') {"sql":"SELECT NEXTVAL('remboursement_id_seq')"} []
[2025-06-18T19:03:03.329130+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('remboursement_id_seq') {"sql":"SELECT NEXTVAL('remboursement_id_seq')"} []
[2025-06-18T19:03:03.329714+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.329928+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":8,"2":"2025-04-23 05:56:28","3":"En attente","4":"Eum optio veniam nesciunt temporibus reprehenderit doloremque ut impedit et quis.","5":56.79,"6":20,"7":49}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}) {"sql":"INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":8,"2":"2025-04-23 05:56:28","3":"En attente","4":"Eum optio veniam nesciunt temporibus reprehenderit doloremque ut impedit et quis.","5":56.79,"6":20,"7":49},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}} []
[2025-06-18T19:03:03.330476+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":9,"2":"2025-06-11 18:44:55","3":"En attente","4":"Id illo voluptate occaecati deleniti explicabo doloremque reprehenderit.","5":26.12,"6":19,"7":72}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}) {"sql":"INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":9,"2":"2025-06-11 18:44:55","3":"En attente","4":"Id illo voluptate occaecati deleniti explicabo doloremque reprehenderit.","5":26.12,"6":19,"7":72},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}} []
[2025-06-18T19:03:03.330791+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":10,"2":"2025-05-06 16:06:58","3":"Refusé","4":"Vitae accusantium aspernatur id voluptates eligendi similique.","5":12.25,"6":16,"7":67}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}) {"sql":"INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":10,"2":"2025-05-06 16:06:58","3":"Refusé","4":"Vitae accusantium aspernatur id voluptates eligendi similique.","5":12.25,"6":16,"7":67},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}} []
[2025-06-18T19:03:03.331078+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":11,"2":"2025-06-14 01:16:02","3":"En attente","4":"Porro neque aut iste harum explicabo nostrum nisi deleniti fugit amet amet soluta nobis.","5":44.01,"6":19,"7":55}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}) {"sql":"INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":11,"2":"2025-06-14 01:16:02","3":"En attente","4":"Porro neque aut iste harum explicabo nostrum nisi deleniti fugit amet amet soluta nobis.","5":44.01,"6":19,"7":55},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}} []
[2025-06-18T19:03:03.331401+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":12,"2":"2025-04-28 21:28:34","3":"En attente","4":"Quas ipsum est quas qui nihil expedita qui est quibusdam minima quia qui.","5":20.38,"6":17,"7":49}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}) {"sql":"INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":12,"2":"2025-04-28 21:28:34","3":"En attente","4":"Quas ipsum est quas qui nihil expedita qui est quibusdam minima quia qui.","5":20.38,"6":17,"7":49},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}} []
[2025-06-18T19:03:03.331643+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":13,"2":"2025-05-17 15:56:25","3":"En attente","4":"Et deleniti dolores quibusdam assumenda iste quaerat eum et consequatur ut.","5":60.09,"6":17,"7":67}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}) {"sql":"INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":13,"2":"2025-05-17 15:56:25","3":"En attente","4":"Et deleniti dolores quibusdam assumenda iste quaerat eum et consequatur ut.","5":60.09,"6":17,"7":67},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}} []
[2025-06-18T19:03:03.331890+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":14,"2":"2025-05-07 02:37:04","3":"En attente","4":"Perspiciatis voluptatibus sit suscipit hic repellendus ex expedita quas iure aut sint eligendi quaerat.","5":13.0,"6":19,"7":73}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}) {"sql":"INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":14,"2":"2025-05-07 02:37:04","3":"En attente","4":"Perspiciatis voluptatibus sit suscipit hic repellendus ex expedita quas iure aut sint eligendi quaerat.","5":13.0,"6":19,"7":73},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}} []
[2025-06-18T19:03:03.332080+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.332315+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_chambre_id_seq') {"sql":"SELECT NEXTVAL('format_chambre_id_seq')"} []
[2025-06-18T19:03:03.332680+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_chambre_id_seq') {"sql":"SELECT NEXTVAL('format_chambre_id_seq')"} []
[2025-06-18T19:03:03.332885+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_chambre_id_seq') {"sql":"SELECT NEXTVAL('format_chambre_id_seq')"} []
[2025-06-18T19:03:03.333011+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_chambre_id_seq') {"sql":"SELECT NEXTVAL('format_chambre_id_seq')"} []
[2025-06-18T19:03:03.333126+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_chambre_id_seq') {"sql":"SELECT NEXTVAL('format_chambre_id_seq')"} []
[2025-06-18T19:03:03.333338+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.333488+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?) (parameters: array{"1":6,"2":"Chambre Standard","3":90,"4":"Une chambre confortable avec un lit double, salle de bain privée et vue sur le parc."}, types: array{"1":1,"2":2,"3":1,"4":2}) {"sql":"INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?)","params":{"1":6,"2":"Chambre Standard","3":90,"4":"Une chambre confortable avec un lit double, salle de bain privée et vue sur le parc."},"types":{"1":1,"2":2,"3":1,"4":2}} []
[2025-06-18T19:03:03.333704+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?) (parameters: array{"1":7,"2":"Chambre Familiale","3":140,"4":"Spacieuse, idéale pour les familles avec lits superposés, lit double et coin salon."}, types: array{"1":1,"2":2,"3":1,"4":2}) {"sql":"INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?)","params":{"1":7,"2":"Chambre Familiale","3":140,"4":"Spacieuse, idéale pour les familles avec lits superposés, lit double et coin salon."},"types":{"1":1,"2":2,"3":1,"4":2}} []
[2025-06-18T19:03:03.333876+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?) (parameters: array{"1":8,"2":"Suite Luxe","3":250,"4":"Suite haut de gamme avec jacuzzi privé, balcon panoramique et services exclusifs."}, types: array{"1":1,"2":2,"3":1,"4":2}) {"sql":"INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?)","params":{"1":8,"2":"Suite Luxe","3":250,"4":"Suite haut de gamme avec jacuzzi privé, balcon panoramique et services exclusifs."},"types":{"1":1,"2":2,"3":1,"4":2}} []
[2025-06-18T19:03:03.334020+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?) (parameters: array{"1":9,"2":"Cabane Jungle","3":120,"4":"Hébergement insolite perché dans les arbres, avec accès direct à la nature."}, types: array{"1":1,"2":2,"3":1,"4":2}) {"sql":"INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?)","params":{"1":9,"2":"Cabane Jungle","3":120,"4":"Hébergement insolite perché dans les arbres, avec accès direct à la nature."},"types":{"1":1,"2":2,"3":1,"4":2}} []
[2025-06-18T19:03:03.334174+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?) (parameters: array{"1":10,"2":"Tente Safari","3":100,"4":"Tente équipée pour une immersion totale dans le décor préhistorique, avec confort moderne."}, types: array{"1":1,"2":2,"3":1,"4":2}) {"sql":"INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?)","params":{"1":10,"2":"Tente Safari","3":100,"4":"Tente équipée pour une immersion totale dans le décor préhistorique, avec confort moderne."},"types":{"1":1,"2":2,"3":1,"4":2}} []
[2025-06-18T19:03:03.334316+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.334922+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_enclos AS libelle_enclos_2, t0.biome_id AS biome_id_3 FROM enclos t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_enclos AS libelle_enclos_2, t0.biome_id AS biome_id_3 FROM enclos t0"} []
[2025-06-18T19:03:03.336219+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.337720+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.338119+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.338536+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.339078+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.340268+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.341080+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.342274+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.342788+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.343160+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.343473+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.343703+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.343915+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.344141+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.345319+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.345520+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.345686+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.345870+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.346044+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.346242+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.346416+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.346567+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.346709+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.346848+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.346986+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.347139+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.347278+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.347406+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.347533+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.347667+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.347793+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.347925+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.348046+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.348187+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.348340+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.348479+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.348611+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.348828+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.349005+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.349146+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.349275+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.349396+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.349517+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.349643+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:03:03.350038+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.350247+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":45,"2":"img/Dinosaures/Dsungaripterus.png","3":"Dsungaripterus","4":"Omnivore","5":"Permien","6":"Praesentium quis reprehenderit alias inventore soluta aliquam placeat. Nam tenetur ipsa sed quam.","7":16}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":45,"2":"img/Dinosaures/Dsungaripterus.png","3":"Dsungaripterus","4":"Omnivore","5":"Permien","6":"Praesentium quis reprehenderit alias inventore soluta aliquam placeat. Nam tenetur ipsa sed quam.","7":16},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.350660+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":46,"2":"img/Dinosaures/Pachycephalosaurus.png","3":"Pachycephalosaurus","4":"Herbivore","5":"Paleogene","6":"Ut aut expedita at ipsam et. Voluptas consequatur ipsa molestiae aut.","7":19}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":46,"2":"img/Dinosaures/Pachycephalosaurus.png","3":"Pachycephalosaurus","4":"Herbivore","5":"Paleogene","6":"Ut aut expedita at ipsam et. Voluptas consequatur ipsa molestiae aut.","7":19},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.350934+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":47,"2":"img/Dinosaures/Apatosaurus.png","3":"Apatosaurus","4":"Herbivore","5":"Jurassique","6":"Alias esse perferendis excepturi tenetur modi sed et illum. Repudiandae maxime ex sit pariatur consequatur. Qui facere neque necessitatibus adipisci sequi dolorum laudantium.","7":13}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":47,"2":"img/Dinosaures/Apatosaurus.png","3":"Apatosaurus","4":"Herbivore","5":"Jurassique","6":"Alias esse perferendis excepturi tenetur modi sed et illum. Repudiandae maxime ex sit pariatur consequatur. Qui facere neque necessitatibus adipisci sequi dolorum laudantium.","7":13},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.351188+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":48,"2":"img/Dinosaures/Gigantspinosaurus.png","3":"Gigantspinosaurus","4":"Omnivore","5":"Cambrien","6":"Recusandae excepturi reiciendis ut eveniet quia iure. Distinctio doloremque amet eum.","7":14}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":48,"2":"img/Dinosaures/Gigantspinosaurus.png","3":"Gigantspinosaurus","4":"Omnivore","5":"Cambrien","6":"Recusandae excepturi reiciendis ut eveniet quia iure. Distinctio doloremque amet eum.","7":14},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.351392+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":49,"2":"img/Dinosaures/Baryonyx.png","3":"Baryonyx","4":"Carnivore","5":"Crétacé","6":"Nihil eaque autem distinctio doloremque. Modi nihil veritatis blanditiis minus rerum dolores non.","7":19}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":49,"2":"img/Dinosaures/Baryonyx.png","3":"Baryonyx","4":"Carnivore","5":"Crétacé","6":"Nihil eaque autem distinctio doloremque. Modi nihil veritatis blanditiis minus rerum dolores non.","7":19},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.351584+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":50,"2":"img/Dinosaures/Attenborosaurus.png","3":"Attenborosaurus","4":"Carnivore","5":"Trias","6":"Qui et autem mollitia. Sint pariatur natus dolorem quaerat doloribus.","7":20}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":50,"2":"img/Dinosaures/Attenborosaurus.png","3":"Attenborosaurus","4":"Carnivore","5":"Trias","6":"Qui et autem mollitia. Sint pariatur natus dolorem quaerat doloribus.","7":20},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.351777+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":51,"2":"img/Dinosaures/Struthiomimus.png","3":"Struthiomimus","4":"Omnivore","5":"Carbonifère","6":"Voluptates doloremque consequatur odit. Magnam enim accusamus consequuntur eaque qui vitae. Dolores occaecati quos voluptatibus dolores velit occaecati.","7":12}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":51,"2":"img/Dinosaures/Struthiomimus.png","3":"Struthiomimus","4":"Omnivore","5":"Carbonifère","6":"Voluptates doloremque consequatur odit. Magnam enim accusamus consequuntur eaque qui vitae. Dolores occaecati quos voluptatibus dolores velit occaecati.","7":12},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.352012+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":52,"2":"img/Dinosaures/Ouranosaurus.png","3":"Ouranosaurus","4":"Omnivore","5":"Trias","6":"Totam omnis qui maxime est non autem dolor nesciunt. Fugiat non ipsum illum beatae aut.","7":20}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":52,"2":"img/Dinosaures/Ouranosaurus.png","3":"Ouranosaurus","4":"Omnivore","5":"Trias","6":"Totam omnis qui maxime est non autem dolor nesciunt. Fugiat non ipsum illum beatae aut.","7":20},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.352339+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":53,"2":"img/Dinosaures/Compsognathus.png","3":"Compsognathus","4":"Omnivore","5":"Cambrien","6":"Eaque eum eligendi repellendus qui. Accusamus odit doloribus officia impedit sunt ducimus. Et veritatis distinctio et ut aut vel culpa.","7":19}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":53,"2":"img/Dinosaures/Compsognathus.png","3":"Compsognathus","4":"Omnivore","5":"Cambrien","6":"Eaque eum eligendi repellendus qui. Accusamus odit doloribus officia impedit sunt ducimus. Et veritatis distinctio et ut aut vel culpa.","7":19},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.352597+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":54,"2":"img/Dinosaures/Polacanthus.png","3":"Polacanthus","4":"Carnivore","5":"Cambrien","6":"Consequatur eum minus sapiente animi. Assumenda quos suscipit magni sint sed. Nihil fugit rerum deserunt sit quaerat rem.","7":16}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":54,"2":"img/Dinosaures/Polacanthus.png","3":"Polacanthus","4":"Carnivore","5":"Cambrien","6":"Consequatur eum minus sapiente animi. Assumenda quos suscipit magni sint sed. Nihil fugit rerum deserunt sit quaerat rem.","7":16},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.352970+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":55,"2":"img/Dinosaures/Suchomimus.png","3":"Suchomimus","4":"Herbivore","5":"Cambrien","6":"Vel nesciunt dolores odit ab qui. Odio et necessitatibus porro aliquid vero necessitatibus voluptates. Consequuntur dolorem aliquam ducimus.","7":11}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":55,"2":"img/Dinosaures/Suchomimus.png","3":"Suchomimus","4":"Herbivore","5":"Cambrien","6":"Vel nesciunt dolores odit ab qui. Odio et necessitatibus porro aliquid vero necessitatibus voluptates. Consequuntur dolorem aliquam ducimus.","7":11},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.354023+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":56,"2":"img/Dinosaures/Ichthyosaurus.png","3":"Ichthyosaurus","4":"Omnivore","5":"Ordovicien","6":"Error nihil ut consectetur animi cupiditate autem. Alias illo error voluptatum omnis et nihil magni.","7":13}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":56,"2":"img/Dinosaures/Ichthyosaurus.png","3":"Ichthyosaurus","4":"Omnivore","5":"Ordovicien","6":"Error nihil ut consectetur animi cupiditate autem. Alias illo error voluptatum omnis et nihil magni.","7":13},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.354546+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":57,"2":"img/Dinosaures/Maaradactylus.png","3":"Maaradactylus","4":"Carnivore","5":"Silurien","6":"Ratione vel earum quisquam tempora. Sint qui sunt omnis reprehenderit architecto consequatur quam.","7":19}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":57,"2":"img/Dinosaures/Maaradactylus.png","3":"Maaradactylus","4":"Carnivore","5":"Silurien","6":"Ratione vel earum quisquam tempora. Sint qui sunt omnis reprehenderit architecto consequatur quam.","7":19},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.354736+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":58,"2":"img/Dinosaures/Tropeognathus.png","3":"Tropeognathus","4":"Carnivore","5":"Devonien","6":"Laborum voluptates aliquid facere aperiam non laudantium et quidem. Autem facere dolorum itaque. Asperiores ea corporis eos pariatur est consectetur voluptatem.","7":12}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":58,"2":"img/Dinosaures/Tropeognathus.png","3":"Tropeognathus","4":"Carnivore","5":"Devonien","6":"Laborum voluptates aliquid facere aperiam non laudantium et quidem. Autem facere dolorum itaque. Asperiores ea corporis eos pariatur est consectetur voluptatem.","7":12},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.354916+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":59,"2":"img/Dinosaures/Mamenchisaurus.png","3":"Mamenchisaurus","4":"Omnivore","5":"Neogene","6":"Et et ut harum est. Et error velit et doloremque.","7":11}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":59,"2":"img/Dinosaures/Mamenchisaurus.png","3":"Mamenchisaurus","4":"Omnivore","5":"Neogene","6":"Et et ut harum est. Et error velit et doloremque.","7":11},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.355081+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":60,"2":"img/Dinosaures/Archaeornithomimus.png","3":"Archaeornithomimus","4":"Carnivore","5":"Crétacé","6":"Ex dolore et expedita enim aut ex est. Sapiente animi excepturi labore quia odit laboriosam est.","7":16}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":60,"2":"img/Dinosaures/Archaeornithomimus.png","3":"Archaeornithomimus","4":"Carnivore","5":"Crétacé","6":"Ex dolore et expedita enim aut ex est. Sapiente animi excepturi labore quia odit laboriosam est.","7":16},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.355309+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":61,"2":"img/Dinosaures/Archaeornithomimus.png","3":"Archaeornithomimus","4":"Herbivore","5":"Crétacé","6":"Ipsa harum recusandae vitae aut dolores. Rem nam doloribus suscipit quisquam.","7":16}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":61,"2":"img/Dinosaures/Archaeornithomimus.png","3":"Archaeornithomimus","4":"Herbivore","5":"Crétacé","6":"Ipsa harum recusandae vitae aut dolores. Rem nam doloribus suscipit quisquam.","7":16},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.355626+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":62,"2":"img/Dinosaures/Carnotaurus.png","3":"Carnotaurus","4":"Omnivore","5":"Permien","6":"Ea totam vero et quod. Quod dicta maxime nesciunt magni qui eveniet. Rerum odio et voluptas nulla odio.","7":17}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":62,"2":"img/Dinosaures/Carnotaurus.png","3":"Carnotaurus","4":"Omnivore","5":"Permien","6":"Ea totam vero et quod. Quod dicta maxime nesciunt magni qui eveniet. Rerum odio et voluptas nulla odio.","7":17},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.355899+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":63,"2":"img/Dinosaures/Elasmosaurus.png","3":"Elasmosaurus","4":"Herbivore","5":"Silurien","6":"Consectetur enim sit sapiente quo molestiae ut. Veritatis sapiente porro molestiae laudantium adipisci. Eos consequatur fugiat impedit nobis consequatur voluptas.","7":17}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":63,"2":"img/Dinosaures/Elasmosaurus.png","3":"Elasmosaurus","4":"Herbivore","5":"Silurien","6":"Consectetur enim sit sapiente quo molestiae ut. Veritatis sapiente porro molestiae laudantium adipisci. Eos consequatur fugiat impedit nobis consequatur voluptas.","7":17},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.356135+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":64,"2":"img/Dinosaures/Gallimimus.png","3":"Gallimimus","4":"Herbivore","5":"Permien","6":"Accusamus sit nostrum sapiente est quia. Rem quia voluptatem adipisci unde magnam.","7":13}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":64,"2":"img/Dinosaures/Gallimimus.png","3":"Gallimimus","4":"Herbivore","5":"Permien","6":"Accusamus sit nostrum sapiente est quia. Rem quia voluptatem adipisci unde magnam.","7":13},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.356378+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":65,"2":"img/Dinosaures/Sinosauropteryx.png","3":"Sinosauropteryx","4":"Carnivore","5":"Trias","6":"Amet tempore et natus non et omnis voluptatem. Quia eos dolores odio et. Commodi commodi quasi quia odio dolor.","7":16}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":65,"2":"img/Dinosaures/Sinosauropteryx.png","3":"Sinosauropteryx","4":"Carnivore","5":"Trias","6":"Amet tempore et natus non et omnis voluptatem. Quia eos dolores odio et. Commodi commodi quasi quia odio dolor.","7":16},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.356603+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":66,"2":"img/Dinosaures/Giganotosaurus.png","3":"Giganotosaurus","4":"Carnivore","5":"Neogene","6":"Architecto voluptatem inventore maxime omnis quia facere alias. Esse distinctio qui eum distinctio ut. Laboriosam voluptate corrupti sunt quia voluptas.","7":19}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":66,"2":"img/Dinosaures/Giganotosaurus.png","3":"Giganotosaurus","4":"Carnivore","5":"Neogene","6":"Architecto voluptatem inventore maxime omnis quia facere alias. Esse distinctio qui eum distinctio ut. Laboriosam voluptate corrupti sunt quia voluptas.","7":19},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.356808+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":67,"2":"img/Dinosaures/Pentaceratops.png","3":"Pentaceratops","4":"Omnivore","5":"Crétacé","6":"Sint nihil omnis recusandae et quam velit inventore. Consequuntur possimus nostrum esse nihil.","7":17}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":67,"2":"img/Dinosaures/Pentaceratops.png","3":"Pentaceratops","4":"Omnivore","5":"Crétacé","6":"Sint nihil omnis recusandae et quam velit inventore. Consequuntur possimus nostrum esse nihil.","7":17},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.357004+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":68,"2":"img/Dinosaures/Corythosaurus.png","3":"Corythosaurus","4":"Herbivore","5":"Trias","6":"Non eos in vitae nam suscipit nihil. Quod quia velit cum aut.","7":13}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":68,"2":"img/Dinosaures/Corythosaurus.png","3":"Corythosaurus","4":"Herbivore","5":"Trias","6":"Non eos in vitae nam suscipit nihil. Quod quia velit cum aut.","7":13},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.357208+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":69,"2":"img/Dinosaures/Jeholopterus.png","3":"Jeholopterus","4":"Omnivore","5":"Jurassique","6":"Quis quam reprehenderit laboriosam. Maiores odio incidunt ut nesciunt ipsa qui doloremque.","7":20}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":69,"2":"img/Dinosaures/Jeholopterus.png","3":"Jeholopterus","4":"Omnivore","5":"Jurassique","6":"Quis quam reprehenderit laboriosam. Maiores odio incidunt ut nesciunt ipsa qui doloremque.","7":20},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.357409+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":70,"2":"img/Dinosaures/Euoplocephalus.png","3":"Euoplocephalus","4":"Herbivore","5":"Ordovicien","6":"Et repudiandae qui voluptatibus. Atque sit quia animi beatae. Iusto tenetur voluptatem unde nostrum ipsa.","7":15}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":70,"2":"img/Dinosaures/Euoplocephalus.png","3":"Euoplocephalus","4":"Herbivore","5":"Ordovicien","6":"Et repudiandae qui voluptatibus. Atque sit quia animi beatae. Iusto tenetur voluptatem unde nostrum ipsa.","7":15},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.357589+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":71,"2":"img/Dinosaures/Indoraptor.png","3":"Indoraptor","4":"Carnivore","5":"Devonien","6":"Tempora architecto corporis sed velit labore. Est voluptatem veniam est.","7":14}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":71,"2":"img/Dinosaures/Indoraptor.png","3":"Indoraptor","4":"Carnivore","5":"Devonien","6":"Tempora architecto corporis sed velit labore. Est voluptatem veniam est.","7":14},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.357789+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":72,"2":"img/Dinosaures/Chungkingosaurus.png","3":"Chungkingosaurus","4":"Carnivore","5":"Ordovicien","6":"Quia sint et incidunt veniam suscipit eum. Consequatur nisi exercitationem nemo fugit.","7":15}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":72,"2":"img/Dinosaures/Chungkingosaurus.png","3":"Chungkingosaurus","4":"Carnivore","5":"Ordovicien","6":"Quia sint et incidunt veniam suscipit eum. Consequatur nisi exercitationem nemo fugit.","7":15},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.358029+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":73,"2":"img/Dinosaures/Chasmosaurus.png","3":"Chasmosaurus","4":"Omnivore","5":"Silurien","6":"Nihil sint voluptatibus hic explicabo. In id porro delectus accusamus exercitationem aspernatur.","7":20}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":73,"2":"img/Dinosaures/Chasmosaurus.png","3":"Chasmosaurus","4":"Omnivore","5":"Silurien","6":"Nihil sint voluptatibus hic explicabo. In id porro delectus accusamus exercitationem aspernatur.","7":20},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.358248+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":74,"2":"img/Dinosaures/Liopleurodon.png","3":"Liopleurodon","4":"Herbivore","5":"Permien","6":"Eos et maiores sint vero eos deleniti ut delectus. Qui sed sed aut et maxime quidem.","7":20}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":74,"2":"img/Dinosaures/Liopleurodon.png","3":"Liopleurodon","4":"Herbivore","5":"Permien","6":"Eos et maiores sint vero eos deleniti ut delectus. Qui sed sed aut et maxime quidem.","7":20},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.358426+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":75,"2":"img/Dinosaures/Tarbosaurus.png","3":"Tarbosaurus","4":"Herbivore","5":"Ordovicien","6":"Necessitatibus cupiditate eum iste rerum dolor. Quia saepe esse quae consequuntur aut. Quod et in quam debitis qui et error.","7":13}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":75,"2":"img/Dinosaures/Tarbosaurus.png","3":"Tarbosaurus","4":"Herbivore","5":"Ordovicien","6":"Necessitatibus cupiditate eum iste rerum dolor. Quia saepe esse quae consequuntur aut. Quod et in quam debitis qui et error.","7":13},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.358608+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":76,"2":"img/Dinosaures/Proceratosaurus.png","3":"Proceratosaurus","4":"Carnivore","5":"Silurien","6":"Consectetur voluptates hic repellendus voluptas quaerat. Possimus laborum aspernatur illo voluptas quia harum ut rerum.","7":15}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":76,"2":"img/Dinosaures/Proceratosaurus.png","3":"Proceratosaurus","4":"Carnivore","5":"Silurien","6":"Consectetur voluptates hic repellendus voluptas quaerat. Possimus laborum aspernatur illo voluptas quia harum ut rerum.","7":15},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.358815+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":77,"2":"img/Dinosaures/Stegoceratops.png","3":"Stegoceratops","4":"Omnivore","5":"Jurassique","6":"Distinctio hic est ipsa ea molestias est. Corporis doloribus iusto sint alias.","7":17}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":77,"2":"img/Dinosaures/Stegoceratops.png","3":"Stegoceratops","4":"Omnivore","5":"Jurassique","6":"Distinctio hic est ipsa ea molestias est. Corporis doloribus iusto sint alias.","7":17},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.358991+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":78,"2":"img/Dinosaures/Monolophosaurus.png","3":"Monolophosaurus","4":"Carnivore","5":"Trias","6":"Iste quia est sit asperiores vitae incidunt. Minima perspiciatis et ea autem.","7":12}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":78,"2":"img/Dinosaures/Monolophosaurus.png","3":"Monolophosaurus","4":"Carnivore","5":"Trias","6":"Iste quia est sit asperiores vitae incidunt. Minima perspiciatis et ea autem.","7":12},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.359181+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":79,"2":"img/Dinosaures/Nothosaurus.png","3":"Nothosaurus","4":"Carnivore","5":"Devonien","6":"Quam unde nostrum et beatae ad eum tempore. Quos sit quidem facilis. Nemo eum est atque voluptatem.","7":18}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":79,"2":"img/Dinosaures/Nothosaurus.png","3":"Nothosaurus","4":"Carnivore","5":"Devonien","6":"Quam unde nostrum et beatae ad eum tempore. Quos sit quidem facilis. Nemo eum est atque voluptatem.","7":18},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.359358+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":80,"2":"img/Dinosaures/Spinoceratops.png","3":"Spinoceratops","4":"Herbivore","5":"Neogene","6":"Exercitationem est consequatur delectus dolorem eum est officiis. Dolor voluptatem autem harum enim. Non omnis libero velit.","7":17}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":80,"2":"img/Dinosaures/Spinoceratops.png","3":"Spinoceratops","4":"Herbivore","5":"Neogene","6":"Exercitationem est consequatur delectus dolorem eum est officiis. Dolor voluptatem autem harum enim. Non omnis libero velit.","7":17},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.359522+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":81,"2":"img/Dinosaures/Deinocheirus.png","3":"Deinocheirus","4":"Herbivore","5":"Permien","6":"Adipisci corporis non repellat omnis. Ipsam qui voluptatem ab labore.","7":11}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":81,"2":"img/Dinosaures/Deinocheirus.png","3":"Deinocheirus","4":"Herbivore","5":"Permien","6":"Adipisci corporis non repellat omnis. Ipsam qui voluptatem ab labore.","7":11},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.359701+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":82,"2":"img/Dinosaures/Styxosaurus.png","3":"Styxosaurus","4":"Carnivore","5":"Devonien","6":"Alias iure asperiores ut molestiae. Odit repellat debitis perspiciatis asperiores iusto aut tempore odio.","7":16}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":82,"2":"img/Dinosaures/Styxosaurus.png","3":"Styxosaurus","4":"Carnivore","5":"Devonien","6":"Alias iure asperiores ut molestiae. Odit repellat debitis perspiciatis asperiores iusto aut tempore odio.","7":16},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.359865+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":83,"2":"img/Dinosaures/Dunkleosteus.png","3":"Dunkleosteus","4":"Omnivore","5":"Crétacé","6":"Vel eaque quia sed. Ad velit omnis dolores quis quaerat dolor aliquam quis.","7":18}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":83,"2":"img/Dinosaures/Dunkleosteus.png","3":"Dunkleosteus","4":"Omnivore","5":"Crétacé","6":"Vel eaque quia sed. Ad velit omnis dolores quis quaerat dolor aliquam quis.","7":18},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.360026+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":84,"2":"img/Dinosaures/Alamosaurus.png","3":"Alamosaurus","4":"Carnivore","5":"Neogene","6":"Voluptas minima odio blanditiis corrupti esse. Neque sunt aspernatur dolorum beatae.","7":11}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":84,"2":"img/Dinosaures/Alamosaurus.png","3":"Alamosaurus","4":"Carnivore","5":"Neogene","6":"Voluptas minima odio blanditiis corrupti esse. Neque sunt aspernatur dolorum beatae.","7":11},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.360206+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":85,"2":"img/Dinosaures/Concavenator.png","3":"Concavenator","4":"Omnivore","5":"Silurien","6":"Illum corporis amet enim minima explicabo. Mollitia voluptatibus laboriosam omnis possimus. Ut maxime id et consequuntur.","7":12}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":85,"2":"img/Dinosaures/Concavenator.png","3":"Concavenator","4":"Omnivore","5":"Silurien","6":"Illum corporis amet enim minima explicabo. Mollitia voluptatibus laboriosam omnis possimus. Ut maxime id et consequuntur.","7":12},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.360450+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":86,"2":"img/Dinosaures/Tsintaosaurus.png","3":"Tsintaosaurus","4":"Omnivore","5":"Silurien","6":"Adipisci molestias magnam delectus quia laboriosam sed. Est rerum dolores possimus quasi sapiente. Quia mollitia enim iusto expedita.","7":11}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":86,"2":"img/Dinosaures/Tsintaosaurus.png","3":"Tsintaosaurus","4":"Omnivore","5":"Silurien","6":"Adipisci molestias magnam delectus quia laboriosam sed. Est rerum dolores possimus quasi sapiente. Quia mollitia enim iusto expedita.","7":11},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.360702+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":87,"2":"img/Dinosaures/Dilophosaurus.png","3":"Dilophosaurus","4":"Carnivore","5":"Carbonifère","6":"Eaque enim magnam in. Similique omnis voluptatem omnis optio sunt. Inventore ipsum quas consequatur magnam modi est.","7":20}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":87,"2":"img/Dinosaures/Dilophosaurus.png","3":"Dilophosaurus","4":"Carnivore","5":"Carbonifère","6":"Eaque enim magnam in. Similique omnis voluptatem omnis optio sunt. Inventore ipsum quas consequatur magnam modi est.","7":20},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.360903+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":88,"2":"img/Dinosaures/Sinoceratops.png","3":"Sinoceratops","4":"Carnivore","5":"Crétacé","6":"Veritatis minus molestiae atque natus eius enim non. Recusandae natus libero officiis molestias nostrum voluptates culpa. Minima et odit qui.","7":16}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":88,"2":"img/Dinosaures/Sinoceratops.png","3":"Sinoceratops","4":"Carnivore","5":"Crétacé","6":"Veritatis minus molestiae atque natus eius enim non. Recusandae natus libero officiis molestias nostrum voluptates culpa. Minima et odit qui.","7":16},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:03:03.361131+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.361841+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-18T19:03:03.362499+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_jour AS libelle_jour_2 FROM jour t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_jour AS libelle_jour_2 FROM jour t0"} []
[2025-06-18T19:03:03.362893+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.ouverture AS ouverture_2, t0.fermeture AS fermeture_3 FROM horaire t0 {"sql":"SELECT t0.id AS id_1, t0.ouverture AS ouverture_2, t0.fermeture AS fermeture_3 FROM horaire t0"} []
[2025-06-18T19:03:03.363633+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.363965+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":6,"2":14,"3":9}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":6,"2":14,"3":9},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.364661+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":6,"2":14,"3":11}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":6,"2":14,"3":11},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.365084+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":6,"2":8,"3":13}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":6,"2":8,"3":13},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.366406+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":6,"2":8,"3":10}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":6,"2":8,"3":10},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.367978+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":6,"2":9,"3":11}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":6,"2":9,"3":11},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.368672+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":6,"2":9,"3":8}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":6,"2":9,"3":8},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.369387+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":6,"2":11,"3":10}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":6,"2":11,"3":10},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.369810+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":6,"2":11,"3":9}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":6,"2":11,"3":9},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.370148+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":6,"2":12,"3":8}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":6,"2":12,"3":8},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.370392+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":7,"2":9,"3":14}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":7,"2":9,"3":14},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.370578+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":7,"2":11,"3":13}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":7,"2":11,"3":13},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.370780+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":7,"2":13,"3":13}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":7,"2":13,"3":13},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.371072+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":7,"2":12,"3":8}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":7,"2":12,"3":8},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.372239+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":7,"2":8,"3":9}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":7,"2":8,"3":9},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.372640+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":7,"2":10,"3":12}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":7,"2":10,"3":12},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.373043+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":7,"2":14,"3":13}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":7,"2":14,"3":13},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.373377+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":7,"2":14,"3":11}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":7,"2":14,"3":11},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.373627+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":8,"2":9,"3":10}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":8,"2":9,"3":10},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.373936+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":8,"2":9,"3":12}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":8,"2":9,"3":12},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.374244+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":8,"2":13,"3":11}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":8,"2":13,"3":11},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.374656+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":8,"2":13,"3":9}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":8,"2":13,"3":9},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.374993+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":8,"2":11,"3":11}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":8,"2":11,"3":11},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.375251+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":8,"2":8,"3":13}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":8,"2":8,"3":13},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.375515+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":8,"2":10,"3":12}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":8,"2":10,"3":12},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.375761+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":8,"2":10,"3":9}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":8,"2":10,"3":9},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.376256+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":9,"2":11,"3":8}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":9,"2":11,"3":8},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.376742+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":9,"2":10,"3":14}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":9,"2":10,"3":14},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.377177+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":9,"2":8,"3":13}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":9,"2":8,"3":13},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.377510+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":9,"2":12,"3":13}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":9,"2":12,"3":13},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.377780+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":9,"2":12,"3":11}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":9,"2":12,"3":11},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.378019+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":9,"2":14,"3":11}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":9,"2":14,"3":11},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.378238+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":10,"2":11,"3":8}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":10,"2":11,"3":8},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.378502+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":10,"2":10,"3":10}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":10,"2":10,"3":10},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.378702+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":10,"2":8,"3":11}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":10,"2":8,"3":11},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.378933+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":10,"2":12,"3":13}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":10,"2":12,"3":13},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.379208+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":10,"2":12,"3":11}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":10,"2":12,"3":11},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.379452+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":10,"2":14,"3":9}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":10,"2":14,"3":9},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:03:03.380368+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.383686+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.debut_billet AS debut_billet_2, t0.fin_billet AS fin_billet_3, t0.nom AS nom_4, t0.prenom AS prenom_5, t0.user_id AS user_id_6, t0.billet_id AS billet_id_7, t0.date_id AS date_id_8 FROM payer_billet t0 {"sql":"SELECT t0.id AS id_1, t0.debut_billet AS debut_billet_2, t0.fin_billet AS fin_billet_3, t0.nom AS nom_4, t0.prenom AS prenom_5, t0.user_id AS user_id_6, t0.billet_id AS billet_id_7, t0.date_id AS date_id_8 FROM payer_billet t0"} []
[2025-06-18T19:03:03.384357+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.type, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.admin_level AS admin_level_14 FROM "user" t0 WHERE t0.id = ? AND t0.type IN ('user', 'client', 'administrateur') (parameters: array{"1":17}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.type, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.admin_level AS admin_level_14 FROM \"user\" t0 WHERE t0.id = ? AND t0.type IN ('user', 'client', 'administrateur')","params":{"1":17},"types":{"1":1}} []
[2025-06-18T19:03:03.385305+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.type, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.admin_level AS admin_level_14 FROM "user" t0 WHERE t0.id = ? AND t0.type IN ('user', 'client', 'administrateur') (parameters: array{"1":18}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.type, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.admin_level AS admin_level_14 FROM \"user\" t0 WHERE t0.id = ? AND t0.type IN ('user', 'client', 'administrateur')","params":{"1":18},"types":{"1":1}} []
[2025-06-18T19:03:03.385908+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.type, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.admin_level AS admin_level_14 FROM "user" t0 WHERE t0.id = ? AND t0.type IN ('user', 'client', 'administrateur') (parameters: array{"1":19}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.type, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.admin_level AS admin_level_14 FROM \"user\" t0 WHERE t0.id = ? AND t0.type IN ('user', 'client', 'administrateur')","params":{"1":19},"types":{"1":1}} []
[2025-06-18T19:03:03.386464+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.type, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.admin_level AS admin_level_14 FROM "user" t0 WHERE t0.id = ? AND t0.type IN ('user', 'client', 'administrateur') (parameters: array{"1":20}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.type, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.admin_level AS admin_level_14 FROM \"user\" t0 WHERE t0.id = ? AND t0.type IN ('user', 'client', 'administrateur')","params":{"1":20},"types":{"1":1}} []
[2025-06-18T19:03:03.388013+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.388285+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":8,"2":54}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":8,"2":54},"types":{"1":1,"2":1}} []
[2025-06-18T19:03:03.388925+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":9,"2":71}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":9,"2":71},"types":{"1":1,"2":1}} []
[2025-06-18T19:03:03.389251+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":9,"2":64}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":9,"2":64},"types":{"1":1,"2":1}} []
[2025-06-18T19:03:03.389519+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":9,"2":49}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":9,"2":49},"types":{"1":1,"2":1}} []
[2025-06-18T19:03:03.389740+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":10,"2":42}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":10,"2":42},"types":{"1":1,"2":1}} []
[2025-06-18T19:03:03.389943+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":11,"2":60}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":11,"2":60},"types":{"1":1,"2":1}} []
[2025-06-18T19:03:03.390293+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":12,"2":73}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":12,"2":73},"types":{"1":1,"2":1}} []
[2025-06-18T19:03:03.390463+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":12,"2":54}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":12,"2":54},"types":{"1":1,"2":1}} []
[2025-06-18T19:03:03.390615+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":12,"2":71}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":12,"2":71},"types":{"1":1,"2":1}} []
[2025-06-18T19:03:03.390761+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":13,"2":71}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":13,"2":71},"types":{"1":1,"2":1}} []
[2025-06-18T19:03:03.390918+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":13,"2":66}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":13,"2":66},"types":{"1":1,"2":1}} []
[2025-06-18T19:03:03.391125+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":14,"2":46}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":14,"2":46},"types":{"1":1,"2":1}} []
[2025-06-18T19:03:03.391354+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":14,"2":64}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":14,"2":64},"types":{"1":1,"2":1}} []
[2025-06-18T19:03:03.391547+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":14,"2":62}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":14,"2":62},"types":{"1":1,"2":1}} []
[2025-06-18T19:03:03.391724+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.392461+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_format_chambre AS libelle_format_chambre_2, t0.prix_format_chambre AS prix_format_chambre_3, t0.description_format_billet AS description_format_billet_4 FROM format_chambre t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_format_chambre AS libelle_format_chambre_2, t0.prix_format_chambre AS prix_format_chambre_3, t0.description_format_billet AS description_format_billet_4 FROM format_chambre t0"} []
[2025-06-18T19:03:03.393156+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T19:03:03.393550+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.393828+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.393994+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.394137+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.394259+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.394365+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.394465+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.394566+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.394664+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.394763+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.394861+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.394960+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.395077+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.395198+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.395311+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.395418+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.395520+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.395629+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.395728+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.395823+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.395917+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.396011+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.396119+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.396224+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.396321+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.396415+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.396508+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.396601+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.396693+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.396784+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.396875+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.396967+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.397075+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.397183+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.397281+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.397475+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.397625+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.397760+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.398039+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.398342+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.398601+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.398830+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.399236+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.400211+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.400634+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.400952+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.401955+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.402279+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.402533+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.402817+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.403102+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.403428+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.403718+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.404007+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.404304+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.404555+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.404826+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.405023+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.405225+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.405560+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.405778+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.405924+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.406045+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.406177+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.406292+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.406453+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.406574+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.406731+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.406904+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.407031+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.407191+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.407372+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.411760+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.412173+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.412387+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.412558+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.412690+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.412810+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.412934+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.413057+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.413183+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.413292+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.413412+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.413518+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.413623+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.413737+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.413845+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.413958+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.414086+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.414202+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.414317+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.414429+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.414551+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.414673+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.414779+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.414888+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.415000+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.415116+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.415224+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.415337+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.415463+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.415575+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.415679+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.415786+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.415899+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.416005+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.416246+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.416402+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.416518+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.416686+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.416890+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.417029+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.417169+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.417289+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.417401+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.417516+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.417619+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.417724+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.417835+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.417942+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.418078+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.418240+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.418358+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.418464+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.418570+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.418674+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.418851+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.419001+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.419333+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.419554+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.420719+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.421176+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.421368+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.421515+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.421632+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.421743+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.421845+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.421961+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.422131+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.422337+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.422469+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.422574+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.422675+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.422776+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.422870+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.422965+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.423071+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.423188+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.423299+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.423403+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.423500+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.423601+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.423706+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.423798+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.423901+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.423993+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.424115+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.424226+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.424323+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.424417+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.424516+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.424612+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.424708+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.424809+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.424900+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.424998+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.425102+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.425201+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.425304+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.425397+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.425492+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.425591+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.425683+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.425777+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.425876+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.425969+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.426078+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.426180+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.426273+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.426380+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.426474+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.426570+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.426672+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.426765+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.426877+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.426980+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.427080+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.427193+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.427299+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.427395+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.427496+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.427589+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.427679+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.427779+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.427870+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.427960+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.428065+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.428188+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.428637+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.429131+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:03:03.432005+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.432643+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":201,"2":"124","3":"Première étage","4":5,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":201,"2":"124","3":"Première étage","4":5,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.433273+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":202,"2":"124","3":"Première étage","4":8,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":202,"2":"124","3":"Première étage","4":8,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.433620+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":203,"2":"124","3":"Première étage","4":6,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":203,"2":"124","3":"Première étage","4":6,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.433982+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":204,"2":"124","3":"Première étage","4":6,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":204,"2":"124","3":"Première étage","4":6,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.434281+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":205,"2":"124","3":"Première étage","4":8,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":205,"2":"124","3":"Première étage","4":8,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.434489+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":206,"2":"124","3":"Première étage","4":7,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":206,"2":"124","3":"Première étage","4":7,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.434675+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":207,"2":"124","3":"Première étage","4":8,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":207,"2":"124","3":"Première étage","4":8,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.434812+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":208,"2":"124","3":"Première étage","4":6,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":208,"2":"124","3":"Première étage","4":6,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.434999+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":209,"2":"124","3":"Première étage","4":5,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":209,"2":"124","3":"Première étage","4":5,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.435154+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":210,"2":"124","3":"Première étage","4":5,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":210,"2":"124","3":"Première étage","4":5,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.435407+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":211,"2":"124","3":"Première étage","4":7,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":211,"2":"124","3":"Première étage","4":7,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.435569+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":212,"2":"124","3":"Première étage","4":8,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":212,"2":"124","3":"Première étage","4":8,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.435718+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":213,"2":"124","3":"Première étage","4":6,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":213,"2":"124","3":"Première étage","4":6,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.435863+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":214,"2":"124","3":"Première étage","4":6,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":214,"2":"124","3":"Première étage","4":6,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.436008+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":215,"2":"124","3":"Première étage","4":6,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":215,"2":"124","3":"Première étage","4":6,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.436165+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":216,"2":"124","3":"Première étage","4":7,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":216,"2":"124","3":"Première étage","4":7,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.436315+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":217,"2":"124","3":"Première étage","4":7,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":217,"2":"124","3":"Première étage","4":7,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.436545+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":218,"2":"124","3":"Première étage","4":8,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":218,"2":"124","3":"Première étage","4":8,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.436791+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":219,"2":"124","3":"Première étage","4":7,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":219,"2":"124","3":"Première étage","4":7,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.437000+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":220,"2":"124","3":"Première étage","4":7,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":220,"2":"124","3":"Première étage","4":7,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.437216+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":221,"2":"124","3":"Première étage","4":8,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":221,"2":"124","3":"Première étage","4":8,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.437400+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":222,"2":"124","3":"Première étage","4":7,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":222,"2":"124","3":"Première étage","4":7,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.437568+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":223,"2":"124","3":"Première étage","4":8,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":223,"2":"124","3":"Première étage","4":8,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.437736+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":224,"2":"124","3":"Première étage","4":5,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":224,"2":"124","3":"Première étage","4":5,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.437911+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":225,"2":"124","3":"Première étage","4":8,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":225,"2":"124","3":"Première étage","4":8,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.438104+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":226,"2":"124","3":"Première étage","4":7,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":226,"2":"124","3":"Première étage","4":7,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.438437+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":227,"2":"124","3":"Première étage","4":7,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":227,"2":"124","3":"Première étage","4":7,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.438606+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":228,"2":"124","3":"Première étage","4":8,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":228,"2":"124","3":"Première étage","4":8,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.438796+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":229,"2":"124","3":"Première étage","4":7,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":229,"2":"124","3":"Première étage","4":7,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.438974+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":230,"2":"124","3":"Première étage","4":7,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":230,"2":"124","3":"Première étage","4":7,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.439152+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":231,"2":"124","3":"Première étage","4":5,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":231,"2":"124","3":"Première étage","4":5,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.439320+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":232,"2":"124","3":"Première étage","4":5,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":232,"2":"124","3":"Première étage","4":5,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.439577+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":233,"2":"124","3":"Première étage","4":7,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":233,"2":"124","3":"Première étage","4":7,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.439825+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":234,"2":"124","3":"Première étage","4":5,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":234,"2":"124","3":"Première étage","4":5,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.440101+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":235,"2":"124","3":"Première étage","4":5,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":235,"2":"124","3":"Première étage","4":5,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.440330+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":236,"2":"124","3":"Première étage","4":8,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":236,"2":"124","3":"Première étage","4":8,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.440531+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":237,"2":"124","3":"Première étage","4":6,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":237,"2":"124","3":"Première étage","4":6,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.440737+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":238,"2":"124","3":"Première étage","4":8,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":238,"2":"124","3":"Première étage","4":8,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.440906+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":239,"2":"124","3":"Première étage","4":8,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":239,"2":"124","3":"Première étage","4":8,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.441098+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":240,"2":"124","3":"Première étage","4":7,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":240,"2":"124","3":"Première étage","4":7,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.441291+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":241,"2":"124","3":"Première étage","4":5,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":241,"2":"124","3":"Première étage","4":5,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.441460+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":242,"2":"124","3":"Première étage","4":5,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":242,"2":"124","3":"Première étage","4":5,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.441698+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":243,"2":"124","3":"Première étage","4":8,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":243,"2":"124","3":"Première étage","4":8,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.441934+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":244,"2":"124","3":"Première étage","4":8,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":244,"2":"124","3":"Première étage","4":8,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.442162+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":245,"2":"124","3":"Première étage","4":6,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":245,"2":"124","3":"Première étage","4":6,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.442345+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":246,"2":"124","3":"Première étage","4":5,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":246,"2":"124","3":"Première étage","4":5,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.442513+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":247,"2":"124","3":"Première étage","4":7,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":247,"2":"124","3":"Première étage","4":7,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.442678+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":248,"2":"124","3":"Première étage","4":5,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":248,"2":"124","3":"Première étage","4":5,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.442833+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":249,"2":"124","3":"Première étage","4":7,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":249,"2":"124","3":"Première étage","4":7,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.442999+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":250,"2":"124","3":"Première étage","4":8,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":250,"2":"124","3":"Première étage","4":8,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.443167+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":251,"2":"124","3":"Première étage","4":8,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":251,"2":"124","3":"Première étage","4":8,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.443327+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":252,"2":"124","3":"Première étage","4":5,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":252,"2":"124","3":"Première étage","4":5,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.443559+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":253,"2":"124","3":"Première étage","4":8,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":253,"2":"124","3":"Première étage","4":8,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.443712+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":254,"2":"124","3":"Première étage","4":5,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":254,"2":"124","3":"Première étage","4":5,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.443847+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":255,"2":"124","3":"Première étage","4":5,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":255,"2":"124","3":"Première étage","4":5,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.443980+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":256,"2":"124","3":"Première étage","4":7,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":256,"2":"124","3":"Première étage","4":7,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.444155+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":257,"2":"124","3":"Première étage","4":5,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":257,"2":"124","3":"Première étage","4":5,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.444379+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":258,"2":"124","3":"Première étage","4":8,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":258,"2":"124","3":"Première étage","4":8,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.444581+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":259,"2":"124","3":"Première étage","4":7,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":259,"2":"124","3":"Première étage","4":7,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.444767+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":260,"2":"124","3":"Première étage","4":8,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":260,"2":"124","3":"Première étage","4":8,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.444924+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":261,"2":"124","3":"Première étage","4":6,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":261,"2":"124","3":"Première étage","4":6,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.445102+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":262,"2":"124","3":"Première étage","4":6,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":262,"2":"124","3":"Première étage","4":6,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.445311+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":263,"2":"124","3":"Première étage","4":7,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":263,"2":"124","3":"Première étage","4":7,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.445501+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":264,"2":"124","3":"Première étage","4":7,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":264,"2":"124","3":"Première étage","4":7,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.445688+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":265,"2":"124","3":"Première étage","4":7,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":265,"2":"124","3":"Première étage","4":7,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.445845+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":266,"2":"124","3":"Première étage","4":6,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":266,"2":"124","3":"Première étage","4":6,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.446004+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":267,"2":"124","3":"Première étage","4":7,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":267,"2":"124","3":"Première étage","4":7,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.446182+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":268,"2":"124","3":"Première étage","4":6,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":268,"2":"124","3":"Première étage","4":6,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.446341+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":269,"2":"124","3":"Première étage","4":7,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":269,"2":"124","3":"Première étage","4":7,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.446499+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":270,"2":"124","3":"Première étage","4":8,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":270,"2":"124","3":"Première étage","4":8,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.446655+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":271,"2":"124","3":"Première étage","4":6,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":271,"2":"124","3":"Première étage","4":6,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.446810+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":272,"2":"124","3":"Première étage","4":8,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":272,"2":"124","3":"Première étage","4":8,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.446973+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":273,"2":"124","3":"Première étage","4":7,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":273,"2":"124","3":"Première étage","4":7,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.447161+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":274,"2":"124","3":"Première étage","4":7,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":274,"2":"124","3":"Première étage","4":7,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.447362+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":275,"2":"124","3":"Première étage","4":8,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":275,"2":"124","3":"Première étage","4":8,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.447552+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":276,"2":"124","3":"Première étage","4":5,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":276,"2":"124","3":"Première étage","4":5,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.447714+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":277,"2":"124","3":"Première étage","4":6,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":277,"2":"124","3":"Première étage","4":6,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.447885+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":278,"2":"124","3":"Première étage","4":8,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":278,"2":"124","3":"Première étage","4":8,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.448047+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":279,"2":"124","3":"Première étage","4":5,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":279,"2":"124","3":"Première étage","4":5,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.448261+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":280,"2":"124","3":"Première étage","4":5,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":280,"2":"124","3":"Première étage","4":5,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.448437+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":281,"2":"124","3":"Première étage","4":6,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":281,"2":"124","3":"Première étage","4":6,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.448606+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":282,"2":"124","3":"Première étage","4":7,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":282,"2":"124","3":"Première étage","4":7,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.448760+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":283,"2":"124","3":"Première étage","4":8,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":283,"2":"124","3":"Première étage","4":8,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.448910+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":284,"2":"124","3":"Première étage","4":7,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":284,"2":"124","3":"Première étage","4":7,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.449080+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":285,"2":"124","3":"Première étage","4":8,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":285,"2":"124","3":"Première étage","4":8,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.449266+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":286,"2":"124","3":"Première étage","4":8,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":286,"2":"124","3":"Première étage","4":8,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.449421+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":287,"2":"124","3":"Première étage","4":7,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":287,"2":"124","3":"Première étage","4":7,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.449584+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":288,"2":"124","3":"Première étage","4":7,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":288,"2":"124","3":"Première étage","4":7,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.449736+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":289,"2":"124","3":"Première étage","4":5,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":289,"2":"124","3":"Première étage","4":5,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.449894+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":290,"2":"124","3":"Première étage","4":8,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":290,"2":"124","3":"Première étage","4":8,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.450054+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":291,"2":"124","3":"Première étage","4":6,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":291,"2":"124","3":"Première étage","4":6,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.450252+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":292,"2":"124","3":"Première étage","4":5,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":292,"2":"124","3":"Première étage","4":5,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.450432+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":293,"2":"124","3":"Première étage","4":6,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":293,"2":"124","3":"Première étage","4":6,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.450608+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":294,"2":"124","3":"Première étage","4":7,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":294,"2":"124","3":"Première étage","4":7,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.450761+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":295,"2":"124","3":"Première étage","4":7,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":295,"2":"124","3":"Première étage","4":7,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.450911+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":296,"2":"124","3":"Première étage","4":8,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":296,"2":"124","3":"Première étage","4":8,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.451079+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":297,"2":"124","3":"Première étage","4":5,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":297,"2":"124","3":"Première étage","4":5,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.451275+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":298,"2":"124","3":"Première étage","4":7,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":298,"2":"124","3":"Première étage","4":7,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.451444+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":299,"2":"124","3":"Première étage","4":6,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":299,"2":"124","3":"Première étage","4":6,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.451604+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":300,"2":"124","3":"Première étage","4":5,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":300,"2":"124","3":"Première étage","4":5,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.451759+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":301,"2":"124","3":"Première étage","4":5,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":301,"2":"124","3":"Première étage","4":5,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.451918+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":302,"2":"124","3":"Première étage","4":6,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":302,"2":"124","3":"Première étage","4":6,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.452080+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":303,"2":"124","3":"Première étage","4":8,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":303,"2":"124","3":"Première étage","4":8,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.452238+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":304,"2":"124","3":"Première étage","4":5,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":304,"2":"124","3":"Première étage","4":5,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.452400+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":305,"2":"124","3":"Première étage","4":5,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":305,"2":"124","3":"Première étage","4":5,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.452560+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":306,"2":"124","3":"Première étage","4":8,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":306,"2":"124","3":"Première étage","4":8,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.452718+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":307,"2":"124","3":"Première étage","4":5,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":307,"2":"124","3":"Première étage","4":5,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.452900+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":308,"2":"124","3":"Première étage","4":7,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":308,"2":"124","3":"Première étage","4":7,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.453072+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":309,"2":"124","3":"Première étage","4":8,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":309,"2":"124","3":"Première étage","4":8,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.453274+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":310,"2":"124","3":"Première étage","4":5,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":310,"2":"124","3":"Première étage","4":5,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.453450+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":311,"2":"124","3":"Première étage","4":8,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":311,"2":"124","3":"Première étage","4":8,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.453608+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":312,"2":"124","3":"Première étage","4":5,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":312,"2":"124","3":"Première étage","4":5,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.453762+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":313,"2":"124","3":"Première étage","4":8,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":313,"2":"124","3":"Première étage","4":8,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.453927+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":314,"2":"124","3":"Première étage","4":8,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":314,"2":"124","3":"Première étage","4":8,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.454088+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":315,"2":"124","3":"Première étage","4":8,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":315,"2":"124","3":"Première étage","4":8,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.454284+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":316,"2":"124","3":"Première étage","4":7,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":316,"2":"124","3":"Première étage","4":7,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.454458+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":317,"2":"124","3":"Première étage","4":7,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":317,"2":"124","3":"Première étage","4":7,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.454610+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":318,"2":"124","3":"Première étage","4":7,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":318,"2":"124","3":"Première étage","4":7,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.454764+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":319,"2":"124","3":"Première étage","4":6,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":319,"2":"124","3":"Première étage","4":6,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.454921+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":320,"2":"124","3":"Première étage","4":8,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":320,"2":"124","3":"Première étage","4":8,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.455090+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":321,"2":"124","3":"Première étage","4":6,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":321,"2":"124","3":"Première étage","4":6,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.455365+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":322,"2":"124","3":"Première étage","4":7,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":322,"2":"124","3":"Première étage","4":7,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.455544+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":323,"2":"124","3":"Première étage","4":5,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":323,"2":"124","3":"Première étage","4":5,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.455700+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":324,"2":"124","3":"Première étage","4":6,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":324,"2":"124","3":"Première étage","4":6,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.455856+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":325,"2":"124","3":"Première étage","4":7,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":325,"2":"124","3":"Première étage","4":7,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.456012+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":326,"2":"124","3":"Première étage","4":5,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":326,"2":"124","3":"Première étage","4":5,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.456181+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":327,"2":"124","3":"Première étage","4":8,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":327,"2":"124","3":"Première étage","4":8,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.456355+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":328,"2":"124","3":"Première étage","4":7,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":328,"2":"124","3":"Première étage","4":7,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.456523+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":329,"2":"124","3":"Première étage","4":8,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":329,"2":"124","3":"Première étage","4":8,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.456675+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":330,"2":"124","3":"Première étage","4":7,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":330,"2":"124","3":"Première étage","4":7,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.456829+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":331,"2":"124","3":"Première étage","4":8,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":331,"2":"124","3":"Première étage","4":8,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.456993+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":332,"2":"124","3":"Première étage","4":7,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":332,"2":"124","3":"Première étage","4":7,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.457154+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":333,"2":"124","3":"Première étage","4":5,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":333,"2":"124","3":"Première étage","4":5,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.457315+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":334,"2":"124","3":"Première étage","4":7,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":334,"2":"124","3":"Première étage","4":7,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.457471+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":335,"2":"124","3":"Première étage","4":8,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":335,"2":"124","3":"Première étage","4":8,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.457625+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":336,"2":"124","3":"Première étage","4":8,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":336,"2":"124","3":"Première étage","4":8,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.457790+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":337,"2":"124","3":"Première étage","4":6,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":337,"2":"124","3":"Première étage","4":6,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.457944+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":338,"2":"124","3":"Première étage","4":5,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":338,"2":"124","3":"Première étage","4":5,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.458108+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":339,"2":"124","3":"Première étage","4":5,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":339,"2":"124","3":"Première étage","4":5,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.458272+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":340,"2":"124","3":"Première étage","4":7,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":340,"2":"124","3":"Première étage","4":7,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.458434+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":341,"2":"124","3":"Première étage","4":7,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":341,"2":"124","3":"Première étage","4":7,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.458588+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":342,"2":"124","3":"Première étage","4":5,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":342,"2":"124","3":"Première étage","4":5,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.458749+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":343,"2":"124","3":"Première étage","4":8,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":343,"2":"124","3":"Première étage","4":8,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.458910+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":344,"2":"124","3":"Première étage","4":8,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":344,"2":"124","3":"Première étage","4":8,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.459081+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":345,"2":"124","3":"Première étage","4":7,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":345,"2":"124","3":"Première étage","4":7,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.459259+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":346,"2":"124","3":"Première étage","4":5,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":346,"2":"124","3":"Première étage","4":5,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.459429+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":347,"2":"124","3":"Première étage","4":8,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":347,"2":"124","3":"Première étage","4":8,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.459582+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":348,"2":"124","3":"Première étage","4":8,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":348,"2":"124","3":"Première étage","4":8,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.459738+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":349,"2":"124","3":"Première étage","4":7,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":349,"2":"124","3":"Première étage","4":7,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.459890+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":350,"2":"124","3":"Première étage","4":8,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":350,"2":"124","3":"Première étage","4":8,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.460040+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":351,"2":"124","3":"Première étage","4":5,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":351,"2":"124","3":"Première étage","4":5,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.460229+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":352,"2":"124","3":"Première étage","4":5,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":352,"2":"124","3":"Première étage","4":5,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.460397+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":353,"2":"124","3":"Première étage","4":6,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":353,"2":"124","3":"Première étage","4":6,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.460584+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":354,"2":"124","3":"Première étage","4":7,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":354,"2":"124","3":"Première étage","4":7,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.460779+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":355,"2":"124","3":"Première étage","4":5,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":355,"2":"124","3":"Première étage","4":5,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.460921+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":356,"2":"124","3":"Première étage","4":8,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":356,"2":"124","3":"Première étage","4":8,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.461050+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":357,"2":"124","3":"Première étage","4":6,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":357,"2":"124","3":"Première étage","4":6,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.461204+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":358,"2":"124","3":"Première étage","4":5,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":358,"2":"124","3":"Première étage","4":5,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.461332+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":359,"2":"124","3":"Première étage","4":6,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":359,"2":"124","3":"Première étage","4":6,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.461459+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":360,"2":"124","3":"Première étage","4":8,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":360,"2":"124","3":"Première étage","4":8,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.461595+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":361,"2":"124","3":"Première étage","4":6,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":361,"2":"124","3":"Première étage","4":6,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.461722+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":362,"2":"124","3":"Première étage","4":6,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":362,"2":"124","3":"Première étage","4":6,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.461842+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":363,"2":"124","3":"Première étage","4":6,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":363,"2":"124","3":"Première étage","4":6,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.461971+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":364,"2":"124","3":"Première étage","4":5,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":364,"2":"124","3":"Première étage","4":5,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.462103+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":365,"2":"124","3":"Première étage","4":5,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":365,"2":"124","3":"Première étage","4":5,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.462269+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":366,"2":"124","3":"Première étage","4":7,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":366,"2":"124","3":"Première étage","4":7,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.462406+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":367,"2":"124","3":"Première étage","4":8,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":367,"2":"124","3":"Première étage","4":8,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.462536+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":368,"2":"124","3":"Première étage","4":5,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":368,"2":"124","3":"Première étage","4":5,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.462664+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":369,"2":"124","3":"Première étage","4":8,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":369,"2":"124","3":"Première étage","4":8,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.462788+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":370,"2":"124","3":"Première étage","4":8,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":370,"2":"124","3":"Première étage","4":8,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.462911+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":371,"2":"124","3":"Première étage","4":8,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":371,"2":"124","3":"Première étage","4":8,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.463040+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":372,"2":"124","3":"Première étage","4":7,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":372,"2":"124","3":"Première étage","4":7,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.463323+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":373,"2":"124","3":"Première étage","4":5,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":373,"2":"124","3":"Première étage","4":5,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.463472+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":374,"2":"124","3":"Première étage","4":8,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":374,"2":"124","3":"Première étage","4":8,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.463606+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":375,"2":"124","3":"Première étage","4":6,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":375,"2":"124","3":"Première étage","4":6,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.463740+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":376,"2":"124","3":"Première étage","4":6,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":376,"2":"124","3":"Première étage","4":6,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.463864+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":377,"2":"124","3":"Première étage","4":5,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":377,"2":"124","3":"Première étage","4":5,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.463992+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":378,"2":"124","3":"Première étage","4":8,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":378,"2":"124","3":"Première étage","4":8,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.464123+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":379,"2":"124","3":"Première étage","4":6,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":379,"2":"124","3":"Première étage","4":6,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.464250+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":380,"2":"124","3":"Première étage","4":5,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":380,"2":"124","3":"Première étage","4":5,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.464386+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":381,"2":"124","3":"Première étage","4":7,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":381,"2":"124","3":"Première étage","4":7,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.464510+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":382,"2":"124","3":"Première étage","4":5,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":382,"2":"124","3":"Première étage","4":5,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.464630+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":383,"2":"124","3":"Première étage","4":5,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":383,"2":"124","3":"Première étage","4":5,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.464765+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":384,"2":"124","3":"Première étage","4":5,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":384,"2":"124","3":"Première étage","4":5,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.464886+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":385,"2":"124","3":"Première étage","4":8,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":385,"2":"124","3":"Première étage","4":8,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.465005+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":386,"2":"124","3":"Première étage","4":7,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":386,"2":"124","3":"Première étage","4":7,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.465146+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":387,"2":"124","3":"Première étage","4":6,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":387,"2":"124","3":"Première étage","4":6,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.465273+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":388,"2":"124","3":"Première étage","4":8,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":388,"2":"124","3":"Première étage","4":8,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.465397+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":389,"2":"124","3":"Première étage","4":6,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":389,"2":"124","3":"Première étage","4":6,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.465523+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":390,"2":"124","3":"Première étage","4":6,"5":7}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":390,"2":"124","3":"Première étage","4":6,"5":7},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.465646+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":391,"2":"124","3":"Première étage","4":8,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":391,"2":"124","3":"Première étage","4":8,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.465770+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":392,"2":"124","3":"Première étage","4":8,"5":10}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":392,"2":"124","3":"Première étage","4":8,"5":10},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.465895+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":393,"2":"124","3":"Première étage","4":5,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":393,"2":"124","3":"Première étage","4":5,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.466015+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":394,"2":"124","3":"Première étage","4":5,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":394,"2":"124","3":"Première étage","4":5,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.466146+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":395,"2":"124","3":"Première étage","4":6,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":395,"2":"124","3":"Première étage","4":6,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.466280+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":396,"2":"124","3":"Première étage","4":7,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":396,"2":"124","3":"Première étage","4":7,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.466403+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":397,"2":"124","3":"Première étage","4":8,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":397,"2":"124","3":"Première étage","4":8,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.466532+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":398,"2":"124","3":"Première étage","4":8,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":398,"2":"124","3":"Première étage","4":8,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.466651+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":399,"2":"124","3":"Première étage","4":5,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":399,"2":"124","3":"Première étage","4":5,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.469796+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":400,"2":"124","3":"Première étage","4":7,"5":8}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":400,"2":"124","3":"Première étage","4":7,"5":8},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:03:03.470357+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.470762+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.type FROM "user" t0 WHERE t0.type IN ('client') {"sql":"SELECT t0.id AS id_1, t0.email AS email_2, t0.password AS password_3, t0.numero_telephone AS numero_telephone_4, t0.nom AS nom_5, t0.prenom AS prenom_6, t0.roles AS roles_7, t0.is_verified AS is_verified_8, t0.reset_token AS reset_token_9, t0.reset_token_expiration AS reset_token_expiration_10, t0.adresse_postal AS adresse_postal_11, t0.code_postal AS code_postal_12, t0.otp AS otp_13, t0.type FROM \"user\" t0 WHERE t0.type IN ('client')"} []
[2025-06-18T19:03:03.471947+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.numero_chambre AS numero_chambre_2, t0.etage_chambre AS etage_chambre_3, t0.hotel_id AS hotel_id_4, t0.format_chambre_id AS format_chambre_id_5 FROM chambre t0 {"sql":"SELECT t0.id AS id_1, t0.numero_chambre AS numero_chambre_2, t0.etage_chambre AS etage_chambre_3, t0.hotel_id AS hotel_id_4, t0.format_chambre_id AS format_chambre_id_5 FROM chambre t0"} []
[2025-06-18T19:03:03.476954+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.date AS date_2 FROM date t0 {"sql":"SELECT t0.id AS id_1, t0.date AS date_2 FROM date t0"} []
[2025-06-18T19:03:03.478206+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.478695+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.478938+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.479130+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.479731+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.480465+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.480607+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.480710+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.480810+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.480919+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.481013+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.481124+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.481231+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.481331+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.481426+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.481517+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.481614+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.481709+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.481800+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.481895+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.481989+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.482091+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.482195+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.482289+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.482380+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.482476+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.482570+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.482666+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.482761+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.482851+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.482953+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.483046+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.483154+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.483265+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.483362+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.483453+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.483558+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.483651+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.483741+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.483839+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:03:03.485499+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.485777+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":41,"2":3,"3":"2025-07-11 11:57:47","4":"2025-07-13 11:57:47","5":17,"6":320,"7":141}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":41,"2":3,"3":"2025-07-11 11:57:47","4":"2025-07-13 11:57:47","5":17,"6":320,"7":141},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.486278+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":42,"2":1,"3":"2025-07-11 13:51:49","4":"2025-07-14 13:51:49","5":17,"6":271,"7":101}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":42,"2":1,"3":"2025-07-11 13:51:49","4":"2025-07-14 13:51:49","5":17,"6":271,"7":101},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.486544+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":43,"2":3,"3":"2025-06-22 18:38:45","4":"2025-06-27 18:38:45","5":17,"6":314,"7":159}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":43,"2":3,"3":"2025-06-22 18:38:45","4":"2025-06-27 18:38:45","5":17,"6":314,"7":159},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.486759+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":44,"2":3,"3":"2025-05-03 12:22:12","4":"2025-05-07 12:22:12","5":17,"6":293,"7":148}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":44,"2":3,"3":"2025-05-03 12:22:12","4":"2025-05-07 12:22:12","5":17,"6":293,"7":148},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.486968+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":45,"2":4,"3":"2025-07-21 00:30:57","4":"2025-07-22 00:30:57","5":17,"6":385,"7":142}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":45,"2":4,"3":"2025-07-21 00:30:57","4":"2025-07-22 00:30:57","5":17,"6":385,"7":142},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.487208+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":46,"2":4,"3":"2025-05-06 11:50:30","4":"2025-05-10 11:50:30","5":17,"6":250,"7":126}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":46,"2":4,"3":"2025-05-06 11:50:30","4":"2025-05-10 11:50:30","5":17,"6":250,"7":126},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.487424+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":47,"2":3,"3":"2025-08-07 15:58:17","4":"2025-08-09 15:58:17","5":17,"6":256,"7":122}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":47,"2":3,"3":"2025-08-07 15:58:17","4":"2025-08-09 15:58:17","5":17,"6":256,"7":122},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.487594+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":48,"2":2,"3":"2025-04-27 12:51:09","4":"2025-04-30 12:51:09","5":17,"6":233,"7":147}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":48,"2":2,"3":"2025-04-27 12:51:09","4":"2025-04-30 12:51:09","5":17,"6":233,"7":147},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.487761+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":49,"2":3,"3":"2025-08-12 05:18:05","4":"2025-08-17 05:18:05","5":17,"6":255,"7":137}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":49,"2":3,"3":"2025-08-12 05:18:05","4":"2025-08-17 05:18:05","5":17,"6":255,"7":137},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.487924+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":50,"2":1,"3":"2025-07-15 19:46:25","4":"2025-07-19 19:46:25","5":17,"6":223,"7":81}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":50,"2":1,"3":"2025-07-15 19:46:25","4":"2025-07-19 19:46:25","5":17,"6":223,"7":81},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.488094+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":51,"2":4,"3":"2025-06-15 16:30:48","4":"2025-06-20 16:30:48","5":18,"6":263,"7":120}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":51,"2":4,"3":"2025-06-15 16:30:48","4":"2025-06-20 16:30:48","5":18,"6":263,"7":120},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.488268+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":52,"2":4,"3":"2025-07-29 01:50:03","4":"2025-08-02 01:50:03","5":18,"6":228,"7":152}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":52,"2":4,"3":"2025-07-29 01:50:03","4":"2025-08-02 01:50:03","5":18,"6":228,"7":152},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.488436+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":53,"2":1,"3":"2025-08-05 05:24:33","4":"2025-08-10 05:24:33","5":18,"6":224,"7":146}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":53,"2":1,"3":"2025-08-05 05:24:33","4":"2025-08-10 05:24:33","5":18,"6":224,"7":146},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.488596+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":54,"2":3,"3":"2025-06-20 10:44:29","4":"2025-06-21 10:44:29","5":18,"6":389,"7":121}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":54,"2":3,"3":"2025-06-20 10:44:29","4":"2025-06-21 10:44:29","5":18,"6":389,"7":121},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.488774+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":55,"2":4,"3":"2025-08-12 09:44:40","4":"2025-08-16 09:44:40","5":18,"6":319,"7":87}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":55,"2":4,"3":"2025-08-12 09:44:40","4":"2025-08-16 09:44:40","5":18,"6":319,"7":87},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.488986+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":56,"2":3,"3":"2025-05-10 01:20:50","4":"2025-05-11 01:20:50","5":18,"6":394,"7":154}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":56,"2":3,"3":"2025-05-10 01:20:50","4":"2025-05-11 01:20:50","5":18,"6":394,"7":154},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.489183+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":57,"2":3,"3":"2025-06-29 02:04:37","4":"2025-07-02 02:04:37","5":18,"6":235,"7":114}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":57,"2":3,"3":"2025-06-29 02:04:37","4":"2025-07-02 02:04:37","5":18,"6":235,"7":114},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.489358+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":58,"2":2,"3":"2025-04-21 14:50:06","4":"2025-04-22 14:50:06","5":18,"6":316,"7":84}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":58,"2":2,"3":"2025-04-21 14:50:06","4":"2025-04-22 14:50:06","5":18,"6":316,"7":84},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.489529+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":59,"2":2,"3":"2025-05-30 06:17:12","4":"2025-06-03 06:17:12","5":18,"6":284,"7":99}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":59,"2":2,"3":"2025-05-30 06:17:12","4":"2025-06-03 06:17:12","5":18,"6":284,"7":99},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.489691+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":60,"2":2,"3":"2025-04-30 03:52:17","4":"2025-05-01 03:52:17","5":18,"6":261,"7":97}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":60,"2":2,"3":"2025-04-30 03:52:17","4":"2025-05-01 03:52:17","5":18,"6":261,"7":97},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.489859+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":61,"2":3,"3":"2025-05-17 02:50:02","4":"2025-05-20 02:50:02","5":19,"6":272,"7":147}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":61,"2":3,"3":"2025-05-17 02:50:02","4":"2025-05-20 02:50:02","5":19,"6":272,"7":147},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.490027+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":62,"2":3,"3":"2025-06-08 22:02:08","4":"2025-06-11 22:02:08","5":19,"6":371,"7":153}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":62,"2":3,"3":"2025-06-08 22:02:08","4":"2025-06-11 22:02:08","5":19,"6":371,"7":153},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.490302+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":63,"2":3,"3":"2025-06-20 05:44:01","4":"2025-06-24 05:44:01","5":19,"6":234,"7":92}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":63,"2":3,"3":"2025-06-20 05:44:01","4":"2025-06-24 05:44:01","5":19,"6":234,"7":92},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.490471+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":64,"2":3,"3":"2025-08-14 21:19:44","4":"2025-08-17 21:19:44","5":19,"6":283,"7":160}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":64,"2":3,"3":"2025-08-14 21:19:44","4":"2025-08-17 21:19:44","5":19,"6":283,"7":160},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.490643+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":65,"2":4,"3":"2025-04-30 08:42:08","4":"2025-05-01 08:42:08","5":19,"6":304,"7":96}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":65,"2":4,"3":"2025-04-30 08:42:08","4":"2025-05-01 08:42:08","5":19,"6":304,"7":96},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.490803+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":66,"2":3,"3":"2025-05-04 02:54:56","4":"2025-05-08 02:54:56","5":19,"6":390,"7":102}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":66,"2":3,"3":"2025-05-04 02:54:56","4":"2025-05-08 02:54:56","5":19,"6":390,"7":102},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.490978+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":67,"2":3,"3":"2025-05-24 13:04:57","4":"2025-05-26 13:04:57","5":19,"6":247,"7":135}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":67,"2":3,"3":"2025-05-24 13:04:57","4":"2025-05-26 13:04:57","5":19,"6":247,"7":135},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.491147+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":68,"2":3,"3":"2025-08-16 15:46:11","4":"2025-08-19 15:46:11","5":19,"6":351,"7":136}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":68,"2":3,"3":"2025-08-16 15:46:11","4":"2025-08-19 15:46:11","5":19,"6":351,"7":136},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.491323+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":69,"2":3,"3":"2025-06-28 16:12:09","4":"2025-07-03 16:12:09","5":19,"6":306,"7":133}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":69,"2":3,"3":"2025-06-28 16:12:09","4":"2025-07-03 16:12:09","5":19,"6":306,"7":133},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.491522+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":70,"2":3,"3":"2025-06-13 20:44:55","4":"2025-06-15 20:44:55","5":19,"6":318,"7":159}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":70,"2":3,"3":"2025-06-13 20:44:55","4":"2025-06-15 20:44:55","5":19,"6":318,"7":159},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.491700+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":71,"2":1,"3":"2025-06-11 09:00:06","4":"2025-06-12 09:00:06","5":20,"6":337,"7":101}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":71,"2":1,"3":"2025-06-11 09:00:06","4":"2025-06-12 09:00:06","5":20,"6":337,"7":101},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.491877+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":72,"2":3,"3":"2025-05-06 07:30:13","4":"2025-05-07 07:30:13","5":20,"6":330,"7":94}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":72,"2":3,"3":"2025-05-06 07:30:13","4":"2025-05-07 07:30:13","5":20,"6":330,"7":94},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.492044+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":73,"2":3,"3":"2025-07-31 21:55:40","4":"2025-08-01 21:55:40","5":20,"6":300,"7":111}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":73,"2":3,"3":"2025-07-31 21:55:40","4":"2025-08-01 21:55:40","5":20,"6":300,"7":111},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.492224+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":74,"2":5,"3":"2025-07-10 21:47:32","4":"2025-07-15 21:47:32","5":20,"6":219,"7":81}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":74,"2":5,"3":"2025-07-10 21:47:32","4":"2025-07-15 21:47:32","5":20,"6":219,"7":81},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.492392+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":75,"2":2,"3":"2025-05-01 00:52:24","4":"2025-05-06 00:52:24","5":20,"6":311,"7":116}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":75,"2":2,"3":"2025-05-01 00:52:24","4":"2025-05-06 00:52:24","5":20,"6":311,"7":116},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.492558+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":76,"2":4,"3":"2025-05-14 05:45:12","4":"2025-05-19 05:45:12","5":20,"6":296,"7":149}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":76,"2":4,"3":"2025-05-14 05:45:12","4":"2025-05-19 05:45:12","5":20,"6":296,"7":149},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.492724+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":77,"2":2,"3":"2025-04-26 10:45:27","4":"2025-05-01 10:45:27","5":20,"6":320,"7":90}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":77,"2":2,"3":"2025-04-26 10:45:27","4":"2025-05-01 10:45:27","5":20,"6":320,"7":90},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.492897+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":78,"2":3,"3":"2025-05-11 12:51:26","4":"2025-05-14 12:51:26","5":20,"6":236,"7":131}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":78,"2":3,"3":"2025-05-11 12:51:26","4":"2025-05-14 12:51:26","5":20,"6":236,"7":131},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.493058+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":79,"2":3,"3":"2025-08-09 19:07:06","4":"2025-08-12 19:07:06","5":20,"6":236,"7":99}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":79,"2":3,"3":"2025-08-09 19:07:06","4":"2025-08-12 19:07:06","5":20,"6":236,"7":99},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.493224+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":80,"2":3,"3":"2025-06-25 04:46:28","4":"2025-06-26 04:46:28","5":20,"6":383,"7":119}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":80,"2":3,"3":"2025-06-25 04:46:28","4":"2025-06-26 04:46:28","5":20,"6":383,"7":119},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:03:03.493415+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:03:03.493580+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-06-18T19:03:03.494844+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T19:05:34.869567+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"}} []
[2025-06-18T19:05:34.880229+00:00] doctrine.DEBUG: Executing statement: DROP DATABASE "ma_base" {"sql":"DROP DATABASE \"ma_base\""} []
[2025-06-18T19:05:39.893172+00:00] console.DEBUG: Command "doctrine:database:drop --force" exited with code "1" {"command":"doctrine:database:drop --force","code":1} []
[2025-06-18T19:05:39.893542+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T19:05:48.956707+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"}} []
[2025-06-18T19:05:48.967151+00:00] doctrine.DEBUG: Executing statement: DROP DATABASE "ma_base" {"sql":"DROP DATABASE \"ma_base\""} []
[2025-06-18T19:05:48.993229+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T19:05:53.194511+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"}} []
[2025-06-18T19:05:53.205132+00:00] doctrine.DEBUG: Executing statement: CREATE DATABASE "ma_base" {"sql":"CREATE DATABASE \"ma_base\""} []
[2025-06-18T19:05:53.231032+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T19:05:55.378085+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T19:05:55.390334+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T19:05:55.391588+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-18T19:05:55.394849+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T19:05:55.395072+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-18T19:05:55.396666+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-06-18T19:05:55.397158+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T19:05:55.397286+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ma_base'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ma_base'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-06-18T19:05:55.398164+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T19:05:55.398321+00:00] doctrine.DEBUG: Executing query: SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-06-18T19:05:55.401644+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-06-18T19:05:55.402764+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-06-18T19:05:55.403580+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-06-18T19:05:55.404898+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-06-18T19:05:55.405684+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T19:05:55.407987+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T19:05:55.412642+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T19:05:55.418908+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-06-18T19:05:55.429777+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T19:05:55.431251+00:00] deprecation.INFO: User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T19:05:55.431682+00:00] deprecation.INFO: User Deprecated: Passing $sequence as a Sequence object to Doctrine\DBAL\Platforms\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Passing $sequence as a Sequence object to Doctrine\\DBAL\\Platforms\\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T19:05:55.433259+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T19:05:55.433462+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-18T19:05:55.433810+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-18T19:05:58.192897+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T19:05:58.203709+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T19:05:59.196268+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T19:05:59.197876+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-18T19:05:59.213915+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T19:05:59.217448+00:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version))"} []
[2025-06-18T19:05:59.225824+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-18T19:05:59.226793+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-18T19:05:59.227072+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-18T19:05:59.230664+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-06-18T19:05:59.232644+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE acheter_produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE acheter_produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T19:05:59.233470+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE biome_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE biome_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T19:05:59.234080+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T19:05:59.234613+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE "commande_id_seq" INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE \"commande_id_seq\" INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T19:05:59.235123+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE date_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE date_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T19:05:59.235585+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE dinosaure_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE dinosaure_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T19:05:59.235905+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE enclos_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE enclos_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T19:05:59.236176+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE format_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE format_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T19:05:59.236493+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE format_chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE format_chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T19:05:59.236754+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE horaire_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE horaire_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T19:05:59.236960+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T19:05:59.237193+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE jour_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE jour_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T19:05:59.237535+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE louer_hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE louer_hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T19:05:59.237816+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE payer_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE payer_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T19:05:59.238620+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T19:05:59.239168+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE remboursement_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE remboursement_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T19:05:59.239382+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE restaurant_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE restaurant_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T19:05:59.239566+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE "user_id_seq" INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE \"user_id_seq\" INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-18T19:05:59.239752+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE acheter_produit (id INT NOT NULL, commande_id INT DEFAULT NULL, produit_id INT DEFAULT NULL, quantite INT NOT NULL, prix DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE acheter_produit (id INT NOT NULL, commande_id INT DEFAULT NULL, produit_id INT DEFAULT NULL, quantite INT NOT NULL, prix DOUBLE PRECISION NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T19:05:59.242287+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_A704F21082EA2E54 ON acheter_produit (commande_id) {"sql":"    CREATE INDEX IDX_A704F21082EA2E54 ON acheter_produit (commande_id)"} []
[2025-06-18T19:05:59.244023+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_A704F210F347EFB ON acheter_produit (produit_id) {"sql":"    CREATE INDEX IDX_A704F210F347EFB ON acheter_produit (produit_id)"} []
[2025-06-18T19:05:59.245728+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE administrateur (id INT NOT NULL, admin_level INT NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE administrateur (id INT NOT NULL, admin_level INT NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T19:05:59.247958+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE biome (id INT NOT NULL, libelle_biome VARCHAR(255) NOT NULL, description_biome VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE biome (id INT NOT NULL, libelle_biome VARCHAR(255) NOT NULL, description_biome VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T19:05:59.251200+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE chambre (id INT NOT NULL, hotel_id INT NOT NULL, format_chambre_id INT NOT NULL, numero_chambre VARCHAR(255) NOT NULL, etage_chambre VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE chambre (id INT NOT NULL, hotel_id INT NOT NULL, format_chambre_id INT NOT NULL, numero_chambre VARCHAR(255) NOT NULL, etage_chambre VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T19:05:59.255977+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C509E4FF3243BB18 ON chambre (hotel_id) {"sql":"    CREATE INDEX IDX_C509E4FF3243BB18 ON chambre (hotel_id)"} []
[2025-06-18T19:05:59.257640+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C509E4FF589AE8D9 ON chambre (format_chambre_id) {"sql":"    CREATE INDEX IDX_C509E4FF589AE8D9 ON chambre (format_chambre_id)"} []
[2025-06-18T19:05:59.259474+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE client (id INT NOT NULL, adresse_postal VARCHAR(255) NOT NULL, code_postal INT NOT NULL, otp VARCHAR(6) DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE client (id INT NOT NULL, adresse_postal VARCHAR(255) NOT NULL, code_postal INT NOT NULL, otp VARCHAR(6) DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-06-18T19:05:59.261792+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE "commande" (id INT NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, status VARCHAR(255) NOT NULL, total DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE \"commande\" (id INT NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, status VARCHAR(255) NOT NULL, total DOUBLE PRECISION NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T19:05:59.264029+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN "commande".created_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN \"commande\".created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-18T19:05:59.264360+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE date (id INT NOT NULL, date TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE date (id INT NOT NULL, date TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T19:05:59.266794+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE dinosaure (id INT NOT NULL, enclos_id INT NOT NULL, image_dinosaure VARCHAR(255) NOT NULL, libelle_dinosaure VARCHAR(255) NOT NULL, regime_dinosaure VARCHAR(255) NOT NULL, ere_dinosaure VARCHAR(255) NOT NULL, description_dinosaure VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE dinosaure (id INT NOT NULL, enclos_id INT NOT NULL, image_dinosaure VARCHAR(255) NOT NULL, libelle_dinosaure VARCHAR(255) NOT NULL, regime_dinosaure VARCHAR(255) NOT NULL, ere_dinosaure VARCHAR(255) NOT NULL, description_dinosaure VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T19:05:59.271469+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_450ADBC0B1C0859 ON dinosaure (enclos_id) {"sql":"    CREATE INDEX IDX_450ADBC0B1C0859 ON dinosaure (enclos_id)"} []
[2025-06-18T19:05:59.273567+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE enclos (id INT NOT NULL, biome_id INT NOT NULL, libelle_enclos VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE enclos (id INT NOT NULL, biome_id INT NOT NULL, libelle_enclos VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T19:05:59.276313+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_8CCECB21E43A64F9 ON enclos (biome_id) {"sql":"    CREATE INDEX IDX_8CCECB21E43A64F9 ON enclos (biome_id)"} []
[2025-06-18T19:05:59.278687+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE format_billet (id INT NOT NULL, libelle_billet VARCHAR(255) NOT NULL, image_billet VARCHAR(255) NOT NULL, description_billet VARCHAR(1000) NOT NULL, prix_billet INT NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE format_billet (id INT NOT NULL, libelle_billet VARCHAR(255) NOT NULL, image_billet VARCHAR(255) NOT NULL, description_billet VARCHAR(1000) NOT NULL, prix_billet INT NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T19:05:59.282963+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE format_chambre (id INT NOT NULL, libelle_format_chambre VARCHAR(255) NOT NULL, prix_format_chambre INT NOT NULL, description_format_billet VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE format_chambre (id INT NOT NULL, libelle_format_chambre VARCHAR(255) NOT NULL, prix_format_chambre INT NOT NULL, description_format_billet VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T19:05:59.286810+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE horaire (id INT NOT NULL, ouverture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fermeture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE horaire (id INT NOT NULL, ouverture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fermeture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T19:05:59.288487+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE hotel (id INT NOT NULL, biome_id INT DEFAULT NULL, libelle_hotel VARCHAR(255) NOT NULL, image_hotel VARCHAR(255) NOT NULL, description_hotel VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE hotel (id INT NOT NULL, biome_id INT DEFAULT NULL, libelle_hotel VARCHAR(255) NOT NULL, image_hotel VARCHAR(255) NOT NULL, description_hotel VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T19:05:59.293325+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_3535ED9E43A64F9 ON hotel (biome_id) {"sql":"    CREATE INDEX IDX_3535ED9E43A64F9 ON hotel (biome_id)"} []
[2025-06-18T19:05:59.295392+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE jour (id INT NOT NULL, libelle_jour VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE jour (id INT NOT NULL, libelle_jour VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T19:05:59.298051+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE louer_hotel (id INT NOT NULL, user_id INT NOT NULL, chambre_id INT NOT NULL, date_id INT NOT NULL, note INT NOT NULL, debut_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE louer_hotel (id INT NOT NULL, user_id INT NOT NULL, chambre_id INT NOT NULL, date_id INT NOT NULL, note INT NOT NULL, debut_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T19:05:59.300773+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_70C4104FA76ED395 ON louer_hotel (user_id) {"sql":"    CREATE INDEX IDX_70C4104FA76ED395 ON louer_hotel (user_id)"} []
[2025-06-18T19:05:59.303553+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_70C4104F9B177F54 ON louer_hotel (chambre_id) {"sql":"    CREATE INDEX IDX_70C4104F9B177F54 ON louer_hotel (chambre_id)"} []
[2025-06-18T19:05:59.306081+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_70C4104FB897366B ON louer_hotel (date_id) {"sql":"    CREATE INDEX IDX_70C4104FB897366B ON louer_hotel (date_id)"} []
[2025-06-18T19:05:59.308023+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE ouverture_restaurant (restaurant_id INT NOT NULL, jour_id INT NOT NULL, horaire_id INT NOT NULL, PRIMARY KEY(restaurant_id, jour_id, horaire_id)) {"sql":"    CREATE TABLE ouverture_restaurant (restaurant_id INT NOT NULL, jour_id INT NOT NULL, horaire_id INT NOT NULL, PRIMARY KEY(restaurant_id, jour_id, horaire_id))"} []
[2025-06-18T19:05:59.310938+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_697FD193B1E7706E ON ouverture_restaurant (restaurant_id) {"sql":"    CREATE INDEX IDX_697FD193B1E7706E ON ouverture_restaurant (restaurant_id)"} []
[2025-06-18T19:05:59.313514+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_697FD193220C6AD0 ON ouverture_restaurant (jour_id) {"sql":"    CREATE INDEX IDX_697FD193220C6AD0 ON ouverture_restaurant (jour_id)"} []
[2025-06-18T19:05:59.316301+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_697FD19358C54515 ON ouverture_restaurant (horaire_id) {"sql":"    CREATE INDEX IDX_697FD19358C54515 ON ouverture_restaurant (horaire_id)"} []
[2025-06-18T19:05:59.318697+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE payer_billet (id INT NOT NULL, user_id INT NOT NULL, billet_id INT NOT NULL, date_id INT NOT NULL, debut_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE payer_billet (id INT NOT NULL, user_id INT NOT NULL, billet_id INT NOT NULL, date_id INT NOT NULL, debut_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T19:05:59.324355+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_4744803CA76ED395 ON payer_billet (user_id) {"sql":"    CREATE INDEX IDX_4744803CA76ED395 ON payer_billet (user_id)"} []
[2025-06-18T19:05:59.326819+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_4744803C44973C78 ON payer_billet (billet_id) {"sql":"    CREATE INDEX IDX_4744803C44973C78 ON payer_billet (billet_id)"} []
[2025-06-18T19:05:59.328815+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_4744803CB897366B ON payer_billet (date_id) {"sql":"    CREATE INDEX IDX_4744803CB897366B ON payer_billet (date_id)"} []
[2025-06-18T19:05:59.331093+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE produit (id INT NOT NULL, libelle_produit VARCHAR(255) NOT NULL, image_produit VARCHAR(255) NOT NULL, description_produit VARCHAR(1000) NOT NULL, stock INT NOT NULL, disponible_achat BOOLEAN NOT NULL, prix_produit DOUBLE PRECISION NOT NULL, slug VARCHAR(255) DEFAULT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE produit (id INT NOT NULL, libelle_produit VARCHAR(255) NOT NULL, image_produit VARCHAR(255) NOT NULL, description_produit VARCHAR(1000) NOT NULL, stock INT NOT NULL, disponible_achat BOOLEAN NOT NULL, prix_produit DOUBLE PRECISION NOT NULL, slug VARCHAR(255) DEFAULT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-06-18T19:05:59.336553+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN produit.created_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN produit.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-18T19:05:59.336885+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE remboursement (id INT NOT NULL, client_id INT NOT NULL, billet_id INT NOT NULL, date_demande TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, statut VARCHAR(255) NOT NULL, motif VARCHAR(1500) NOT NULL, montant DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE remboursement (id INT NOT NULL, client_id INT NOT NULL, billet_id INT NOT NULL, date_demande TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, statut VARCHAR(255) NOT NULL, motif VARCHAR(1500) NOT NULL, montant DOUBLE PRECISION NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T19:05:59.343441+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C0C0D9EF19EB6921 ON remboursement (client_id) {"sql":"    CREATE INDEX IDX_C0C0D9EF19EB6921 ON remboursement (client_id)"} []
[2025-06-18T19:05:59.346781+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C0C0D9EF44973C78 ON remboursement (billet_id) {"sql":"    CREATE INDEX IDX_C0C0D9EF44973C78 ON remboursement (billet_id)"} []
[2025-06-18T19:05:59.349223+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE remboursement_billet (remboursement_id INT NOT NULL, payer_billet_id INT NOT NULL, PRIMARY KEY(remboursement_id, payer_billet_id)) {"sql":"    CREATE TABLE remboursement_billet (remboursement_id INT NOT NULL, payer_billet_id INT NOT NULL, PRIMARY KEY(remboursement_id, payer_billet_id))"} []
[2025-06-18T19:05:59.351449+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_B9B130B1F61EE8B ON remboursement_billet (remboursement_id) {"sql":"    CREATE INDEX IDX_B9B130B1F61EE8B ON remboursement_billet (remboursement_id)"} []
[2025-06-18T19:05:59.354162+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_B9B130B1102C441 ON remboursement_billet (payer_billet_id) {"sql":"    CREATE INDEX IDX_B9B130B1102C441 ON remboursement_billet (payer_billet_id)"} []
[2025-06-18T19:05:59.356917+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE remboursement_hotel (remboursement_id INT NOT NULL, louer_hotel_id INT NOT NULL, PRIMARY KEY(remboursement_id, louer_hotel_id)) {"sql":"    CREATE TABLE remboursement_hotel (remboursement_id INT NOT NULL, louer_hotel_id INT NOT NULL, PRIMARY KEY(remboursement_id, louer_hotel_id))"} []
[2025-06-18T19:05:59.359435+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_D7E7E7CF61EE8B ON remboursement_hotel (remboursement_id) {"sql":"    CREATE INDEX IDX_D7E7E7CF61EE8B ON remboursement_hotel (remboursement_id)"} []
[2025-06-18T19:05:59.361264+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_D7E7E7CCB4C1B45 ON remboursement_hotel (louer_hotel_id) {"sql":"    CREATE INDEX IDX_D7E7E7CCB4C1B45 ON remboursement_hotel (louer_hotel_id)"} []
[2025-06-18T19:05:59.363794+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE reserver_restaurant (client_id INT NOT NULL, restaurant_id INT NOT NULL, date_id INT NOT NULL, date_reservation TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, present BOOLEAN NOT NULL, nb_personne INT NOT NULL, PRIMARY KEY(client_id, restaurant_id, date_id)) {"sql":"    CREATE TABLE reserver_restaurant (client_id INT NOT NULL, restaurant_id INT NOT NULL, date_id INT NOT NULL, date_reservation TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, present BOOLEAN NOT NULL, nb_personne INT NOT NULL, PRIMARY KEY(client_id, restaurant_id, date_id))"} []
[2025-06-18T19:05:59.366580+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_25F6B43A19EB6921 ON reserver_restaurant (client_id) {"sql":"    CREATE INDEX IDX_25F6B43A19EB6921 ON reserver_restaurant (client_id)"} []
[2025-06-18T19:05:59.368920+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_25F6B43AB1E7706E ON reserver_restaurant (restaurant_id) {"sql":"    CREATE INDEX IDX_25F6B43AB1E7706E ON reserver_restaurant (restaurant_id)"} []
[2025-06-18T19:05:59.371226+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_25F6B43AB897366B ON reserver_restaurant (date_id) {"sql":"    CREATE INDEX IDX_25F6B43AB897366B ON reserver_restaurant (date_id)"} []
[2025-06-18T19:05:59.372951+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE restaurant (id INT NOT NULL, biome_id INT NOT NULL, libelle_restaurant VARCHAR(255) NOT NULL, image_restaurant VARCHAR(255) NOT NULL, nb_table INT NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE restaurant (id INT NOT NULL, biome_id INT NOT NULL, libelle_restaurant VARCHAR(255) NOT NULL, image_restaurant VARCHAR(255) NOT NULL, nb_table INT NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T19:05:59.377615+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_EB95123FE43A64F9 ON restaurant (biome_id) {"sql":"    CREATE INDEX IDX_EB95123FE43A64F9 ON restaurant (biome_id)"} []
[2025-06-18T19:05:59.379745+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE "user" (id INT NOT NULL, email VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, numero_telephone VARCHAR(255) NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, roles JSON NOT NULL, is_verified BOOLEAN NOT NULL, reset_token VARCHAR(255) DEFAULT NULL, reset_token_expiration TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, type VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE \"user\" (id INT NOT NULL, email VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, numero_telephone VARCHAR(255) NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, roles JSON NOT NULL, is_verified BOOLEAN NOT NULL, reset_token VARCHAR(255) DEFAULT NULL, reset_token_expiration TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, type VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-18T19:05:59.384627+00:00] doctrine.DEBUG: Executing query:     CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON "user" (email) {"sql":"    CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON \"user\" (email)"} []
[2025-06-18T19:05:59.386991+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-06-18T19:05:59.392310+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name) {"sql":"    CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name)"} []
[2025-06-18T19:05:59.394645+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at) {"sql":"    CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at)"} []
[2025-06-18T19:05:59.396882+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at) {"sql":"    CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at)"} []
[2025-06-18T19:05:59.398918+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-18T19:05:59.399282+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-18T19:05:59.399534+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-18T19:05:59.399695+00:00] doctrine.DEBUG: Executing query:     CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$         BEGIN             PERFORM pg_notify('messenger_messages', NEW.queue_name::text);             RETURN NEW;         END;     $$ LANGUAGE plpgsql; {"sql":"    CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$\n        BEGIN\n            PERFORM pg_notify('messenger_messages', NEW.queue_name::text);\n            RETURN NEW;\n        END;\n    $$ LANGUAGE plpgsql;"} []
[2025-06-18T19:05:59.401340+00:00] doctrine.DEBUG: Executing query:     DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages; {"sql":"    DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages;"} []
[2025-06-18T19:05:59.401624+00:00] doctrine.DEBUG: Executing query:     CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages(); {"sql":"    CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages();"} []
[2025-06-18T19:05:59.402203+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F21082EA2E54 FOREIGN KEY (commande_id) REFERENCES "commande" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F21082EA2E54 FOREIGN KEY (commande_id) REFERENCES \"commande\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.403455+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F210F347EFB FOREIGN KEY (produit_id) REFERENCES produit (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F210F347EFB FOREIGN KEY (produit_id) REFERENCES produit (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.404359+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE administrateur ADD CONSTRAINT FK_32EB52E8BF396750 FOREIGN KEY (id) REFERENCES "user" (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE administrateur ADD CONSTRAINT FK_32EB52E8BF396750 FOREIGN KEY (id) REFERENCES \"user\" (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.405251+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF3243BB18 FOREIGN KEY (hotel_id) REFERENCES hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF3243BB18 FOREIGN KEY (hotel_id) REFERENCES hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.406128+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF589AE8D9 FOREIGN KEY (format_chambre_id) REFERENCES format_chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF589AE8D9 FOREIGN KEY (format_chambre_id) REFERENCES format_chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.406889+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE client ADD CONSTRAINT FK_C7440455BF396750 FOREIGN KEY (id) REFERENCES "user" (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE client ADD CONSTRAINT FK_C7440455BF396750 FOREIGN KEY (id) REFERENCES \"user\" (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.407655+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE dinosaure ADD CONSTRAINT FK_450ADBC0B1C0859 FOREIGN KEY (enclos_id) REFERENCES enclos (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE dinosaure ADD CONSTRAINT FK_450ADBC0B1C0859 FOREIGN KEY (enclos_id) REFERENCES enclos (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.408454+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE enclos ADD CONSTRAINT FK_8CCECB21E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE enclos ADD CONSTRAINT FK_8CCECB21E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.409164+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE hotel ADD CONSTRAINT FK_3535ED9E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE hotel ADD CONSTRAINT FK_3535ED9E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.409813+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FA76ED395 FOREIGN KEY (user_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FA76ED395 FOREIGN KEY (user_id) REFERENCES \"user\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.410613+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104F9B177F54 FOREIGN KEY (chambre_id) REFERENCES chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104F9B177F54 FOREIGN KEY (chambre_id) REFERENCES chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.411544+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.412363+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193B1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193B1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.413594+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193220C6AD0 FOREIGN KEY (jour_id) REFERENCES jour (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193220C6AD0 FOREIGN KEY (jour_id) REFERENCES jour (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.414355+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD19358C54515 FOREIGN KEY (horaire_id) REFERENCES horaire (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD19358C54515 FOREIGN KEY (horaire_id) REFERENCES horaire (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.415009+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CA76ED395 FOREIGN KEY (user_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CA76ED395 FOREIGN KEY (user_id) REFERENCES \"user\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.415735+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803C44973C78 FOREIGN KEY (billet_id) REFERENCES format_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803C44973C78 FOREIGN KEY (billet_id) REFERENCES format_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.416621+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.417391+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF19EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF19EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.418389+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF44973C78 FOREIGN KEY (billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF44973C78 FOREIGN KEY (billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.419022+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1F61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1F61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.419905+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1102C441 FOREIGN KEY (payer_billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1102C441 FOREIGN KEY (payer_billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.420616+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CF61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CF61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.421374+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CCB4C1B45 FOREIGN KEY (louer_hotel_id) REFERENCES louer_hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CCB4C1B45 FOREIGN KEY (louer_hotel_id) REFERENCES louer_hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.421916+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43A19EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43A19EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.422549+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.423125+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.423693+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE restaurant ADD CONSTRAINT FK_EB95123FE43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE restaurant ADD CONSTRAINT FK_EB95123FE43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-18T19:05:59.424562+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250618190555","2":"2025-06-18 19:05:59","3":193}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250618190555","2":"2025-06-18 19:05:59","3":193},"types":{"1":2,"2":2,"3":1}} []
[2025-06-18T19:05:59.425203+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-06-18T19:05:59.436693+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-18T19:05:59.436955+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-18T19:05:59.437033+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T19:06:03.338774+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T19:06:03.349289+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-18T19:06:04.706218+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-06-18T19:06:04.709290+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T19:06:04.716202+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T19:06:04.725045+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T19:06:04.732551+00:00] doctrine.DEBUG: Executing statement: DELETE FROM remboursement_hotel {"sql":"DELETE FROM remboursement_hotel"} []
[2025-06-18T19:06:04.733328+00:00] doctrine.DEBUG: Executing statement: DELETE FROM louer_hotel {"sql":"DELETE FROM louer_hotel"} []
[2025-06-18T19:06:04.733615+00:00] doctrine.DEBUG: Executing statement: DELETE FROM remboursement_billet {"sql":"DELETE FROM remboursement_billet"} []
[2025-06-18T19:06:04.733794+00:00] doctrine.DEBUG: Executing statement: DELETE FROM remboursement {"sql":"DELETE FROM remboursement"} []
[2025-06-18T19:06:04.734000+00:00] doctrine.DEBUG: Executing statement: DELETE FROM payer_billet {"sql":"DELETE FROM payer_billet"} []
[2025-06-18T19:06:04.734276+00:00] doctrine.DEBUG: Executing statement: DELETE FROM reserver_restaurant {"sql":"DELETE FROM reserver_restaurant"} []
[2025-06-18T19:06:04.734578+00:00] doctrine.DEBUG: Executing statement: DELETE FROM "user" {"sql":"DELETE FROM \"user\""} []
[2025-06-18T19:06:04.734882+00:00] doctrine.DEBUG: Executing statement: DELETE FROM client {"sql":"DELETE FROM client"} []
[2025-06-18T19:06:04.735070+00:00] doctrine.DEBUG: Executing statement: DELETE FROM dinosaure {"sql":"DELETE FROM dinosaure"} []
[2025-06-18T19:06:04.735294+00:00] doctrine.DEBUG: Executing statement: DELETE FROM enclos {"sql":"DELETE FROM enclos"} []
[2025-06-18T19:06:04.735464+00:00] doctrine.DEBUG: Executing statement: DELETE FROM acheter_produit {"sql":"DELETE FROM acheter_produit"} []
[2025-06-18T19:06:04.735652+00:00] doctrine.DEBUG: Executing statement: DELETE FROM produit {"sql":"DELETE FROM produit"} []
[2025-06-18T19:06:04.735792+00:00] doctrine.DEBUG: Executing statement: DELETE FROM ouverture_restaurant {"sql":"DELETE FROM ouverture_restaurant"} []
[2025-06-18T19:06:04.735972+00:00] doctrine.DEBUG: Executing statement: DELETE FROM horaire {"sql":"DELETE FROM horaire"} []
[2025-06-18T19:06:04.736116+00:00] doctrine.DEBUG: Executing statement: DELETE FROM chambre {"sql":"DELETE FROM chambre"} []
[2025-06-18T19:06:04.736385+00:00] doctrine.DEBUG: Executing statement: DELETE FROM format_chambre {"sql":"DELETE FROM format_chambre"} []
[2025-06-18T19:06:04.736543+00:00] doctrine.DEBUG: Executing statement: DELETE FROM "commande" {"sql":"DELETE FROM \"commande\""} []
[2025-06-18T19:06:04.736676+00:00] doctrine.DEBUG: Executing statement: DELETE FROM restaurant {"sql":"DELETE FROM restaurant"} []
[2025-06-18T19:06:04.736840+00:00] doctrine.DEBUG: Executing statement: DELETE FROM hotel {"sql":"DELETE FROM hotel"} []
[2025-06-18T19:06:04.736985+00:00] doctrine.DEBUG: Executing statement: DELETE FROM biome {"sql":"DELETE FROM biome"} []
[2025-06-18T19:06:04.737119+00:00] doctrine.DEBUG: Executing statement: DELETE FROM date {"sql":"DELETE FROM date"} []
[2025-06-18T19:06:04.737371+00:00] doctrine.DEBUG: Executing statement: DELETE FROM format_billet {"sql":"DELETE FROM format_billet"} []
[2025-06-18T19:06:04.737511+00:00] doctrine.DEBUG: Executing statement: DELETE FROM jour {"sql":"DELETE FROM jour"} []
[2025-06-18T19:06:04.737630+00:00] doctrine.DEBUG: Executing statement: DELETE FROM administrateur {"sql":"DELETE FROM administrateur"} []
[2025-06-18T19:06:05.228005+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:06:05.716307+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:06:06.202624+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:06:06.688075+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:06:07.174572+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:06:07.178832+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:07.183175+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":1,"2":"admin1@parc.com","3":"$2y$13$qiufYkZ5sSYp4v7Ox5z29u3NZcwxalCpf.dqwKdrvMPFLC5LnQgQa","4":"0600000001","5":"Pierre","6":"Chartier","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":"administrateur"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":1,"2":"admin1@parc.com","3":"$2y$13$qiufYkZ5sSYp4v7Ox5z29u3NZcwxalCpf.dqwKdrvMPFLC5LnQgQa","4":"0600000001","5":"Pierre","6":"Chartier","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":"administrateur"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2}} []
[2025-06-18T19:06:07.183827+00:00] doctrine.DEBUG: Executing statement: INSERT INTO administrateur (id, admin_level) VALUES (?, ?) (parameters: array{"1":1,"2":1}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO administrateur (id, admin_level) VALUES (?, ?)","params":{"1":1,"2":1},"types":{"1":1,"2":1}} []
[2025-06-18T19:06:07.184530+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":2,"2":"admin2@parc.com","3":"$2y$13$EMc3koW8s5AzUQ56CudD2.g.XywuscBChrXNCCEZOAYkrRok3yfUq","4":"0600000002","5":"Martin","6":"Bruno","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":"administrateur"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":2,"2":"admin2@parc.com","3":"$2y$13$EMc3koW8s5AzUQ56CudD2.g.XywuscBChrXNCCEZOAYkrRok3yfUq","4":"0600000002","5":"Martin","6":"Bruno","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":"administrateur"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2}} []
[2025-06-18T19:06:07.184775+00:00] doctrine.DEBUG: Executing statement: INSERT INTO administrateur (id, admin_level) VALUES (?, ?) (parameters: array{"1":2,"2":2}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO administrateur (id, admin_level) VALUES (?, ?)","params":{"1":2,"2":2},"types":{"1":1,"2":1}} []
[2025-06-18T19:06:07.185036+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"admin3@parc.com","3":"$2y$13$dWbjhgJ.3lZkN2GpMMzdOuZjIzBydqT4ffPI770tHzGVDQbJh2s/a","4":"0600000003","5":"Lemoine","6":"Chloé","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":"administrateur"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"admin3@parc.com","3":"$2y$13$dWbjhgJ.3lZkN2GpMMzdOuZjIzBydqT4ffPI770tHzGVDQbJh2s/a","4":"0600000003","5":"Lemoine","6":"Chloé","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":"administrateur"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2}} []
[2025-06-18T19:06:07.185234+00:00] doctrine.DEBUG: Executing statement: INSERT INTO administrateur (id, admin_level) VALUES (?, ?) (parameters: array{"1":3,"2":3}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO administrateur (id, admin_level) VALUES (?, ?)","params":{"1":3,"2":3},"types":{"1":1,"2":1}} []
[2025-06-18T19:06:07.185453+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"admin4@parc.com","3":"$2y$13$v4ZxaPh3ms0MOttIBmHNIOaeeJQXuO6LzSh2AnteUiuqy/eiJPK9i","4":"0600000004","5":"Bernard","6":"David","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":"administrateur"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"admin4@parc.com","3":"$2y$13$v4ZxaPh3ms0MOttIBmHNIOaeeJQXuO6LzSh2AnteUiuqy/eiJPK9i","4":"0600000004","5":"Bernard","6":"David","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":"administrateur"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2}} []
[2025-06-18T19:06:07.185599+00:00] doctrine.DEBUG: Executing statement: INSERT INTO administrateur (id, admin_level) VALUES (?, ?) (parameters: array{"1":4,"2":2}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO administrateur (id, admin_level) VALUES (?, ?)","params":{"1":4,"2":2},"types":{"1":1,"2":1}} []
[2025-06-18T19:06:07.185783+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"admin5@parc.com","3":"$2y$13$.rpwk5lnCnSp.iAzxmQAzeOxv82dig7B1SrlUBMstJiFmVUfEU..q","4":"0600000005","5":"Petit","6":"Emma","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":"administrateur"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"admin5@parc.com","3":"$2y$13$.rpwk5lnCnSp.iAzxmQAzeOxv82dig7B1SrlUBMstJiFmVUfEU..q","4":"0600000005","5":"Petit","6":"Emma","7":"[\"ROLE_ADMIN\"]","8":1,"9":null,"10":null,"11":"administrateur"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2}} []
[2025-06-18T19:06:07.185933+00:00] doctrine.DEBUG: Executing statement: INSERT INTO administrateur (id, admin_level) VALUES (?, ?) (parameters: array{"1":5,"2":1}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO administrateur (id, admin_level) VALUES (?, ?)","params":{"1":5,"2":1},"types":{"1":1,"2":1}} []
[2025-06-18T19:06:07.186303+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:07.186602+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:06:07.186883+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:06:07.187076+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:06:07.187202+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:06:07.187338+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:06:07.187465+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:06:07.187592+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:06:07.187721+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:06:07.187838+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:06:07.187954+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('biome_id_seq') {"sql":"SELECT NEXTVAL('biome_id_seq')"} []
[2025-06-18T19:06:07.188228+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:07.188472+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":1,"2":"Savane","3":"Une vaste étendue herbeuse parsemée d’arbres, idéale pour les grands herbivores."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":1,"2":"Savane","3":"Une vaste étendue herbeuse parsemée d’arbres, idéale pour les grands herbivores."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:06:07.188975+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":2,"2":"Forêt tropicale","3":"Un environnement humide et dense en végétation, abritant des espèces rares et exotiques."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":2,"2":"Forêt tropicale","3":"Un environnement humide et dense en végétation, abritant des espèces rares et exotiques."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:06:07.189245+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":3,"2":"Désert","3":"Un biome aride avec des températures extrêmes, peuplé de créatures adaptées à la sécheresse."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":3,"2":"Désert","3":"Un biome aride avec des températures extrêmes, peuplé de créatures adaptées à la sécheresse."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:06:07.189450+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":4,"2":"Montagne","3":"Un terrain escarpé aux conditions climatiques variables, parfait pour les espèces résistantes."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":4,"2":"Montagne","3":"Un terrain escarpé aux conditions climatiques variables, parfait pour les espèces résistantes."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:06:07.189636+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":5,"2":"Marécage","3":"Un biome humide et vaseux où vivent des espèces amphibies et semi-aquatiques."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":5,"2":"Marécage","3":"Un biome humide et vaseux où vivent des espèces amphibies et semi-aquatiques."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:06:07.189811+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":6,"2":"Plaines","3":"Des étendues ouvertes de végétation basse, idéales pour les grands troupeaux de dinosaures."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":6,"2":"Plaines","3":"Des étendues ouvertes de végétation basse, idéales pour les grands troupeaux de dinosaures."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:06:07.189984+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":7,"2":"Jungle","3":"Une forêt dense et tropicale, riche en biodiversité et peu explorée."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":7,"2":"Jungle","3":"Une forêt dense et tropicale, riche en biodiversité et peu explorée."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:06:07.190155+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":8,"2":"Toundra","3":"Une zone froide avec peu de végétation, habitée par des espèces résistantes au froid."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":8,"2":"Toundra","3":"Une zone froide avec peu de végétation, habitée par des espèces résistantes au froid."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:06:07.190313+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":9,"2":"Volcanique","3":"Un biome rocheux, chaud et instable, proche d’activités géothermiques."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":9,"2":"Volcanique","3":"Un biome rocheux, chaud et instable, proche d’activités géothermiques."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:06:07.190451+00:00] doctrine.DEBUG: Executing statement: INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?) (parameters: array{"1":10,"2":"Lac","3":"Un grand plan d’eau entouré de végétation aquatique, idéal pour les espèces semi-aquatiques."}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO biome (id, libelle_biome, description_biome) VALUES (?, ?, ?)","params":{"1":10,"2":"Lac","3":"Un grand plan d’eau entouré de végétation aquatique, idéal pour les espèces semi-aquatiques."},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:06:07.190605+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:07.677586+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:06:08.163729+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:06:08.649710+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:06:09.136316+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:06:09.621598+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2025-06-18T19:06:09.622141+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.622413+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":6,"2":"lucas.dupont@mail.com","3":"$2y$13$nKJ77LRsIuO.DGxTN0HIYe0T6JaH0y2PQDvrj/fn5ByDKsZgZYe8e","4":"0612345678","5":"Dupont","6":"Lucas","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"client"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":6,"2":"lucas.dupont@mail.com","3":"$2y$13$nKJ77LRsIuO.DGxTN0HIYe0T6JaH0y2PQDvrj/fn5ByDKsZgZYe8e","4":"0612345678","5":"Dupont","6":"Lucas","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"client"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2}} []
[2025-06-18T19:06:09.622694+00:00] doctrine.DEBUG: Executing statement: INSERT INTO client (id, adresse_postal, code_postal, otp) VALUES (?, ?, ?, ?) (parameters: array{"1":6,"2":"12 Rue des Tricératops","3":75001,"4":null}, types: array{"1":1,"2":2,"3":1,"4":2}) {"sql":"INSERT INTO client (id, adresse_postal, code_postal, otp) VALUES (?, ?, ?, ?)","params":{"1":6,"2":"12 Rue des Tricératops","3":75001,"4":null},"types":{"1":1,"2":2,"3":1,"4":2}} []
[2025-06-18T19:06:09.623229+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":7,"2":"marie.lemoine@mail.com","3":"$2y$13$k3rlkig0sjOhP1suHOREYOJDGidWA9LuiWcWG4ZyWgZDiybgd21BS","4":"0623456789","5":"Lemoine","6":"Marie","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"client"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":7,"2":"marie.lemoine@mail.com","3":"$2y$13$k3rlkig0sjOhP1suHOREYOJDGidWA9LuiWcWG4ZyWgZDiybgd21BS","4":"0623456789","5":"Lemoine","6":"Marie","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"client"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2}} []
[2025-06-18T19:06:09.623463+00:00] doctrine.DEBUG: Executing statement: INSERT INTO client (id, adresse_postal, code_postal, otp) VALUES (?, ?, ?, ?) (parameters: array{"1":7,"2":"5 Avenue des Raptors","3":69002,"4":null}, types: array{"1":1,"2":2,"3":1,"4":2}) {"sql":"INSERT INTO client (id, adresse_postal, code_postal, otp) VALUES (?, ?, ?, ?)","params":{"1":7,"2":"5 Avenue des Raptors","3":69002,"4":null},"types":{"1":1,"2":2,"3":1,"4":2}} []
[2025-06-18T19:06:09.623729+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":8,"2":"kevin.nguyen@mail.com","3":"$2y$13$lVLt6143CPrFqwge8qGO1.uO5rM2jL/uPEYU0kCSTRHUE4t8GFUNC","4":"0634567890","5":"Nguyen","6":"Kevin","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"client"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":8,"2":"kevin.nguyen@mail.com","3":"$2y$13$lVLt6143CPrFqwge8qGO1.uO5rM2jL/uPEYU0kCSTRHUE4t8GFUNC","4":"0634567890","5":"Nguyen","6":"Kevin","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"client"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2}} []
[2025-06-18T19:06:09.623900+00:00] doctrine.DEBUG: Executing statement: INSERT INTO client (id, adresse_postal, code_postal, otp) VALUES (?, ?, ?, ?) (parameters: array{"1":8,"2":"24 Allée des Palmiers","3":13003,"4":null}, types: array{"1":1,"2":2,"3":1,"4":2}) {"sql":"INSERT INTO client (id, adresse_postal, code_postal, otp) VALUES (?, ?, ?, ?)","params":{"1":8,"2":"24 Allée des Palmiers","3":13003,"4":null},"types":{"1":1,"2":2,"3":1,"4":2}} []
[2025-06-18T19:06:09.624120+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":9,"2":"claire.bertrand@mail.com","3":"$2y$13$HmBsCpVmgfhkgwk8A.cBb.9LKsWplkw5uCyLgJsVIHWF37j0FtGq6","4":"0645678901","5":"Bertrand","6":"Claire","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"client"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":9,"2":"claire.bertrand@mail.com","3":"$2y$13$HmBsCpVmgfhkgwk8A.cBb.9LKsWplkw5uCyLgJsVIHWF37j0FtGq6","4":"0645678901","5":"Bertrand","6":"Claire","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"client"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2}} []
[2025-06-18T19:06:09.624283+00:00] doctrine.DEBUG: Executing statement: INSERT INTO client (id, adresse_postal, code_postal, otp) VALUES (?, ?, ?, ?) (parameters: array{"1":9,"2":"8 Boulevard des Fossiles","3":44000,"4":null}, types: array{"1":1,"2":2,"3":1,"4":2}) {"sql":"INSERT INTO client (id, adresse_postal, code_postal, otp) VALUES (?, ?, ?, ?)","params":{"1":9,"2":"8 Boulevard des Fossiles","3":44000,"4":null},"types":{"1":1,"2":2,"3":1,"4":2}} []
[2025-06-18T19:06:09.624482+00:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":10,"2":"sophie.rodriguez@mail.com","3":"$2y$13$65M4ig8XjTyELuuVXYl1DeVzjGWGnb8g1g7ypABrXDm50x0h4y.wO","4":"0656789012","5":"Rodriguez","6":"Sophie","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"client"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2}) {"sql":"INSERT INTO \"user\" (id, email, password, numero_telephone, nom, prenom, roles, is_verified, reset_token, reset_token_expiration, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":10,"2":"sophie.rodriguez@mail.com","3":"$2y$13$65M4ig8XjTyELuuVXYl1DeVzjGWGnb8g1g7ypABrXDm50x0h4y.wO","4":"0656789012","5":"Rodriguez","6":"Sophie","7":"[\"ROLE_CLIENT\"]","8":1,"9":null,"10":null,"11":"client"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":5,"9":2,"10":2,"11":2}} []
[2025-06-18T19:06:09.624639+00:00] doctrine.DEBUG: Executing statement: INSERT INTO client (id, adresse_postal, code_postal, otp) VALUES (?, ?, ?, ?) (parameters: array{"1":10,"2":"15 Route du T-Rex","3":34000,"4":null}, types: array{"1":1,"2":2,"3":1,"4":2}) {"sql":"INSERT INTO client (id, adresse_postal, code_postal, otp) VALUES (?, ?, ?, ?)","params":{"1":10,"2":"15 Route du T-Rex","3":34000,"4":null},"types":{"1":1,"2":2,"3":1,"4":2}} []
[2025-06-18T19:06:09.624806+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.624992+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.625225+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.625382+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.625498+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.625603+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.625723+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.625835+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.625948+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.626059+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.626193+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.626307+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.626415+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.626524+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.626640+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.626744+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.626860+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.626983+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.627100+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.627226+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.627337+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.627452+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.627552+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.627664+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.627774+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.627881+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.627998+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.628163+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.628312+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.628445+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.628555+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.628683+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.628799+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.628904+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.629018+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.629137+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.629256+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.629437+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.629632+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.629857+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.629995+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.630136+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.630273+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.630383+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.630503+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.630621+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.630744+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.630883+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.631031+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.631176+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.631296+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.631411+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.631520+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.631637+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.631740+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.631846+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.631980+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.632097+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.632238+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.632359+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.632481+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.632624+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.633298+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.633865+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.633980+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.634095+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.634208+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.634316+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.634428+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.634528+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.634629+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.634723+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.634820+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.634919+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.635013+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.635118+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.635222+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.635319+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.635419+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.635511+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.635606+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('date_id_seq') {"sql":"SELECT NEXTVAL('date_id_seq')"} []
[2025-06-18T19:06:09.635881+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.636068+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":1,"2":"2025-06-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":1,"2":"2025-06-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.636375+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":2,"2":"2025-06-19 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":2,"2":"2025-06-19 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.636557+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":3,"2":"2025-06-20 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":3,"2":"2025-06-20 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.636698+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":4,"2":"2025-06-21 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":4,"2":"2025-06-21 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.636818+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":5,"2":"2025-06-22 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":5,"2":"2025-06-22 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.636940+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":6,"2":"2025-06-23 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":6,"2":"2025-06-23 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.637071+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":7,"2":"2025-06-24 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":7,"2":"2025-06-24 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.637193+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":8,"2":"2025-06-25 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":8,"2":"2025-06-25 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.637315+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":9,"2":"2025-06-26 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":9,"2":"2025-06-26 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.637438+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":10,"2":"2025-06-27 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":10,"2":"2025-06-27 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.637554+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":11,"2":"2025-06-28 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":11,"2":"2025-06-28 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.637672+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":12,"2":"2025-06-29 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":12,"2":"2025-06-29 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.637794+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":13,"2":"2025-06-30 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":13,"2":"2025-06-30 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.637908+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":14,"2":"2025-07-01 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":14,"2":"2025-07-01 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.638036+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":15,"2":"2025-07-02 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":15,"2":"2025-07-02 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.638173+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":16,"2":"2025-07-03 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":16,"2":"2025-07-03 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.638305+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":17,"2":"2025-07-04 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":17,"2":"2025-07-04 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.638425+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":18,"2":"2025-07-05 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":18,"2":"2025-07-05 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.638548+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":19,"2":"2025-07-06 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":19,"2":"2025-07-06 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.638665+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":20,"2":"2025-07-07 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":20,"2":"2025-07-07 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.638780+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":21,"2":"2025-06-17 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":21,"2":"2025-06-17 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.638901+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":22,"2":"2025-06-16 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":22,"2":"2025-06-16 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.639020+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":23,"2":"2025-06-15 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":23,"2":"2025-06-15 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.639144+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":24,"2":"2025-06-14 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":24,"2":"2025-06-14 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.639273+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":25,"2":"2025-06-13 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":25,"2":"2025-06-13 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.639393+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":26,"2":"2025-06-12 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":26,"2":"2025-06-12 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.639507+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":27,"2":"2025-06-11 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":27,"2":"2025-06-11 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.639639+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":28,"2":"2025-06-10 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":28,"2":"2025-06-10 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.639760+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":29,"2":"2025-06-09 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":29,"2":"2025-06-09 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.639874+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":30,"2":"2025-06-08 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":30,"2":"2025-06-08 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.639995+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":31,"2":"2025-06-07 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":31,"2":"2025-06-07 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.640121+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":32,"2":"2025-06-06 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":32,"2":"2025-06-06 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.640240+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":33,"2":"2025-06-05 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":33,"2":"2025-06-05 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.640365+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":34,"2":"2025-06-04 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":34,"2":"2025-06-04 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.640488+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":35,"2":"2025-06-03 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":35,"2":"2025-06-03 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.640610+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":36,"2":"2025-06-02 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":36,"2":"2025-06-02 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.640731+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":37,"2":"2025-06-01 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":37,"2":"2025-06-01 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.640846+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":38,"2":"2025-05-31 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":38,"2":"2025-05-31 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.640972+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":39,"2":"2025-05-30 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":39,"2":"2025-05-30 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.641096+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":40,"2":"2025-05-29 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":40,"2":"2025-05-29 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.641218+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":41,"2":"2025-05-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":41,"2":"2025-05-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.641344+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":42,"2":"2025-04-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":42,"2":"2025-04-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.641462+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":43,"2":"2025-03-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":43,"2":"2025-03-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.641577+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":44,"2":"2025-02-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":44,"2":"2025-02-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.641708+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":45,"2":"2025-01-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":45,"2":"2025-01-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.641826+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":46,"2":"2024-12-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":46,"2":"2024-12-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.641948+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":47,"2":"2024-11-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":47,"2":"2024-11-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.642079+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":48,"2":"2024-10-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":48,"2":"2024-10-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.642203+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":49,"2":"2024-09-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":49,"2":"2024-09-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.642317+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":50,"2":"2024-08-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":50,"2":"2024-08-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.642443+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":51,"2":"2024-07-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":51,"2":"2024-07-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.642559+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":52,"2":"2024-06-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":52,"2":"2024-06-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.642674+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":53,"2":"2024-05-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":53,"2":"2024-05-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.642798+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":54,"2":"2024-04-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":54,"2":"2024-04-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.642918+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":55,"2":"2024-03-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":55,"2":"2024-03-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.643034+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":56,"2":"2024-02-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":56,"2":"2024-02-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.643279+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":57,"2":"2024-01-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":57,"2":"2024-01-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.643402+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":58,"2":"2023-12-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":58,"2":"2023-12-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.643519+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":59,"2":"2023-11-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":59,"2":"2023-11-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.643644+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":60,"2":"2023-10-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":60,"2":"2023-10-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.643759+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":61,"2":"2024-06-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":61,"2":"2024-06-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.643876+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":62,"2":"2023-06-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":62,"2":"2023-06-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.644000+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":63,"2":"2022-06-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":63,"2":"2022-06-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.644121+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":64,"2":"2021-06-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":64,"2":"2021-06-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.644246+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":65,"2":"2020-06-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":65,"2":"2020-06-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.644416+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":66,"2":"2019-06-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":66,"2":"2019-06-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.644560+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":67,"2":"2018-06-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":67,"2":"2018-06-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.644695+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":68,"2":"2017-06-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":68,"2":"2017-06-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.644803+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":69,"2":"2016-06-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":69,"2":"2016-06-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.644908+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":70,"2":"2015-06-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":70,"2":"2015-06-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.645019+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":71,"2":"2014-06-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":71,"2":"2014-06-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.645130+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":72,"2":"2013-06-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":72,"2":"2013-06-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.645248+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":73,"2":"2012-06-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":73,"2":"2012-06-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.645363+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":74,"2":"2011-06-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":74,"2":"2011-06-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.645473+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":75,"2":"2010-06-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":75,"2":"2010-06-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.645579+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":76,"2":"2009-06-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":76,"2":"2009-06-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.645689+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":77,"2":"2008-06-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":77,"2":"2008-06-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.645797+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":78,"2":"2007-06-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":78,"2":"2007-06-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.645906+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":79,"2":"2006-06-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":79,"2":"2006-06-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.646018+00:00] doctrine.DEBUG: Executing statement: INSERT INTO date (id, date) VALUES (?, ?) (parameters: array{"1":80,"2":"2005-06-18 19:06:09"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO date (id, date) VALUES (?, ?)","params":{"1":80,"2":"2005-06-18 19:06:09"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.646185+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.646380+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_billet_id_seq') {"sql":"SELECT NEXTVAL('format_billet_id_seq')"} []
[2025-06-18T19:06:09.646674+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_billet_id_seq') {"sql":"SELECT NEXTVAL('format_billet_id_seq')"} []
[2025-06-18T19:06:09.646805+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_billet_id_seq') {"sql":"SELECT NEXTVAL('format_billet_id_seq')"} []
[2025-06-18T19:06:09.646898+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_billet_id_seq') {"sql":"SELECT NEXTVAL('format_billet_id_seq')"} []
[2025-06-18T19:06:09.646987+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_billet_id_seq') {"sql":"SELECT NEXTVAL('format_billet_id_seq')"} []
[2025-06-18T19:06:09.647145+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.647278+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":1,"2":"Classique","3":"classique.jpg","4":"Un billet standard donnant accès à toutes les zones principales du parc.","5":50}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?)","params":{"1":1,"2":"Classique","3":"classique.jpg","4":"Un billet standard donnant accès à toutes les zones principales du parc.","5":50},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:06:09.647535+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":2,"2":"VIP","3":"vip.jpg","4":"Accès privilégié avec coupe-file, visite guidée et places réservées aux spectacles.","5":120}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?)","params":{"1":2,"2":"VIP","3":"vip.jpg","4":"Accès privilégié avec coupe-file, visite guidée et places réservées aux spectacles.","5":120},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:06:09.647680+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Famille","3":"famille.jpg","4":"Pack avantageux pour 2 adultes et jusqu’à 3 enfants.","5":160}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?)","params":{"1":3,"2":"Famille","3":"famille.jpg","4":"Pack avantageux pour 2 adultes et jusqu’à 3 enfants.","5":160},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:06:09.647808+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Étudiant","3":"etudiant.jpg","4":"Tarif réduit sur présentation d’une carte étudiante valide.","5":35}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?)","params":{"1":4,"2":"Étudiant","3":"etudiant.jpg","4":"Tarif réduit sur présentation d’une carte étudiante valide.","5":35},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:06:09.647931+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Soirée","3":"soiree.jpg","4":"Billet valable uniquement en fin de journée pour découvrir le parc au coucher du soleil.","5":25}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO format_billet (id, libelle_billet, image_billet, description_billet, prix_billet) VALUES (?, ?, ?, ?, ?)","params":{"1":5,"2":"Soirée","3":"soiree.jpg","4":"Billet valable uniquement en fin de journée pour découvrir le parc au coucher du soleil.","5":25},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:06:09.648070+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.660002+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('horaire_id_seq') {"sql":"SELECT NEXTVAL('horaire_id_seq')"} []
[2025-06-18T19:06:09.660456+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('horaire_id_seq') {"sql":"SELECT NEXTVAL('horaire_id_seq')"} []
[2025-06-18T19:06:09.660597+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('horaire_id_seq') {"sql":"SELECT NEXTVAL('horaire_id_seq')"} []
[2025-06-18T19:06:09.660696+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('horaire_id_seq') {"sql":"SELECT NEXTVAL('horaire_id_seq')"} []
[2025-06-18T19:06:09.660787+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('horaire_id_seq') {"sql":"SELECT NEXTVAL('horaire_id_seq')"} []
[2025-06-18T19:06:09.660873+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('horaire_id_seq') {"sql":"SELECT NEXTVAL('horaire_id_seq')"} []
[2025-06-18T19:06:09.660962+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('horaire_id_seq') {"sql":"SELECT NEXTVAL('horaire_id_seq')"} []
[2025-06-18T19:06:09.661098+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.661241+00:00] doctrine.DEBUG: Executing statement: INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?) (parameters: array{"1":1,"2":"2025-06-18 09:00:00","3":"2025-06-18 19:00:00"}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?)","params":{"1":1,"2":"2025-06-18 09:00:00","3":"2025-06-18 19:00:00"},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:06:09.661523+00:00] doctrine.DEBUG: Executing statement: INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?) (parameters: array{"1":2,"2":"2025-06-19 08:00:00","3":"2025-06-19 18:00:00"}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?)","params":{"1":2,"2":"2025-06-19 08:00:00","3":"2025-06-19 18:00:00"},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:06:09.661678+00:00] doctrine.DEBUG: Executing statement: INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?) (parameters: array{"1":3,"2":"2025-06-20 10:00:00","3":"2025-06-20 20:00:00"}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?)","params":{"1":3,"2":"2025-06-20 10:00:00","3":"2025-06-20 20:00:00"},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:06:09.661800+00:00] doctrine.DEBUG: Executing statement: INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?) (parameters: array{"1":4,"2":"2025-06-21 10:00:00","3":"2025-06-21 18:00:00"}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?)","params":{"1":4,"2":"2025-06-21 10:00:00","3":"2025-06-21 18:00:00"},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:06:09.661908+00:00] doctrine.DEBUG: Executing statement: INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?) (parameters: array{"1":5,"2":"2025-06-22 10:00:00","3":"2025-06-22 19:00:00"}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?)","params":{"1":5,"2":"2025-06-22 10:00:00","3":"2025-06-22 19:00:00"},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:06:09.662021+00:00] doctrine.DEBUG: Executing statement: INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?) (parameters: array{"1":6,"2":"2025-06-23 09:00:00","3":"2025-06-23 19:00:00"}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?)","params":{"1":6,"2":"2025-06-23 09:00:00","3":"2025-06-23 19:00:00"},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:06:09.662149+00:00] doctrine.DEBUG: Executing statement: INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?) (parameters: array{"1":7,"2":"2025-06-24 10:00:00","3":"2025-06-24 17:00:00"}, types: array{"1":1,"2":2,"3":2}) {"sql":"INSERT INTO horaire (id, ouverture, fermeture) VALUES (?, ?, ?)","params":{"1":7,"2":"2025-06-24 10:00:00","3":"2025-06-24 17:00:00"},"types":{"1":1,"2":2,"3":2}} []
[2025-06-18T19:06:09.662275+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.662462+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('jour_id_seq') {"sql":"SELECT NEXTVAL('jour_id_seq')"} []
[2025-06-18T19:06:09.662798+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('jour_id_seq') {"sql":"SELECT NEXTVAL('jour_id_seq')"} []
[2025-06-18T19:06:09.662973+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('jour_id_seq') {"sql":"SELECT NEXTVAL('jour_id_seq')"} []
[2025-06-18T19:06:09.663114+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('jour_id_seq') {"sql":"SELECT NEXTVAL('jour_id_seq')"} []
[2025-06-18T19:06:09.663262+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('jour_id_seq') {"sql":"SELECT NEXTVAL('jour_id_seq')"} []
[2025-06-18T19:06:09.663505+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('jour_id_seq') {"sql":"SELECT NEXTVAL('jour_id_seq')"} []
[2025-06-18T19:06:09.663747+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('jour_id_seq') {"sql":"SELECT NEXTVAL('jour_id_seq')"} []
[2025-06-18T19:06:09.664331+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.664524+00:00] doctrine.DEBUG: Executing statement: INSERT INTO jour (id, libelle_jour) VALUES (?, ?) (parameters: array{"1":1,"2":"Lundi"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO jour (id, libelle_jour) VALUES (?, ?)","params":{"1":1,"2":"Lundi"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.664863+00:00] doctrine.DEBUG: Executing statement: INSERT INTO jour (id, libelle_jour) VALUES (?, ?) (parameters: array{"1":2,"2":"Mardi"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO jour (id, libelle_jour) VALUES (?, ?)","params":{"1":2,"2":"Mardi"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.665136+00:00] doctrine.DEBUG: Executing statement: INSERT INTO jour (id, libelle_jour) VALUES (?, ?) (parameters: array{"1":3,"2":"Mercredi"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO jour (id, libelle_jour) VALUES (?, ?)","params":{"1":3,"2":"Mercredi"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.665331+00:00] doctrine.DEBUG: Executing statement: INSERT INTO jour (id, libelle_jour) VALUES (?, ?) (parameters: array{"1":4,"2":"Jeudi"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO jour (id, libelle_jour) VALUES (?, ?)","params":{"1":4,"2":"Jeudi"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.665498+00:00] doctrine.DEBUG: Executing statement: INSERT INTO jour (id, libelle_jour) VALUES (?, ?) (parameters: array{"1":5,"2":"Vendredi"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO jour (id, libelle_jour) VALUES (?, ?)","params":{"1":5,"2":"Vendredi"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.665773+00:00] doctrine.DEBUG: Executing statement: INSERT INTO jour (id, libelle_jour) VALUES (?, ?) (parameters: array{"1":6,"2":"Samedi"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO jour (id, libelle_jour) VALUES (?, ?)","params":{"1":6,"2":"Samedi"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.666056+00:00] doctrine.DEBUG: Executing statement: INSERT INTO jour (id, libelle_jour) VALUES (?, ?) (parameters: array{"1":7,"2":"Dimanche"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO jour (id, libelle_jour) VALUES (?, ?)","params":{"1":7,"2":"Dimanche"},"types":{"1":1,"2":2}} []
[2025-06-18T19:06:09.666314+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.666626+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:06:09.667099+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:06:09.667331+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:06:09.667484+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:06:09.667623+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:06:09.667741+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:06:09.667856+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:06:09.667984+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:06:09.668112+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:06:09.668219+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:06:09.668322+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:06:09.668419+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('produit_id_seq') {"sql":"SELECT NEXTVAL('produit_id_seq')"} []
[2025-06-18T19:06:09.668659+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.668912+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":1,"2":"Peluches Dino","3":"img/Produits/peluche.jpg","4":"Peluches douces représentant vos dinosaures préférés.","5":100,"6":1,"7":25.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":1,"2":"Peluches Dino","3":"img/Produits/peluche.jpg","4":"Peluches douces représentant vos dinosaures préférés.","5":100,"6":1,"7":25.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:06:09.669552+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":2,"2":"Casquette Jurassic","3":"img/Produits/casquette.jpg","4":"Casquette officielle du parc avec logo brodé.","5":50,"6":1,"7":18.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":2,"2":"Casquette Jurassic","3":"img/Produits/casquette.jpg","4":"Casquette officielle du parc avec logo brodé.","5":50,"6":1,"7":18.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:06:09.669839+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Gourde personnalisée","3":"img/Produits/gourde.jpg","4":"Gourde réutilisable avec prénom gravé, souvenir idéal.","5":75,"6":1,"7":15.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"Gourde personnalisée","3":"img/Produits/gourde.jpg","4":"Gourde réutilisable avec prénom gravé, souvenir idéal.","5":75,"6":1,"7":15.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:06:09.670117+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Poster panoramique","3":"img/Produits/poster.jpg","4":"Poster géant du parc vu du ciel, édition limitée.","5":30,"6":1,"7":100.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"Poster panoramique","3":"img/Produits/poster.jpg","4":"Poster géant du parc vu du ciel, édition limitée.","5":30,"6":1,"7":100.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:06:09.670348+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Mug T-Rex","3":"img/Produits/mug.jpg","4":"Mug en céramique avec illustration du célèbre T-Rex.","5":0,"6":0,"7":12.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Mug T-Rex","3":"img/Produits/mug.jpg","4":"Mug en céramique avec illustration du célèbre T-Rex.","5":0,"6":0,"7":12.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:06:09.670522+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":6,"2":"Sweat Velociraptor","3":"img/Produits/sweat.jpg","4":"Sweat à capuche ultra-confort avec motif Velociraptor en action.","5":45,"6":1,"7":40.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":6,"2":"Sweat Velociraptor","3":"img/Produits/sweat.jpg","4":"Sweat à capuche ultra-confort avec motif Velociraptor en action.","5":45,"6":1,"7":40.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:06:09.670709+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":7,"2":"Bracelet Fossile","3":"img/Produits/bracelet.jpg","4":"Bracelet en cuir avec pièce imitation fossile, élégant et préhistorique.","5":60,"6":1,"7":22.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":7,"2":"Bracelet Fossile","3":"img/Produits/bracelet.jpg","4":"Bracelet en cuir avec pièce imitation fossile, élégant et préhistorique.","5":60,"6":1,"7":22.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:06:09.670889+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":8,"2":"Sac à dos Isla Nublar","3":"img/Produits/sac.jpg","4":"Sac pratique avec carte du parc imprimée, idéal pour les explorateurs.","5":35,"6":1,"7":35.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":8,"2":"Sac à dos Isla Nublar","3":"img/Produits/sac.jpg","4":"Sac pratique avec carte du parc imprimée, idéal pour les explorateurs.","5":35,"6":1,"7":35.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:06:09.671077+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":9,"2":"Carnet Jurassic Notes","3":"img/Produits/carnet.jpg","4":"Petit carnet à spirale pour noter vos observations de terrain.","5":120,"6":1,"7":7.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":9,"2":"Carnet Jurassic Notes","3":"img/Produits/carnet.jpg","4":"Petit carnet à spirale pour noter vos observations de terrain.","5":120,"6":1,"7":7.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:06:09.671283+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":10,"2":"Stylo Raptor","3":"img/Produits/stylo.jpg","4":"Stylo noir avec tête de raptor en 3D, parfait pour écrire avec style.","5":200,"6":1,"7":40.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":10,"2":"Stylo Raptor","3":"img/Produits/stylo.jpg","4":"Stylo noir avec tête de raptor en 3D, parfait pour écrire avec style.","5":200,"6":1,"7":40.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:06:09.671462+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":11,"2":"T-Shirt DNA Lab","3":"img/Produits/tshirt.jpg","4":"T-shirt minimaliste avec logo du laboratoire ADN.","5":80,"6":1,"7":20.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":11,"2":"T-Shirt DNA Lab","3":"img/Produits/tshirt.jpg","4":"T-shirt minimaliste avec logo du laboratoire ADN.","5":80,"6":1,"7":20.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:06:09.671624+00:00] doctrine.DEBUG: Executing statement: INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":12,"2":"Badge VIP Jurassic","3":"img/Produits/badge.jpg","4":"Badge collector pour visiteurs privilégiés (ne donne pas accès au T-Rex 🦖).","5":300,"6":1,"7":5.0,"8":null,"9":null}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}) {"sql":"INSERT INTO produit (id, libelle_produit, image_produit, description_produit, stock, disponible_achat, prix_produit, slug, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":12,"2":"Badge VIP Jurassic","3":"img/Produits/badge.jpg","4":"Badge collector pour visiteurs privilégiés (ne donne pas accès au T-Rex 🦖).","5":300,"6":1,"7":5.0,"8":null,"9":null},"types":{"1":1,"2":2,"3":2,"4":2,"5":1,"6":5,"7":2,"8":2,"9":2}} []
[2025-06-18T19:06:09.671769+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.672784+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0"} []
[2025-06-18T19:06:09.675291+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('hotel_id_seq') {"sql":"SELECT NEXTVAL('hotel_id_seq')"} []
[2025-06-18T19:06:09.675561+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('hotel_id_seq') {"sql":"SELECT NEXTVAL('hotel_id_seq')"} []
[2025-06-18T19:06:09.675670+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('hotel_id_seq') {"sql":"SELECT NEXTVAL('hotel_id_seq')"} []
[2025-06-18T19:06:09.675759+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('hotel_id_seq') {"sql":"SELECT NEXTVAL('hotel_id_seq')"} []
[2025-06-18T19:06:09.675954+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.676302+00:00] doctrine.DEBUG: Executing statement: INSERT INTO hotel (id, libelle_hotel, image_hotel, description_hotel, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":1,"2":"Hôtel Jurassique","3":"img/Hotels/hotel1.jpg","4":"Un hôtel tout confort au cœur du parc, idéal pour observer les dinosaures.","5":2}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO hotel (id, libelle_hotel, image_hotel, description_hotel, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":1,"2":"Hôtel Jurassique","3":"img/Hotels/hotel1.jpg","4":"Un hôtel tout confort au cœur du parc, idéal pour observer les dinosaures.","5":2},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:06:09.676763+00:00] doctrine.DEBUG: Executing statement: INSERT INTO hotel (id, libelle_hotel, image_hotel, description_hotel, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":2,"2":"Hôtel Safari","3":"img/Hotels/hotel2.jpg","4":"Dormez sous les étoiles avec vue sur les plaines préhistoriques.","5":4}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO hotel (id, libelle_hotel, image_hotel, description_hotel, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":2,"2":"Hôtel Safari","3":"img/Hotels/hotel2.jpg","4":"Dormez sous les étoiles avec vue sur les plaines préhistoriques.","5":4},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:06:09.676943+00:00] doctrine.DEBUG: Executing statement: INSERT INTO hotel (id, libelle_hotel, image_hotel, description_hotel, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Refuge Volcanique","3":"img/Hotels/hotel3.jpg","4":"Un hébergement insolite à proximité d’un ancien volcan actif.","5":3}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO hotel (id, libelle_hotel, image_hotel, description_hotel, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":3,"2":"Refuge Volcanique","3":"img/Hotels/hotel3.jpg","4":"Un hébergement insolite à proximité d’un ancien volcan actif.","5":3},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:06:09.677095+00:00] doctrine.DEBUG: Executing statement: INSERT INTO hotel (id, libelle_hotel, image_hotel, description_hotel, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Lodge Tropical","3":"img/Hotels/hotel4.jpg","4":"Une immersion totale dans la jungle, au plus près de la nature.","5":6}, types: array{"1":1,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO hotel (id, libelle_hotel, image_hotel, description_hotel, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":4,"2":"Lodge Tropical","3":"img/Hotels/hotel4.jpg","4":"Une immersion totale dans la jungle, au plus près de la nature.","5":6},"types":{"1":1,"2":2,"3":2,"4":2,"5":1}} []
[2025-06-18T19:06:09.677252+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.677441+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0"} []
[2025-06-18T19:06:09.677738+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:06:09.677934+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:06:09.678041+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:06:09.678142+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:06:09.678232+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:06:09.678330+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:06:09.678415+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:06:09.684637+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:06:09.684999+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:06:09.685250+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('enclos_id_seq') {"sql":"SELECT NEXTVAL('enclos_id_seq')"} []
[2025-06-18T19:06:09.685740+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.686058+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":1,"2":"Enclos #1","3":2}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":1,"2":"Enclos #1","3":2},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:06:09.686838+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":2,"2":"Enclos #2","3":10}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":2,"2":"Enclos #2","3":10},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:06:09.687469+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":3,"2":"Enclos #3","3":6}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":3,"2":"Enclos #3","3":6},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:06:09.687900+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":4,"2":"Enclos #4","3":5}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":4,"2":"Enclos #4","3":5},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:06:09.688179+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":5,"2":"Enclos #5","3":2}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":5,"2":"Enclos #5","3":2},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:06:09.688423+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":6,"2":"Enclos #6","3":10}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":6,"2":"Enclos #6","3":10},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:06:09.688647+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":7,"2":"Enclos #7","3":5}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":7,"2":"Enclos #7","3":5},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:06:09.688819+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":8,"2":"Enclos #8","3":1}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":8,"2":"Enclos #8","3":1},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:06:09.688975+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":9,"2":"Enclos #9","3":7}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":9,"2":"Enclos #9","3":7},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:06:09.689149+00:00] doctrine.DEBUG: Executing statement: INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?) (parameters: array{"1":10,"2":"Enclos #10","3":8}, types: array{"1":1,"2":2,"3":1}) {"sql":"INSERT INTO enclos (id, libelle_enclos, biome_id) VALUES (?, ?, ?)","params":{"1":10,"2":"Enclos #10","3":8},"types":{"1":1,"2":2,"3":1}} []
[2025-06-18T19:06:09.689301+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.689538+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0"} []
[2025-06-18T19:06:09.689848+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('restaurant_id_seq') {"sql":"SELECT NEXTVAL('restaurant_id_seq')"} []
[2025-06-18T19:06:09.690053+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('restaurant_id_seq') {"sql":"SELECT NEXTVAL('restaurant_id_seq')"} []
[2025-06-18T19:06:09.690286+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('restaurant_id_seq') {"sql":"SELECT NEXTVAL('restaurant_id_seq')"} []
[2025-06-18T19:06:09.690389+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('restaurant_id_seq') {"sql":"SELECT NEXTVAL('restaurant_id_seq')"} []
[2025-06-18T19:06:09.690475+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('restaurant_id_seq') {"sql":"SELECT NEXTVAL('restaurant_id_seq')"} []
[2025-06-18T19:06:09.690680+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.690824+00:00] doctrine.DEBUG: Executing statement: INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":1,"2":"Jurassic Grill","3":"img/Restaurants/res1.jpg","4":40,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":1,"2":"Jurassic Grill","3":"img/Restaurants/res1.jpg","4":40,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.691189+00:00] doctrine.DEBUG: Executing statement: INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":2,"2":"Dino Dîner","3":"img/Restaurants/res2.jpg","4":30,"5":9}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":2,"2":"Dino Dîner","3":"img/Restaurants/res2.jpg","4":30,"5":9},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.691369+00:00] doctrine.DEBUG: Executing statement: INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Volcan Pizza","3":"img/Restaurants/res3.jpg","4":20,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":3,"2":"Volcan Pizza","3":"img/Restaurants/res3.jpg","4":20,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.691517+00:00] doctrine.DEBUG: Executing statement: INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Herbivore Café","3":"img/Restaurants/res4.jpg","4":20,"5":6}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":4,"2":"Herbivore Café","3":"img/Restaurants/res4.jpg","4":20,"5":6},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.691660+00:00] doctrine.DEBUG: Executing statement: INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"T-Rex Snack","3":"img/Restaurants/res5.jpg","4":15,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO restaurant (id, libelle_restaurant, image_restaurant, nb_table, biome_id) VALUES (?, ?, ?, ?, ?)","params":{"1":5,"2":"T-Rex Snack","3":"img/Restaurants/res5.jpg","4":15,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.691795+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.692357+00:00] doctrine.DEBUG: Executing query: SELECT t1.id AS id_2, t1.email AS email_3, t1.password AS password_4, t1.numero_telephone AS numero_telephone_5, t1.nom AS nom_6, t1.prenom AS prenom_7, t1.roles AS roles_8, t1.is_verified AS is_verified_9, t1.reset_token AS reset_token_10, t1.reset_token_expiration AS reset_token_expiration_11, t0.adresse_postal AS adresse_postal_12, t0.code_postal AS code_postal_13, t0.otp AS otp_14, t1.type FROM client t0 INNER JOIN "user" t1 ON t0.id = t1.id {"sql":"SELECT t1.id AS id_2, t1.email AS email_3, t1.password AS password_4, t1.numero_telephone AS numero_telephone_5, t1.nom AS nom_6, t1.prenom AS prenom_7, t1.roles AS roles_8, t1.is_verified AS is_verified_9, t1.reset_token AS reset_token_10, t1.reset_token_expiration AS reset_token_expiration_11, t0.adresse_postal AS adresse_postal_12, t0.code_postal AS code_postal_13, t0.otp AS otp_14, t1.type FROM client t0 INNER JOIN \"user\" t1 ON t0.id = t1.id"} []
[2025-06-18T19:06:09.693310+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.date AS date_2 FROM date t0 {"sql":"SELECT t0.id AS id_1, t0.date AS date_2 FROM date t0"} []
[2025-06-18T19:06:09.694028+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_billet AS libelle_billet_2, t0.image_billet AS image_billet_3, t0.description_billet AS description_billet_4, t0.prix_billet AS prix_billet_5 FROM format_billet t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_billet AS libelle_billet_2, t0.image_billet AS image_billet_3, t0.description_billet AS description_billet_4, t0.prix_billet AS prix_billet_5 FROM format_billet t0"} []
[2025-06-18T19:06:09.694342+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.694569+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.694690+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.694803+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.694917+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.695014+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.695181+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.695369+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.695503+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.695634+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.695810+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.695966+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.696127+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.696306+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.696547+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.697590+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.697835+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.698042+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.698361+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.698616+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.698836+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.699103+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.699456+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.699661+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.699820+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.699977+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.700112+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.700286+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.700464+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.700625+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.700768+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.700919+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.701056+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.701213+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.701359+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.701486+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.701630+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.701833+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.702025+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.702217+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('payer_billet_id_seq') {"sql":"SELECT NEXTVAL('payer_billet_id_seq')"} []
[2025-06-18T19:06:09.702952+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.703346+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":1,"2":"2025-04-25 11:48:39","3":"2025-04-26 11:48:39","4":"Lemoine","5":"Marie","6":7,"7":3,"8":54}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":1,"2":"2025-04-25 11:48:39","3":"2025-04-26 11:48:39","4":"Lemoine","5":"Marie","6":7,"7":3,"8":54},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.704480+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":2,"2":"2025-08-05 11:43:17","3":"2025-08-06 11:43:17","4":"Lemoine","5":"Marie","6":7,"7":5,"8":30}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":2,"2":"2025-08-05 11:43:17","3":"2025-08-06 11:43:17","4":"Lemoine","5":"Marie","6":7,"7":5,"8":30},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.704742+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"2025-08-01 20:54:17","3":"2025-08-02 20:54:17","4":"Lemoine","5":"Marie","6":7,"7":1,"8":39}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"2025-08-01 20:54:17","3":"2025-08-02 20:54:17","4":"Lemoine","5":"Marie","6":7,"7":1,"8":39},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.704955+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"2025-08-01 19:15:26","3":"2025-08-02 19:15:26","4":"Lemoine","5":"Marie","6":7,"7":4,"8":40}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"2025-08-01 19:15:26","3":"2025-08-02 19:15:26","4":"Lemoine","5":"Marie","6":7,"7":4,"8":40},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.705245+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"2025-04-30 04:16:47","3":"2025-05-01 04:16:47","4":"Lemoine","5":"Marie","6":7,"7":2,"8":70}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"2025-04-30 04:16:47","3":"2025-05-01 04:16:47","4":"Lemoine","5":"Marie","6":7,"7":2,"8":70},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.705487+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":6,"2":"2025-06-28 11:25:44","3":"2025-06-29 11:25:44","4":"Lemoine","5":"Marie","6":7,"7":4,"8":13}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":6,"2":"2025-06-28 11:25:44","3":"2025-06-29 11:25:44","4":"Lemoine","5":"Marie","6":7,"7":4,"8":13},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.705707+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":7,"2":"2025-05-23 11:03:52","3":"2025-05-24 11:03:52","4":"Lemoine","5":"Marie","6":7,"7":5,"8":42}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":7,"2":"2025-05-23 11:03:52","3":"2025-05-24 11:03:52","4":"Lemoine","5":"Marie","6":7,"7":5,"8":42},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.705859+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":8,"2":"2025-08-10 09:08:44","3":"2025-08-11 09:08:44","4":"Lemoine","5":"Marie","6":7,"7":3,"8":8}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":8,"2":"2025-08-10 09:08:44","3":"2025-08-11 09:08:44","4":"Lemoine","5":"Marie","6":7,"7":3,"8":8},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.706002+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":9,"2":"2025-05-29 00:37:04","3":"2025-05-30 00:37:04","4":"Lemoine","5":"Marie","6":7,"7":1,"8":78}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":9,"2":"2025-05-29 00:37:04","3":"2025-05-30 00:37:04","4":"Lemoine","5":"Marie","6":7,"7":1,"8":78},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.706169+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":10,"2":"2025-08-12 21:57:10","3":"2025-08-13 21:57:10","4":"Lemoine","5":"Marie","6":7,"7":1,"8":7}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":10,"2":"2025-08-12 21:57:10","3":"2025-08-13 21:57:10","4":"Lemoine","5":"Marie","6":7,"7":1,"8":7},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.706320+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":11,"2":"2025-06-18 04:40:00","3":"2025-06-19 04:40:00","4":"Nguyen","5":"Kevin","6":8,"7":1,"8":24}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":11,"2":"2025-06-18 04:40:00","3":"2025-06-19 04:40:00","4":"Nguyen","5":"Kevin","6":8,"7":1,"8":24},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.706460+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":12,"2":"2025-08-02 10:30:11","3":"2025-08-03 10:30:11","4":"Nguyen","5":"Kevin","6":8,"7":5,"8":56}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":12,"2":"2025-08-02 10:30:11","3":"2025-08-03 10:30:11","4":"Nguyen","5":"Kevin","6":8,"7":5,"8":56},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.706608+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":13,"2":"2025-07-05 02:51:25","3":"2025-07-06 02:51:25","4":"Nguyen","5":"Kevin","6":8,"7":1,"8":7}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":13,"2":"2025-07-05 02:51:25","3":"2025-07-06 02:51:25","4":"Nguyen","5":"Kevin","6":8,"7":1,"8":7},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.706750+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":14,"2":"2025-07-11 01:05:25","3":"2025-07-12 01:05:25","4":"Nguyen","5":"Kevin","6":8,"7":1,"8":48}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":14,"2":"2025-07-11 01:05:25","3":"2025-07-12 01:05:25","4":"Nguyen","5":"Kevin","6":8,"7":1,"8":48},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.706892+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":15,"2":"2025-04-26 15:33:06","3":"2025-04-27 15:33:06","4":"Nguyen","5":"Kevin","6":8,"7":2,"8":33}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":15,"2":"2025-04-26 15:33:06","3":"2025-04-27 15:33:06","4":"Nguyen","5":"Kevin","6":8,"7":2,"8":33},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.707044+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":16,"2":"2025-06-20 20:57:45","3":"2025-06-21 20:57:45","4":"Nguyen","5":"Kevin","6":8,"7":5,"8":43}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":16,"2":"2025-06-20 20:57:45","3":"2025-06-21 20:57:45","4":"Nguyen","5":"Kevin","6":8,"7":5,"8":43},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.707217+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":17,"2":"2025-07-14 03:23:39","3":"2025-07-15 03:23:39","4":"Nguyen","5":"Kevin","6":8,"7":4,"8":32}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":17,"2":"2025-07-14 03:23:39","3":"2025-07-15 03:23:39","4":"Nguyen","5":"Kevin","6":8,"7":4,"8":32},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.707371+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":18,"2":"2025-05-25 20:49:09","3":"2025-05-26 20:49:09","4":"Nguyen","5":"Kevin","6":8,"7":3,"8":27}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":18,"2":"2025-05-25 20:49:09","3":"2025-05-26 20:49:09","4":"Nguyen","5":"Kevin","6":8,"7":3,"8":27},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.707519+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":19,"2":"2025-07-11 09:47:37","3":"2025-07-12 09:47:37","4":"Nguyen","5":"Kevin","6":8,"7":5,"8":22}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":19,"2":"2025-07-11 09:47:37","3":"2025-07-12 09:47:37","4":"Nguyen","5":"Kevin","6":8,"7":5,"8":22},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.707657+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":20,"2":"2025-06-04 04:38:07","3":"2025-06-05 04:38:07","4":"Nguyen","5":"Kevin","6":8,"7":3,"8":76}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":20,"2":"2025-06-04 04:38:07","3":"2025-06-05 04:38:07","4":"Nguyen","5":"Kevin","6":8,"7":3,"8":76},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.707800+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":21,"2":"2025-06-23 01:37:28","3":"2025-06-24 01:37:28","4":"Bertrand","5":"Claire","6":9,"7":1,"8":60}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":21,"2":"2025-06-23 01:37:28","3":"2025-06-24 01:37:28","4":"Bertrand","5":"Claire","6":9,"7":1,"8":60},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.707958+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":22,"2":"2025-07-01 22:37:51","3":"2025-07-02 22:37:51","4":"Bertrand","5":"Claire","6":9,"7":1,"8":63}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":22,"2":"2025-07-01 22:37:51","3":"2025-07-02 22:37:51","4":"Bertrand","5":"Claire","6":9,"7":1,"8":63},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.708106+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":23,"2":"2025-05-26 23:05:14","3":"2025-05-27 23:05:14","4":"Bertrand","5":"Claire","6":9,"7":1,"8":51}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":23,"2":"2025-05-26 23:05:14","3":"2025-05-27 23:05:14","4":"Bertrand","5":"Claire","6":9,"7":1,"8":51},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.708265+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":24,"2":"2025-05-23 11:30:26","3":"2025-05-24 11:30:26","4":"Bertrand","5":"Claire","6":9,"7":2,"8":66}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":24,"2":"2025-05-23 11:30:26","3":"2025-05-24 11:30:26","4":"Bertrand","5":"Claire","6":9,"7":2,"8":66},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.708410+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":25,"2":"2025-04-23 09:02:41","3":"2025-04-24 09:02:41","4":"Bertrand","5":"Claire","6":9,"7":4,"8":61}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":25,"2":"2025-04-23 09:02:41","3":"2025-04-24 09:02:41","4":"Bertrand","5":"Claire","6":9,"7":4,"8":61},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.708549+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":26,"2":"2025-04-27 15:39:02","3":"2025-04-28 15:39:02","4":"Bertrand","5":"Claire","6":9,"7":2,"8":16}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":26,"2":"2025-04-27 15:39:02","3":"2025-04-28 15:39:02","4":"Bertrand","5":"Claire","6":9,"7":2,"8":16},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.708700+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":27,"2":"2025-05-25 14:37:21","3":"2025-05-26 14:37:21","4":"Bertrand","5":"Claire","6":9,"7":1,"8":58}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":27,"2":"2025-05-25 14:37:21","3":"2025-05-26 14:37:21","4":"Bertrand","5":"Claire","6":9,"7":1,"8":58},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.708841+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":28,"2":"2025-05-11 01:03:21","3":"2025-05-12 01:03:21","4":"Bertrand","5":"Claire","6":9,"7":2,"8":44}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":28,"2":"2025-05-11 01:03:21","3":"2025-05-12 01:03:21","4":"Bertrand","5":"Claire","6":9,"7":2,"8":44},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.709077+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":29,"2":"2025-05-12 19:38:06","3":"2025-05-13 19:38:06","4":"Bertrand","5":"Claire","6":9,"7":1,"8":56}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":29,"2":"2025-05-12 19:38:06","3":"2025-05-13 19:38:06","4":"Bertrand","5":"Claire","6":9,"7":1,"8":56},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.709320+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":30,"2":"2025-08-07 03:23:04","3":"2025-08-08 03:23:04","4":"Bertrand","5":"Claire","6":9,"7":5,"8":25}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":30,"2":"2025-08-07 03:23:04","3":"2025-08-08 03:23:04","4":"Bertrand","5":"Claire","6":9,"7":5,"8":25},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.709523+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":31,"2":"2025-05-20 13:41:58","3":"2025-05-21 13:41:58","4":"Rodriguez","5":"Sophie","6":10,"7":3,"8":43}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":31,"2":"2025-05-20 13:41:58","3":"2025-05-21 13:41:58","4":"Rodriguez","5":"Sophie","6":10,"7":3,"8":43},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.709692+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":32,"2":"2025-08-05 09:30:04","3":"2025-08-06 09:30:04","4":"Rodriguez","5":"Sophie","6":10,"7":2,"8":79}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":32,"2":"2025-08-05 09:30:04","3":"2025-08-06 09:30:04","4":"Rodriguez","5":"Sophie","6":10,"7":2,"8":79},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.709869+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":33,"2":"2025-07-15 13:52:28","3":"2025-07-16 13:52:28","4":"Rodriguez","5":"Sophie","6":10,"7":4,"8":23}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":33,"2":"2025-07-15 13:52:28","3":"2025-07-16 13:52:28","4":"Rodriguez","5":"Sophie","6":10,"7":4,"8":23},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.710037+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":34,"2":"2025-08-03 17:42:20","3":"2025-08-04 17:42:20","4":"Rodriguez","5":"Sophie","6":10,"7":3,"8":13}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":34,"2":"2025-08-03 17:42:20","3":"2025-08-04 17:42:20","4":"Rodriguez","5":"Sophie","6":10,"7":3,"8":13},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.710223+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":35,"2":"2025-08-10 08:18:14","3":"2025-08-11 08:18:14","4":"Rodriguez","5":"Sophie","6":10,"7":3,"8":60}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":35,"2":"2025-08-10 08:18:14","3":"2025-08-11 08:18:14","4":"Rodriguez","5":"Sophie","6":10,"7":3,"8":60},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.710402+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":36,"2":"2025-08-02 08:10:24","3":"2025-08-03 08:10:24","4":"Rodriguez","5":"Sophie","6":10,"7":2,"8":73}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":36,"2":"2025-08-02 08:10:24","3":"2025-08-03 08:10:24","4":"Rodriguez","5":"Sophie","6":10,"7":2,"8":73},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.710576+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":37,"2":"2025-07-14 05:56:28","3":"2025-07-15 05:56:28","4":"Rodriguez","5":"Sophie","6":10,"7":3,"8":14}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":37,"2":"2025-07-14 05:56:28","3":"2025-07-15 05:56:28","4":"Rodriguez","5":"Sophie","6":10,"7":3,"8":14},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.710742+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":38,"2":"2025-08-02 07:31:04","3":"2025-08-03 07:31:04","4":"Rodriguez","5":"Sophie","6":10,"7":1,"8":73}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":38,"2":"2025-08-02 07:31:04","3":"2025-08-03 07:31:04","4":"Rodriguez","5":"Sophie","6":10,"7":1,"8":73},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.710922+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":39,"2":"2025-06-12 01:32:58","3":"2025-06-13 01:32:58","4":"Rodriguez","5":"Sophie","6":10,"7":4,"8":71}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":39,"2":"2025-06-12 01:32:58","3":"2025-06-13 01:32:58","4":"Rodriguez","5":"Sophie","6":10,"7":4,"8":71},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.711094+00:00] doctrine.DEBUG: Executing statement: INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":40,"2":"2025-04-23 09:47:17","3":"2025-04-24 09:47:17","4":"Rodriguez","5":"Sophie","6":10,"7":1,"8":28}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}) {"sql":"INSERT INTO payer_billet (id, debut_billet, fin_billet, nom, prenom, user_id, billet_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":40,"2":"2025-04-23 09:47:17","3":"2025-04-24 09:47:17","4":"Rodriguez","5":"Sophie","6":10,"7":1,"8":28},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1}} []
[2025-06-18T19:06:09.711301+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.711649+00:00] doctrine.DEBUG: Executing query: SELECT t1.id AS id_2, t1.email AS email_3, t1.password AS password_4, t1.numero_telephone AS numero_telephone_5, t1.nom AS nom_6, t1.prenom AS prenom_7, t1.roles AS roles_8, t1.is_verified AS is_verified_9, t1.reset_token AS reset_token_10, t1.reset_token_expiration AS reset_token_expiration_11, t0.adresse_postal AS adresse_postal_12, t0.code_postal AS code_postal_13, t0.otp AS otp_14, t1.type FROM client t0 INNER JOIN "user" t1 ON t0.id = t1.id {"sql":"SELECT t1.id AS id_2, t1.email AS email_3, t1.password AS password_4, t1.numero_telephone AS numero_telephone_5, t1.nom AS nom_6, t1.prenom AS prenom_7, t1.roles AS roles_8, t1.is_verified AS is_verified_9, t1.reset_token AS reset_token_10, t1.reset_token_expiration AS reset_token_expiration_11, t0.adresse_postal AS adresse_postal_12, t0.code_postal AS code_postal_13, t0.otp AS otp_14, t1.type FROM client t0 INNER JOIN \"user\" t1 ON t0.id = t1.id"} []
[2025-06-18T19:06:09.712454+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.debut_billet AS debut_billet_2, t0.fin_billet AS fin_billet_3, t0.nom AS nom_4, t0.prenom AS prenom_5, t0.user_id AS user_id_6, t0.billet_id AS billet_id_7, t0.date_id AS date_id_8 FROM payer_billet t0 {"sql":"SELECT t0.id AS id_1, t0.debut_billet AS debut_billet_2, t0.fin_billet AS fin_billet_3, t0.nom AS nom_4, t0.prenom AS prenom_5, t0.user_id AS user_id_6, t0.billet_id AS billet_id_7, t0.date_id AS date_id_8 FROM payer_billet t0"} []
[2025-06-18T19:06:09.718293+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('remboursement_id_seq') {"sql":"SELECT NEXTVAL('remboursement_id_seq')"} []
[2025-06-18T19:06:09.719176+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('remboursement_id_seq') {"sql":"SELECT NEXTVAL('remboursement_id_seq')"} []
[2025-06-18T19:06:09.719733+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('remboursement_id_seq') {"sql":"SELECT NEXTVAL('remboursement_id_seq')"} []
[2025-06-18T19:06:09.720048+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('remboursement_id_seq') {"sql":"SELECT NEXTVAL('remboursement_id_seq')"} []
[2025-06-18T19:06:09.720348+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('remboursement_id_seq') {"sql":"SELECT NEXTVAL('remboursement_id_seq')"} []
[2025-06-18T19:06:09.720564+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('remboursement_id_seq') {"sql":"SELECT NEXTVAL('remboursement_id_seq')"} []
[2025-06-18T19:06:09.720808+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('remboursement_id_seq') {"sql":"SELECT NEXTVAL('remboursement_id_seq')"} []
[2025-06-18T19:06:09.721449+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.721671+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":1,"2":"2025-04-26 19:21:02","3":"Refusé","4":"Quod ipsam ea delectus eveniet eos ipsum pariatur aut est recusandae facere eos non.","5":72.85,"6":7,"7":26}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}) {"sql":"INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":1,"2":"2025-04-26 19:21:02","3":"Refusé","4":"Quod ipsam ea delectus eveniet eos ipsum pariatur aut est recusandae facere eos non.","5":72.85,"6":7,"7":26},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}} []
[2025-06-18T19:06:09.722256+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":2,"2":"2025-05-03 02:01:27","3":"Validé","4":"Excepturi consectetur hic voluptate ut necessitatibus quis unde numquam dolorum.","5":11.54,"6":7,"7":9}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}) {"sql":"INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":2,"2":"2025-05-03 02:01:27","3":"Validé","4":"Excepturi consectetur hic voluptate ut necessitatibus quis unde numquam dolorum.","5":11.54,"6":7,"7":9},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}} []
[2025-06-18T19:06:09.722689+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"2025-05-16 20:26:55","3":"Refusé","4":"Ipsum et quae voluptas dolorum fuga maiores.","5":82.91,"6":6,"7":11}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}) {"sql":"INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"2025-05-16 20:26:55","3":"Refusé","4":"Ipsum et quae voluptas dolorum fuga maiores.","5":82.91,"6":6,"7":11},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}} []
[2025-06-18T19:06:09.723313+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"2025-06-04 04:38:28","3":"En attente","4":"Voluptatem mollitia sed soluta cupiditate tempora magni numquam qui ipsam.","5":31.35,"6":7,"7":13}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}) {"sql":"INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"2025-06-04 04:38:28","3":"En attente","4":"Voluptatem mollitia sed soluta cupiditate tempora magni numquam qui ipsam.","5":31.35,"6":7,"7":13},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}} []
[2025-06-18T19:06:09.723629+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"2025-05-29 09:33:56","3":"En attente","4":"Fugiat impedit iste sit similique et quis id aspernatur maxime officia et magni est.","5":43.86,"6":6,"7":30}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}) {"sql":"INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"2025-05-29 09:33:56","3":"En attente","4":"Fugiat impedit iste sit similique et quis id aspernatur maxime officia et magni est.","5":43.86,"6":6,"7":30},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}} []
[2025-06-18T19:06:09.723890+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":6,"2":"2025-05-01 09:47:55","3":"Validé","4":"Dolores aut nisi quia sapiente et id enim velit alias iure quisquam ab.","5":58.93,"6":8,"7":34}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}) {"sql":"INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":6,"2":"2025-05-01 09:47:55","3":"Validé","4":"Dolores aut nisi quia sapiente et id enim velit alias iure quisquam ab.","5":58.93,"6":8,"7":34},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}} []
[2025-06-18T19:06:09.724274+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":7,"2":"2025-05-02 04:00:36","3":"Refusé","4":"Quaerat nobis tempore vel et deserunt assumenda.","5":91.36,"6":7,"7":22}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}) {"sql":"INSERT INTO remboursement (id, date_demande, statut, motif, montant, client_id, billet_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":7,"2":"2025-05-02 04:00:36","3":"Refusé","4":"Quaerat nobis tempore vel et deserunt assumenda.","5":91.36,"6":7,"7":22},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1}} []
[2025-06-18T19:06:09.724498+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.724749+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_chambre_id_seq') {"sql":"SELECT NEXTVAL('format_chambre_id_seq')"} []
[2025-06-18T19:06:09.725046+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_chambre_id_seq') {"sql":"SELECT NEXTVAL('format_chambre_id_seq')"} []
[2025-06-18T19:06:09.725233+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_chambre_id_seq') {"sql":"SELECT NEXTVAL('format_chambre_id_seq')"} []
[2025-06-18T19:06:09.725355+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_chambre_id_seq') {"sql":"SELECT NEXTVAL('format_chambre_id_seq')"} []
[2025-06-18T19:06:09.725460+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('format_chambre_id_seq') {"sql":"SELECT NEXTVAL('format_chambre_id_seq')"} []
[2025-06-18T19:06:09.725633+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.725780+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?) (parameters: array{"1":1,"2":"Chambre Standard","3":90,"4":"Une chambre confortable avec un lit double, salle de bain privée et vue sur le parc."}, types: array{"1":1,"2":2,"3":1,"4":2}) {"sql":"INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?)","params":{"1":1,"2":"Chambre Standard","3":90,"4":"Une chambre confortable avec un lit double, salle de bain privée et vue sur le parc."},"types":{"1":1,"2":2,"3":1,"4":2}} []
[2025-06-18T19:06:09.726152+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?) (parameters: array{"1":2,"2":"Chambre Familiale","3":140,"4":"Spacieuse, idéale pour les familles avec lits superposés, lit double et coin salon."}, types: array{"1":1,"2":2,"3":1,"4":2}) {"sql":"INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?)","params":{"1":2,"2":"Chambre Familiale","3":140,"4":"Spacieuse, idéale pour les familles avec lits superposés, lit double et coin salon."},"types":{"1":1,"2":2,"3":1,"4":2}} []
[2025-06-18T19:06:09.726362+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?) (parameters: array{"1":3,"2":"Suite Luxe","3":250,"4":"Suite haut de gamme avec jacuzzi privé, balcon panoramique et services exclusifs."}, types: array{"1":1,"2":2,"3":1,"4":2}) {"sql":"INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?)","params":{"1":3,"2":"Suite Luxe","3":250,"4":"Suite haut de gamme avec jacuzzi privé, balcon panoramique et services exclusifs."},"types":{"1":1,"2":2,"3":1,"4":2}} []
[2025-06-18T19:06:09.726522+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?) (parameters: array{"1":4,"2":"Cabane Jungle","3":120,"4":"Hébergement insolite perché dans les arbres, avec accès direct à la nature."}, types: array{"1":1,"2":2,"3":1,"4":2}) {"sql":"INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?)","params":{"1":4,"2":"Cabane Jungle","3":120,"4":"Hébergement insolite perché dans les arbres, avec accès direct à la nature."},"types":{"1":1,"2":2,"3":1,"4":2}} []
[2025-06-18T19:06:09.726673+00:00] doctrine.DEBUG: Executing statement: INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?) (parameters: array{"1":5,"2":"Tente Safari","3":100,"4":"Tente équipée pour une immersion totale dans le décor préhistorique, avec confort moderne."}, types: array{"1":1,"2":2,"3":1,"4":2}) {"sql":"INSERT INTO format_chambre (id, libelle_format_chambre, prix_format_chambre, description_format_billet) VALUES (?, ?, ?, ?)","params":{"1":5,"2":"Tente Safari","3":100,"4":"Tente équipée pour une immersion totale dans le décor préhistorique, avec confort moderne."},"types":{"1":1,"2":2,"3":1,"4":2}} []
[2025-06-18T19:06:09.726812+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.727562+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_enclos AS libelle_enclos_2, t0.biome_id AS biome_id_3 FROM enclos t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_enclos AS libelle_enclos_2, t0.biome_id AS biome_id_3 FROM enclos t0"} []
[2025-06-18T19:06:09.728809+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.729330+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.731107+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.731705+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.731981+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.732210+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.732590+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.732940+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.733333+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.733621+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.733831+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.734008+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.734228+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.734413+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.734784+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.735200+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.735419+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.735587+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.735740+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.735894+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.736135+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.736397+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.736579+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.736782+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.736994+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.737232+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.737414+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.737578+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.737743+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.737901+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.738058+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.738298+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.738518+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.738888+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.739321+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.739575+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.739742+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.739875+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.739996+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.740197+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.740376+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.740509+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.740639+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.740763+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('dinosaure_id_seq') {"sql":"SELECT NEXTVAL('dinosaure_id_seq')"} []
[2025-06-18T19:06:09.741207+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.741452+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":1,"2":"img/Dinosaures/Dsungaripterus.png","3":"Dsungaripterus","4":"Herbivore","5":"Crétacé","6":"Totam aut dicta ducimus blanditiis placeat. Laudantium velit qui debitis reprehenderit. Sit voluptas deleniti at et.","7":10}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":1,"2":"img/Dinosaures/Dsungaripterus.png","3":"Dsungaripterus","4":"Herbivore","5":"Crétacé","6":"Totam aut dicta ducimus blanditiis placeat. Laudantium velit qui debitis reprehenderit. Sit voluptas deleniti at et.","7":10},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.741906+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":2,"2":"img/Dinosaures/Pachycephalosaurus.png","3":"Pachycephalosaurus","4":"Carnivore","5":"Silurien","6":"Voluptatem et et aperiam sunt. Vel fuga et explicabo officia deleniti reiciendis officia et.","7":5}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":2,"2":"img/Dinosaures/Pachycephalosaurus.png","3":"Pachycephalosaurus","4":"Carnivore","5":"Silurien","6":"Voluptatem et et aperiam sunt. Vel fuga et explicabo officia deleniti reiciendis officia et.","7":5},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.742142+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"img/Dinosaures/Apatosaurus.png","3":"Apatosaurus","4":"Herbivore","5":"Silurien","6":"Porro omnis eveniet modi inventore qui. Dolor est velit occaecati accusamus quae quia.","7":3}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"img/Dinosaures/Apatosaurus.png","3":"Apatosaurus","4":"Herbivore","5":"Silurien","6":"Porro omnis eveniet modi inventore qui. Dolor est velit occaecati accusamus quae quia.","7":3},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.742338+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"img/Dinosaures/Gigantspinosaurus.png","3":"Gigantspinosaurus","4":"Carnivore","5":"Crétacé","6":"Ut veritatis non alias et est illo esse repellendus. Modi quidem ea nihil ut rerum nihil voluptatem consectetur. Et fugit aperiam iusto laboriosam sequi vel perferendis voluptas.","7":2}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"img/Dinosaures/Gigantspinosaurus.png","3":"Gigantspinosaurus","4":"Carnivore","5":"Crétacé","6":"Ut veritatis non alias et est illo esse repellendus. Modi quidem ea nihil ut rerum nihil voluptatem consectetur. Et fugit aperiam iusto laboriosam sequi vel perferendis voluptas.","7":2},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.742549+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"img/Dinosaures/Baryonyx.png","3":"Baryonyx","4":"Carnivore","5":"Carbonifère","6":"Non laboriosam illo et et repellat possimus. Praesentium aut architecto nisi voluptatem qui quis. Eos beatae suscipit reprehenderit ullam reiciendis.","7":6}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"img/Dinosaures/Baryonyx.png","3":"Baryonyx","4":"Carnivore","5":"Carbonifère","6":"Non laboriosam illo et et repellat possimus. Praesentium aut architecto nisi voluptatem qui quis. Eos beatae suscipit reprehenderit ullam reiciendis.","7":6},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.742822+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":6,"2":"img/Dinosaures/Attenborosaurus.png","3":"Attenborosaurus","4":"Herbivore","5":"Cambrien","6":"Qui vero vero qui est ab et laborum. Esse maiores voluptatem aut voluptas ut. Ipsum et reiciendis perferendis soluta.","7":6}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":6,"2":"img/Dinosaures/Attenborosaurus.png","3":"Attenborosaurus","4":"Herbivore","5":"Cambrien","6":"Qui vero vero qui est ab et laborum. Esse maiores voluptatem aut voluptas ut. Ipsum et reiciendis perferendis soluta.","7":6},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.743043+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":7,"2":"img/Dinosaures/Struthiomimus.png","3":"Struthiomimus","4":"Omnivore","5":"Ordovicien","6":"Aliquid in sed et et assumenda perferendis quod autem. Vitae sint dolorem dignissimos sed amet quis blanditiis.","7":5}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":7,"2":"img/Dinosaures/Struthiomimus.png","3":"Struthiomimus","4":"Omnivore","5":"Ordovicien","6":"Aliquid in sed et et assumenda perferendis quod autem. Vitae sint dolorem dignissimos sed amet quis blanditiis.","7":5},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.743246+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":8,"2":"img/Dinosaures/Ouranosaurus.png","3":"Ouranosaurus","4":"Herbivore","5":"Jurassique","6":"Qui quo et similique sunt suscipit unde facere. Dolores esse aliquam voluptatem doloribus a dignissimos voluptatem dicta. Non dicta repellendus ratione nihil placeat.","7":8}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":8,"2":"img/Dinosaures/Ouranosaurus.png","3":"Ouranosaurus","4":"Herbivore","5":"Jurassique","6":"Qui quo et similique sunt suscipit unde facere. Dolores esse aliquam voluptatem doloribus a dignissimos voluptatem dicta. Non dicta repellendus ratione nihil placeat.","7":8},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.743429+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":9,"2":"img/Dinosaures/Compsognathus.png","3":"Compsognathus","4":"Omnivore","5":"Devonien","6":"Dolores neque fugiat beatae. Omnis et nihil eaque laudantium est atque.","7":4}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":9,"2":"img/Dinosaures/Compsognathus.png","3":"Compsognathus","4":"Omnivore","5":"Devonien","6":"Dolores neque fugiat beatae. Omnis et nihil eaque laudantium est atque.","7":4},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.743593+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":10,"2":"img/Dinosaures/Polacanthus.png","3":"Polacanthus","4":"Herbivore","5":"Permien","6":"Voluptatem dolor totam consequuntur dignissimos id repellat harum. Dicta rem et voluptatum amet ipsum. Et necessitatibus inventore dolorem qui ut.","7":3}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":10,"2":"img/Dinosaures/Polacanthus.png","3":"Polacanthus","4":"Herbivore","5":"Permien","6":"Voluptatem dolor totam consequuntur dignissimos id repellat harum. Dicta rem et voluptatum amet ipsum. Et necessitatibus inventore dolorem qui ut.","7":3},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.743761+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":11,"2":"img/Dinosaures/Suchomimus.png","3":"Suchomimus","4":"Herbivore","5":"Permien","6":"Ut vel et optio ex est ex aut et. Dolorem qui autem nesciunt fugiat sunt.","7":8}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":11,"2":"img/Dinosaures/Suchomimus.png","3":"Suchomimus","4":"Herbivore","5":"Permien","6":"Ut vel et optio ex est ex aut et. Dolorem qui autem nesciunt fugiat sunt.","7":8},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.743975+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":12,"2":"img/Dinosaures/Ichthyosaurus.png","3":"Ichthyosaurus","4":"Omnivore","5":"Neogene","6":"Magni assumenda illum repellendus tempore. Veritatis quasi velit est cupiditate maiores unde nesciunt. Distinctio et corporis corporis.","7":1}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":12,"2":"img/Dinosaures/Ichthyosaurus.png","3":"Ichthyosaurus","4":"Omnivore","5":"Neogene","6":"Magni assumenda illum repellendus tempore. Veritatis quasi velit est cupiditate maiores unde nesciunt. Distinctio et corporis corporis.","7":1},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.744194+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":13,"2":"img/Dinosaures/Maaradactylus.png","3":"Maaradactylus","4":"Carnivore","5":"Trias","6":"A asperiores dolorum ipsam nisi nisi. Sit quia sunt nesciunt labore praesentium. Tempora sit tempore fugiat enim error magnam omnis molestiae.","7":9}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":13,"2":"img/Dinosaures/Maaradactylus.png","3":"Maaradactylus","4":"Carnivore","5":"Trias","6":"A asperiores dolorum ipsam nisi nisi. Sit quia sunt nesciunt labore praesentium. Tempora sit tempore fugiat enim error magnam omnis molestiae.","7":9},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.744421+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":14,"2":"img/Dinosaures/Tropeognathus.png","3":"Tropeognathus","4":"Omnivore","5":"Devonien","6":"Ipsa neque est velit. Molestiae aperiam iusto eos rerum. Quia non quia laboriosam.","7":8}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":14,"2":"img/Dinosaures/Tropeognathus.png","3":"Tropeognathus","4":"Omnivore","5":"Devonien","6":"Ipsa neque est velit. Molestiae aperiam iusto eos rerum. Quia non quia laboriosam.","7":8},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.744565+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":15,"2":"img/Dinosaures/Mamenchisaurus.png","3":"Mamenchisaurus","4":"Omnivore","5":"Devonien","6":"Dicta nulla cumque ipsam et reprehenderit. Est enim quasi expedita fugiat earum. Voluptatem iure et et.","7":3}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":15,"2":"img/Dinosaures/Mamenchisaurus.png","3":"Mamenchisaurus","4":"Omnivore","5":"Devonien","6":"Dicta nulla cumque ipsam et reprehenderit. Est enim quasi expedita fugiat earum. Voluptatem iure et et.","7":3},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.744714+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":16,"2":"img/Dinosaures/Archaeornithomimus.png","3":"Archaeornithomimus","4":"Omnivore","5":"Cambrien","6":"Eum et possimus corporis occaecati nihil sunt corporis perferendis. Non molestiae blanditiis veritatis voluptas magni enim aliquid.","7":7}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":16,"2":"img/Dinosaures/Archaeornithomimus.png","3":"Archaeornithomimus","4":"Omnivore","5":"Cambrien","6":"Eum et possimus corporis occaecati nihil sunt corporis perferendis. Non molestiae blanditiis veritatis voluptas magni enim aliquid.","7":7},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.744902+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":17,"2":"img/Dinosaures/Archaeornithomimus.png","3":"Archaeornithomimus","4":"Omnivore","5":"Trias","6":"Autem maxime pariatur est vel sint et nesciunt. Dolores dolorum commodi id commodi iusto nisi earum.","7":7}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":17,"2":"img/Dinosaures/Archaeornithomimus.png","3":"Archaeornithomimus","4":"Omnivore","5":"Trias","6":"Autem maxime pariatur est vel sint et nesciunt. Dolores dolorum commodi id commodi iusto nisi earum.","7":7},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.745080+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":18,"2":"img/Dinosaures/Carnotaurus.png","3":"Carnotaurus","4":"Omnivore","5":"Carbonifère","6":"Iste est dolores sunt ipsum. Qui et dignissimos accusantium quis consequatur doloremque suscipit. Facilis est dolores illo repudiandae consectetur laborum officia.","7":1}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":18,"2":"img/Dinosaures/Carnotaurus.png","3":"Carnotaurus","4":"Omnivore","5":"Carbonifère","6":"Iste est dolores sunt ipsum. Qui et dignissimos accusantium quis consequatur doloremque suscipit. Facilis est dolores illo repudiandae consectetur laborum officia.","7":1},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.745247+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":19,"2":"img/Dinosaures/Elasmosaurus.png","3":"Elasmosaurus","4":"Herbivore","5":"Neogene","6":"Voluptatem dolore eveniet voluptatum aliquam. Sunt odit totam velit ad quod. Dolorum fugiat quia earum consequuntur est accusantium.","7":4}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":19,"2":"img/Dinosaures/Elasmosaurus.png","3":"Elasmosaurus","4":"Herbivore","5":"Neogene","6":"Voluptatem dolore eveniet voluptatum aliquam. Sunt odit totam velit ad quod. Dolorum fugiat quia earum consequuntur est accusantium.","7":4},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.745433+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":20,"2":"img/Dinosaures/Gallimimus.png","3":"Gallimimus","4":"Carnivore","5":"Paleogene","6":"Nam ut voluptatem repellendus impedit dolor dolor culpa. Iste nemo corporis ipsam enim perspiciatis.","7":5}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":20,"2":"img/Dinosaures/Gallimimus.png","3":"Gallimimus","4":"Carnivore","5":"Paleogene","6":"Nam ut voluptatem repellendus impedit dolor dolor culpa. Iste nemo corporis ipsam enim perspiciatis.","7":5},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.745693+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":21,"2":"img/Dinosaures/Sinosauropteryx.png","3":"Sinosauropteryx","4":"Carnivore","5":"Carbonifère","6":"Veniam amet enim error sit consectetur velit. Itaque dolore quod totam quasi quo ut.","7":10}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":21,"2":"img/Dinosaures/Sinosauropteryx.png","3":"Sinosauropteryx","4":"Carnivore","5":"Carbonifère","6":"Veniam amet enim error sit consectetur velit. Itaque dolore quod totam quasi quo ut.","7":10},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.745994+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":22,"2":"img/Dinosaures/Giganotosaurus.png","3":"Giganotosaurus","4":"Omnivore","5":"Silurien","6":"Nesciunt molestiae vel aperiam neque. Et praesentium adipisci rerum vitae quis. Quia fuga eum temporibus architecto.","7":1}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":22,"2":"img/Dinosaures/Giganotosaurus.png","3":"Giganotosaurus","4":"Omnivore","5":"Silurien","6":"Nesciunt molestiae vel aperiam neque. Et praesentium adipisci rerum vitae quis. Quia fuga eum temporibus architecto.","7":1},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.746361+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":23,"2":"img/Dinosaures/Pentaceratops.png","3":"Pentaceratops","4":"Herbivore","5":"Crétacé","6":"Blanditiis saepe et dolorem quo aut rerum. Molestias laborum beatae cumque rerum quod.","7":7}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":23,"2":"img/Dinosaures/Pentaceratops.png","3":"Pentaceratops","4":"Herbivore","5":"Crétacé","6":"Blanditiis saepe et dolorem quo aut rerum. Molestias laborum beatae cumque rerum quod.","7":7},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.747249+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":24,"2":"img/Dinosaures/Corythosaurus.png","3":"Corythosaurus","4":"Carnivore","5":"Trias","6":"Magni vero ducimus qui non sequi. Sit animi aut velit est placeat. Laborum mollitia quia voluptas et.","7":3}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":24,"2":"img/Dinosaures/Corythosaurus.png","3":"Corythosaurus","4":"Carnivore","5":"Trias","6":"Magni vero ducimus qui non sequi. Sit animi aut velit est placeat. Laborum mollitia quia voluptas et.","7":3},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.748255+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":25,"2":"img/Dinosaures/Jeholopterus.png","3":"Jeholopterus","4":"Omnivore","5":"Crétacé","6":"Rerum qui et excepturi sapiente quam quia. Sunt eius ipsa quod. Voluptate ducimus nesciunt in velit deleniti quod.","7":8}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":25,"2":"img/Dinosaures/Jeholopterus.png","3":"Jeholopterus","4":"Omnivore","5":"Crétacé","6":"Rerum qui et excepturi sapiente quam quia. Sunt eius ipsa quod. Voluptate ducimus nesciunt in velit deleniti quod.","7":8},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.748480+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":26,"2":"img/Dinosaures/Euoplocephalus.png","3":"Euoplocephalus","4":"Herbivore","5":"Cambrien","6":"Molestiae aut deleniti qui. Similique sed soluta qui et. Accusantium qui suscipit nesciunt voluptatibus.","7":3}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":26,"2":"img/Dinosaures/Euoplocephalus.png","3":"Euoplocephalus","4":"Herbivore","5":"Cambrien","6":"Molestiae aut deleniti qui. Similique sed soluta qui et. Accusantium qui suscipit nesciunt voluptatibus.","7":3},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.748647+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":27,"2":"img/Dinosaures/Indoraptor.png","3":"Indoraptor","4":"Omnivore","5":"Ordovicien","6":"Vel et ducimus sit facilis nostrum. Aliquam atque quo accusantium voluptate necessitatibus corporis vel.","7":9}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":27,"2":"img/Dinosaures/Indoraptor.png","3":"Indoraptor","4":"Omnivore","5":"Ordovicien","6":"Vel et ducimus sit facilis nostrum. Aliquam atque quo accusantium voluptate necessitatibus corporis vel.","7":9},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.748809+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":28,"2":"img/Dinosaures/Chungkingosaurus.png","3":"Chungkingosaurus","4":"Herbivore","5":"Trias","6":"Autem consectetur voluptates voluptate repudiandae sunt hic qui. Velit laborum quod quibusdam perspiciatis laboriosam.","7":10}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":28,"2":"img/Dinosaures/Chungkingosaurus.png","3":"Chungkingosaurus","4":"Herbivore","5":"Trias","6":"Autem consectetur voluptates voluptate repudiandae sunt hic qui. Velit laborum quod quibusdam perspiciatis laboriosam.","7":10},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.749001+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":29,"2":"img/Dinosaures/Chasmosaurus.png","3":"Chasmosaurus","4":"Omnivore","5":"Crétacé","6":"Libero adipisci aspernatur asperiores. Quo molestiae atque aperiam ipsam dolor eos. Sunt deleniti consequatur nihil qui accusamus.","7":4}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":29,"2":"img/Dinosaures/Chasmosaurus.png","3":"Chasmosaurus","4":"Omnivore","5":"Crétacé","6":"Libero adipisci aspernatur asperiores. Quo molestiae atque aperiam ipsam dolor eos. Sunt deleniti consequatur nihil qui accusamus.","7":4},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.749359+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":30,"2":"img/Dinosaures/Liopleurodon.png","3":"Liopleurodon","4":"Carnivore","5":"Devonien","6":"Quisquam velit dicta est accusamus ad ratione in et. Et rerum et beatae mollitia autem.","7":5}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":30,"2":"img/Dinosaures/Liopleurodon.png","3":"Liopleurodon","4":"Carnivore","5":"Devonien","6":"Quisquam velit dicta est accusamus ad ratione in et. Et rerum et beatae mollitia autem.","7":5},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.749615+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":31,"2":"img/Dinosaures/Tarbosaurus.png","3":"Tarbosaurus","4":"Herbivore","5":"Ordovicien","6":"Quia eos mollitia totam odit sit voluptates expedita. Blanditiis repellat quia porro numquam. Qui atque inventore est minus vitae in.","7":4}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":31,"2":"img/Dinosaures/Tarbosaurus.png","3":"Tarbosaurus","4":"Herbivore","5":"Ordovicien","6":"Quia eos mollitia totam odit sit voluptates expedita. Blanditiis repellat quia porro numquam. Qui atque inventore est minus vitae in.","7":4},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.749880+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":32,"2":"img/Dinosaures/Proceratosaurus.png","3":"Proceratosaurus","4":"Omnivore","5":"Paleogene","6":"Rem eligendi fugiat rerum quis nulla nam. Velit ipsum veritatis eum rem dolorum. Nihil distinctio est saepe laborum ipsum.","7":4}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":32,"2":"img/Dinosaures/Proceratosaurus.png","3":"Proceratosaurus","4":"Omnivore","5":"Paleogene","6":"Rem eligendi fugiat rerum quis nulla nam. Velit ipsum veritatis eum rem dolorum. Nihil distinctio est saepe laborum ipsum.","7":4},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.750143+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":33,"2":"img/Dinosaures/Stegoceratops.png","3":"Stegoceratops","4":"Herbivore","5":"Crétacé","6":"Doloremque totam qui animi esse reprehenderit eos minus. Vitae voluptatem adipisci unde laborum numquam.","7":1}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":33,"2":"img/Dinosaures/Stegoceratops.png","3":"Stegoceratops","4":"Herbivore","5":"Crétacé","6":"Doloremque totam qui animi esse reprehenderit eos minus. Vitae voluptatem adipisci unde laborum numquam.","7":1},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.750368+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":34,"2":"img/Dinosaures/Monolophosaurus.png","3":"Monolophosaurus","4":"Herbivore","5":"Neogene","6":"Est vero est veritatis beatae dolore deleniti. Quia dignissimos quaerat labore tempora nemo qui. Dolores autem repellat dolorem voluptatibus sapiente deleniti eos.","7":7}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":34,"2":"img/Dinosaures/Monolophosaurus.png","3":"Monolophosaurus","4":"Herbivore","5":"Neogene","6":"Est vero est veritatis beatae dolore deleniti. Quia dignissimos quaerat labore tempora nemo qui. Dolores autem repellat dolorem voluptatibus sapiente deleniti eos.","7":7},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.750580+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":35,"2":"img/Dinosaures/Nothosaurus.png","3":"Nothosaurus","4":"Herbivore","5":"Cambrien","6":"Dolores nesciunt explicabo vitae laborum. Amet sequi id voluptas dolore.","7":7}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":35,"2":"img/Dinosaures/Nothosaurus.png","3":"Nothosaurus","4":"Herbivore","5":"Cambrien","6":"Dolores nesciunt explicabo vitae laborum. Amet sequi id voluptas dolore.","7":7},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.750781+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":36,"2":"img/Dinosaures/Spinoceratops.png","3":"Spinoceratops","4":"Omnivore","5":"Ordovicien","6":"Ullam nesciunt rerum dolor qui sit optio dolorum. Architecto velit ut quas quis beatae eaque est.","7":6}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":36,"2":"img/Dinosaures/Spinoceratops.png","3":"Spinoceratops","4":"Omnivore","5":"Ordovicien","6":"Ullam nesciunt rerum dolor qui sit optio dolorum. Architecto velit ut quas quis beatae eaque est.","7":6},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.750982+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":37,"2":"img/Dinosaures/Deinocheirus.png","3":"Deinocheirus","4":"Carnivore","5":"Ordovicien","6":"Ut quasi recusandae non necessitatibus qui dignissimos sed odio. At eligendi eligendi quis omnis aperiam quod nobis.","7":10}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":37,"2":"img/Dinosaures/Deinocheirus.png","3":"Deinocheirus","4":"Carnivore","5":"Ordovicien","6":"Ut quasi recusandae non necessitatibus qui dignissimos sed odio. At eligendi eligendi quis omnis aperiam quod nobis.","7":10},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.751315+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":38,"2":"img/Dinosaures/Styxosaurus.png","3":"Styxosaurus","4":"Herbivore","5":"Trias","6":"Non quis iure et et. Rerum similique veritatis ut debitis accusamus cum eaque.","7":1}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":38,"2":"img/Dinosaures/Styxosaurus.png","3":"Styxosaurus","4":"Herbivore","5":"Trias","6":"Non quis iure et et. Rerum similique veritatis ut debitis accusamus cum eaque.","7":1},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.751526+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":39,"2":"img/Dinosaures/Dunkleosteus.png","3":"Dunkleosteus","4":"Herbivore","5":"Neogene","6":"Modi minus eum cum rerum. Quas veniam tempora cupiditate ea officiis illo.","7":8}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":39,"2":"img/Dinosaures/Dunkleosteus.png","3":"Dunkleosteus","4":"Herbivore","5":"Neogene","6":"Modi minus eum cum rerum. Quas veniam tempora cupiditate ea officiis illo.","7":8},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.751711+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":40,"2":"img/Dinosaures/Alamosaurus.png","3":"Alamosaurus","4":"Carnivore","5":"Trias","6":"Magni eligendi consequatur reiciendis sunt laudantium dolores aspernatur. Possimus cum voluptatem rem est aut fugit inventore.","7":3}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":40,"2":"img/Dinosaures/Alamosaurus.png","3":"Alamosaurus","4":"Carnivore","5":"Trias","6":"Magni eligendi consequatur reiciendis sunt laudantium dolores aspernatur. Possimus cum voluptatem rem est aut fugit inventore.","7":3},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.751915+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":41,"2":"img/Dinosaures/Concavenator.png","3":"Concavenator","4":"Herbivore","5":"Cambrien","6":"Debitis et soluta quaerat. Officia animi quae modi praesentium rerum. Non ipsam eaque minus dolorum ea sed perspiciatis.","7":3}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":41,"2":"img/Dinosaures/Concavenator.png","3":"Concavenator","4":"Herbivore","5":"Cambrien","6":"Debitis et soluta quaerat. Officia animi quae modi praesentium rerum. Non ipsam eaque minus dolorum ea sed perspiciatis.","7":3},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.752116+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":42,"2":"img/Dinosaures/Tsintaosaurus.png","3":"Tsintaosaurus","4":"Herbivore","5":"Neogene","6":"Animi laboriosam est ex deserunt distinctio. Corporis est ab rerum cumque tempore. Itaque et consequatur sint sit ut.","7":10}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":42,"2":"img/Dinosaures/Tsintaosaurus.png","3":"Tsintaosaurus","4":"Herbivore","5":"Neogene","6":"Animi laboriosam est ex deserunt distinctio. Corporis est ab rerum cumque tempore. Itaque et consequatur sint sit ut.","7":10},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.752316+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":43,"2":"img/Dinosaures/Dilophosaurus.png","3":"Dilophosaurus","4":"Herbivore","5":"Devonien","6":"Sapiente architecto rerum veniam nobis natus dolorum ratione. Aut ducimus et enim provident. Illum deserunt qui natus sunt at numquam.","7":8}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":43,"2":"img/Dinosaures/Dilophosaurus.png","3":"Dilophosaurus","4":"Herbivore","5":"Devonien","6":"Sapiente architecto rerum veniam nobis natus dolorum ratione. Aut ducimus et enim provident. Illum deserunt qui natus sunt at numquam.","7":8},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.752511+00:00] doctrine.DEBUG: Executing statement: INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":44,"2":"img/Dinosaures/Sinoceratops.png","3":"Sinoceratops","4":"Herbivore","5":"Silurien","6":"Dolor ut autem nulla magni. Porro aut id maxime aut tenetur dicta. Facere fugiat soluta enim nobis magni voluptates id.","7":1}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}) {"sql":"INSERT INTO dinosaure (id, image_dinosaure, libelle_dinosaure, regime_dinosaure, ere_dinosaure, description_dinosaure, enclos_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":44,"2":"img/Dinosaures/Sinoceratops.png","3":"Sinoceratops","4":"Herbivore","5":"Silurien","6":"Dolor ut autem nulla magni. Porro aut id maxime aut tenetur dicta. Facere fugiat soluta enim nobis magni voluptates id.","7":1},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":1}} []
[2025-06-18T19:06:09.752758+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.753491+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-18T19:06:09.754331+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_jour AS libelle_jour_2 FROM jour t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_jour AS libelle_jour_2 FROM jour t0"} []
[2025-06-18T19:06:09.754790+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.ouverture AS ouverture_2, t0.fermeture AS fermeture_3 FROM horaire t0 {"sql":"SELECT t0.id AS id_1, t0.ouverture AS ouverture_2, t0.fermeture AS fermeture_3 FROM horaire t0"} []
[2025-06-18T19:06:09.755923+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.756185+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":1,"2":2,"3":5}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":1,"2":2,"3":5},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.756960+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":1,"2":2,"3":6}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":1,"2":2,"3":6},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.757339+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":1,"2":4,"3":3}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":1,"2":4,"3":3},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.757669+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":1,"2":4,"3":7}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":1,"2":4,"3":7},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.758049+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":1,"2":1,"3":1}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":1,"2":1,"3":1},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.758432+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":1,"2":7,"3":2}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":1,"2":7,"3":2},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.758739+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":1,"2":5,"3":6}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":1,"2":5,"3":6},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.758967+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":1,"2":5,"3":4}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":1,"2":5,"3":4},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.759300+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":2,"2":1,"3":4}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":2,"2":1,"3":4},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.759526+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":2,"2":5,"3":7}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":2,"2":5,"3":7},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.759726+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":2,"2":5,"3":6}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":2,"2":5,"3":6},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.759980+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":2,"2":7,"3":3}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":2,"2":7,"3":3},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.760222+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":2,"2":4,"3":3}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":2,"2":4,"3":3},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.760506+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":2,"2":2,"3":1}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":2,"2":2,"3":1},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.760764+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":2,"2":2,"3":3}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":2,"2":2,"3":3},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.760975+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":2,"2":6,"3":5}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":2,"2":6,"3":5},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.761254+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":2,"2":6,"3":4}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":2,"2":6,"3":4},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.761954+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":2,"2":3,"3":4}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":2,"2":3,"3":4},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.762216+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":2,"2":3,"3":2}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":2,"2":3,"3":2},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.762521+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":3,"2":7,"3":3}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":3,"2":7,"3":3},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.762802+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":3,"2":5,"3":3}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":3,"2":5,"3":3},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.764001+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":3,"2":3,"3":5}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":3,"2":3,"3":5},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.764482+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":3,"2":3,"3":7}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":3,"2":3,"3":7},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.765542+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":3,"2":6,"3":2}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":3,"2":6,"3":2},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.766509+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":3,"2":6,"3":6}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":3,"2":6,"3":6},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.767126+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":3,"2":4,"3":3}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":3,"2":4,"3":3},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.767569+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":3,"2":2,"3":3}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":3,"2":2,"3":3},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.767940+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":4,"2":3,"3":2}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":4,"2":3,"3":2},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.768267+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":4,"2":2,"3":7}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":4,"2":2,"3":7},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.768515+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":4,"2":2,"3":3}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":4,"2":2,"3":3},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.768717+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":4,"2":4,"3":5}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":4,"2":4,"3":5},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.768948+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":4,"2":7,"3":4}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":4,"2":7,"3":4},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.769172+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":4,"2":6,"3":7}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":4,"2":6,"3":7},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.769429+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":4,"2":1,"3":4}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":4,"2":1,"3":4},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.769811+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":5,"2":5,"3":3}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":5,"2":5,"3":3},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.770287+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":5,"2":6,"3":2}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":5,"2":6,"3":2},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.770617+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":5,"2":6,"3":3}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":5,"2":6,"3":3},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.771039+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":5,"2":2,"3":7}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":5,"2":2,"3":7},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.771524+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":5,"2":3,"3":6}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":5,"2":3,"3":6},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.771934+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":5,"2":3,"3":7}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":5,"2":3,"3":7},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.772286+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":5,"2":1,"3":5}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":5,"2":1,"3":5},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.772566+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":5,"2":1,"3":2}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":5,"2":1,"3":2},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.773294+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":5,"2":4,"3":2}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":5,"2":4,"3":2},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.774567+00:00] doctrine.DEBUG: Executing statement: INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?) (parameters: array{"1":5,"2":4,"3":7}, types: array{"1":1,"2":1,"3":1}) {"sql":"INSERT INTO ouverture_restaurant (restaurant_id, jour_id, horaire_id) VALUES (?, ?, ?)","params":{"1":5,"2":4,"3":7},"types":{"1":1,"2":1,"3":1}} []
[2025-06-18T19:06:09.774871+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.778469+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.debut_billet AS debut_billet_2, t0.fin_billet AS fin_billet_3, t0.nom AS nom_4, t0.prenom AS prenom_5, t0.user_id AS user_id_6, t0.billet_id AS billet_id_7, t0.date_id AS date_id_8 FROM payer_billet t0 {"sql":"SELECT t0.id AS id_1, t0.debut_billet AS debut_billet_2, t0.fin_billet AS fin_billet_3, t0.nom AS nom_4, t0.prenom AS prenom_5, t0.user_id AS user_id_6, t0.billet_id AS billet_id_7, t0.date_id AS date_id_8 FROM payer_billet t0"} []
[2025-06-18T19:06:09.779087+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_3, t0.email AS email_4, t0.password AS password_5, t0.numero_telephone AS numero_telephone_6, t0.nom AS nom_7, t0.prenom AS prenom_8, t0.roles AS roles_9, t0.is_verified AS is_verified_10, t0.reset_token AS reset_token_11, t0.reset_token_expiration AS reset_token_expiration_12, t0.type, t1.adresse_postal AS adresse_postal_13, t1.code_postal AS code_postal_14, t1.otp AS otp_15, t2.admin_level AS admin_level_16 FROM "user" t0 LEFT JOIN client t1 ON t0.id = t1.id LEFT JOIN administrateur t2 ON t0.id = t2.id WHERE t0.id = ? (parameters: array{"1":7}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_3, t0.email AS email_4, t0.password AS password_5, t0.numero_telephone AS numero_telephone_6, t0.nom AS nom_7, t0.prenom AS prenom_8, t0.roles AS roles_9, t0.is_verified AS is_verified_10, t0.reset_token AS reset_token_11, t0.reset_token_expiration AS reset_token_expiration_12, t0.type, t1.adresse_postal AS adresse_postal_13, t1.code_postal AS code_postal_14, t1.otp AS otp_15, t2.admin_level AS admin_level_16 FROM \"user\" t0 LEFT JOIN client t1 ON t0.id = t1.id LEFT JOIN administrateur t2 ON t0.id = t2.id WHERE t0.id = ?","params":{"1":7},"types":{"1":1}} []
[2025-06-18T19:06:09.779957+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_3, t0.email AS email_4, t0.password AS password_5, t0.numero_telephone AS numero_telephone_6, t0.nom AS nom_7, t0.prenom AS prenom_8, t0.roles AS roles_9, t0.is_verified AS is_verified_10, t0.reset_token AS reset_token_11, t0.reset_token_expiration AS reset_token_expiration_12, t0.type, t1.adresse_postal AS adresse_postal_13, t1.code_postal AS code_postal_14, t1.otp AS otp_15, t2.admin_level AS admin_level_16 FROM "user" t0 LEFT JOIN client t1 ON t0.id = t1.id LEFT JOIN administrateur t2 ON t0.id = t2.id WHERE t0.id = ? (parameters: array{"1":8}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_3, t0.email AS email_4, t0.password AS password_5, t0.numero_telephone AS numero_telephone_6, t0.nom AS nom_7, t0.prenom AS prenom_8, t0.roles AS roles_9, t0.is_verified AS is_verified_10, t0.reset_token AS reset_token_11, t0.reset_token_expiration AS reset_token_expiration_12, t0.type, t1.adresse_postal AS adresse_postal_13, t1.code_postal AS code_postal_14, t1.otp AS otp_15, t2.admin_level AS admin_level_16 FROM \"user\" t0 LEFT JOIN client t1 ON t0.id = t1.id LEFT JOIN administrateur t2 ON t0.id = t2.id WHERE t0.id = ?","params":{"1":8},"types":{"1":1}} []
[2025-06-18T19:06:09.780711+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_3, t0.email AS email_4, t0.password AS password_5, t0.numero_telephone AS numero_telephone_6, t0.nom AS nom_7, t0.prenom AS prenom_8, t0.roles AS roles_9, t0.is_verified AS is_verified_10, t0.reset_token AS reset_token_11, t0.reset_token_expiration AS reset_token_expiration_12, t0.type, t1.adresse_postal AS adresse_postal_13, t1.code_postal AS code_postal_14, t1.otp AS otp_15, t2.admin_level AS admin_level_16 FROM "user" t0 LEFT JOIN client t1 ON t0.id = t1.id LEFT JOIN administrateur t2 ON t0.id = t2.id WHERE t0.id = ? (parameters: array{"1":9}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_3, t0.email AS email_4, t0.password AS password_5, t0.numero_telephone AS numero_telephone_6, t0.nom AS nom_7, t0.prenom AS prenom_8, t0.roles AS roles_9, t0.is_verified AS is_verified_10, t0.reset_token AS reset_token_11, t0.reset_token_expiration AS reset_token_expiration_12, t0.type, t1.adresse_postal AS adresse_postal_13, t1.code_postal AS code_postal_14, t1.otp AS otp_15, t2.admin_level AS admin_level_16 FROM \"user\" t0 LEFT JOIN client t1 ON t0.id = t1.id LEFT JOIN administrateur t2 ON t0.id = t2.id WHERE t0.id = ?","params":{"1":9},"types":{"1":1}} []
[2025-06-18T19:06:09.781355+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_3, t0.email AS email_4, t0.password AS password_5, t0.numero_telephone AS numero_telephone_6, t0.nom AS nom_7, t0.prenom AS prenom_8, t0.roles AS roles_9, t0.is_verified AS is_verified_10, t0.reset_token AS reset_token_11, t0.reset_token_expiration AS reset_token_expiration_12, t0.type, t1.adresse_postal AS adresse_postal_13, t1.code_postal AS code_postal_14, t1.otp AS otp_15, t2.admin_level AS admin_level_16 FROM "user" t0 LEFT JOIN client t1 ON t0.id = t1.id LEFT JOIN administrateur t2 ON t0.id = t2.id WHERE t0.id = ? (parameters: array{"1":10}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_3, t0.email AS email_4, t0.password AS password_5, t0.numero_telephone AS numero_telephone_6, t0.nom AS nom_7, t0.prenom AS prenom_8, t0.roles AS roles_9, t0.is_verified AS is_verified_10, t0.reset_token AS reset_token_11, t0.reset_token_expiration AS reset_token_expiration_12, t0.type, t1.adresse_postal AS adresse_postal_13, t1.code_postal AS code_postal_14, t1.otp AS otp_15, t2.admin_level AS admin_level_16 FROM \"user\" t0 LEFT JOIN client t1 ON t0.id = t1.id LEFT JOIN administrateur t2 ON t0.id = t2.id WHERE t0.id = ?","params":{"1":10},"types":{"1":1}} []
[2025-06-18T19:06:09.783467+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.783855+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":1,"2":6}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":1,"2":6},"types":{"1":1,"2":1}} []
[2025-06-18T19:06:09.784442+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":1,"2":29}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":1,"2":29},"types":{"1":1,"2":1}} []
[2025-06-18T19:06:09.784705+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":2,"2":18}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":2,"2":18},"types":{"1":1,"2":1}} []
[2025-06-18T19:06:09.784936+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":2,"2":14}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":2,"2":14},"types":{"1":1,"2":1}} []
[2025-06-18T19:06:09.785163+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":3,"2":29}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":3,"2":29},"types":{"1":1,"2":1}} []
[2025-06-18T19:06:09.785370+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":4,"2":20}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":4,"2":20},"types":{"1":1,"2":1}} []
[2025-06-18T19:06:09.785569+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":4,"2":39}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":4,"2":39},"types":{"1":1,"2":1}} []
[2025-06-18T19:06:09.785734+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":4,"2":34}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":4,"2":34},"types":{"1":1,"2":1}} []
[2025-06-18T19:06:09.785896+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":5,"2":2}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":5,"2":2},"types":{"1":1,"2":1}} []
[2025-06-18T19:06:09.786073+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":6,"2":8}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":6,"2":8},"types":{"1":1,"2":1}} []
[2025-06-18T19:06:09.786256+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":6,"2":2}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":6,"2":2},"types":{"1":1,"2":1}} []
[2025-06-18T19:06:09.786420+00:00] doctrine.DEBUG: Executing statement: INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?) (parameters: array{"1":7,"2":20}, types: array{"1":1,"2":1}) {"sql":"INSERT INTO remboursement_billet (remboursement_id, payer_billet_id) VALUES (?, ?)","params":{"1":7,"2":20},"types":{"1":1,"2":1}} []
[2025-06-18T19:06:09.786592+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.787346+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_format_chambre AS libelle_format_chambre_2, t0.prix_format_chambre AS prix_format_chambre_3, t0.description_format_billet AS description_format_billet_4 FROM format_chambre t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_format_chambre AS libelle_format_chambre_2, t0.prix_format_chambre AS prix_format_chambre_3, t0.description_format_billet AS description_format_billet_4 FROM format_chambre t0"} []
[2025-06-18T19:06:09.788125+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T19:06:09.788590+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.788899+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.789159+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.789344+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.789500+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.789627+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.789781+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.789928+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.790058+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.790183+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.790286+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.790387+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.790554+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.790768+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.791022+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.791455+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.791949+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.792733+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.793042+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.793255+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.793461+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.794154+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.794479+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.794801+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.795011+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.795176+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.795337+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.795519+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.795697+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.795997+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.796271+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.796561+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.796823+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.797078+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.797369+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.798201+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.798456+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.798607+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.798767+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.798868+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.798963+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.799053+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.799157+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.799243+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.799333+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.799418+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.799506+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.799591+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.799673+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.799760+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.799844+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.799934+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.800028+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.800121+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.800207+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.800295+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.800398+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.800482+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.804578+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.804941+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.805051+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.805160+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.805246+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.805331+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.805429+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.805513+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.805601+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.805685+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.805768+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.805855+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.805937+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.806018+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.806113+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.806205+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.806293+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.806386+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.806468+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.806556+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.806640+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.806730+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.806818+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.806903+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.806984+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.807078+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.807172+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.807255+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.807343+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.807429+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.807510+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.807598+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.807679+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.807766+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.807850+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.807930+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.808017+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.808106+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.808192+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.808284+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.808367+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.808447+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.808538+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.808621+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.808712+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.808796+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.808880+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.808967+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.809069+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.809162+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.809250+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.809338+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.809419+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.809506+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.809639+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.809789+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.809899+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.809999+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.810116+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.810218+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.810311+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.810410+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.810503+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.810594+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.810691+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.810783+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.810872+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.810970+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.811073+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.811172+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.811276+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.811373+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.811473+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.811567+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.811658+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.811757+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.811857+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.811958+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.812059+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.812172+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.812272+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.812371+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.812467+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.812586+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.812710+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.812832+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.812958+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.813101+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.813242+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.813868+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.814517+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.814623+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.814715+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.814800+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.814881+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.814972+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.815056+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.815162+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.815244+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.815328+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.815416+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.815499+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.815583+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.815671+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.815755+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.815843+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.815968+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.816081+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.816185+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.816271+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.816355+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.816442+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.816530+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.816614+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.816701+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.816783+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.816865+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.816954+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.817035+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.817146+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.817240+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.817322+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.817408+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.817488+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.817572+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.817686+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.817775+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.817862+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.817949+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.818032+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.818123+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.818214+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.818295+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.818382+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.818470+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.818554+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.818641+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.818722+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.818808+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.818895+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.818980+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.819071+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('chambre_id_seq') {"sql":"SELECT NEXTVAL('chambre_id_seq')"} []
[2025-06-18T19:06:09.820764+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.821338+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":1,"2":"124","3":"Première étage","4":1,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":1,"2":"124","3":"Première étage","4":1,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.821900+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":2,"2":"124","3":"Première étage","4":2,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":2,"2":"124","3":"Première étage","4":2,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.822179+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"124","3":"Première étage","4":1,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":3,"2":"124","3":"Première étage","4":1,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.822502+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"124","3":"Première étage","4":4,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":4,"2":"124","3":"Première étage","4":4,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.822752+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"124","3":"Première étage","4":1,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":5,"2":"124","3":"Première étage","4":1,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.822981+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":6,"2":"124","3":"Première étage","4":3,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":6,"2":"124","3":"Première étage","4":3,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.823212+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":7,"2":"124","3":"Première étage","4":4,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":7,"2":"124","3":"Première étage","4":4,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.823399+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":8,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":8,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.823566+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":9,"2":"124","3":"Première étage","4":2,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":9,"2":"124","3":"Première étage","4":2,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.823744+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":10,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":10,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.823975+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":11,"2":"124","3":"Première étage","4":4,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":11,"2":"124","3":"Première étage","4":4,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.824258+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":12,"2":"124","3":"Première étage","4":4,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":12,"2":"124","3":"Première étage","4":4,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.824495+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":13,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":13,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.824695+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":14,"2":"124","3":"Première étage","4":4,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":14,"2":"124","3":"Première étage","4":4,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.824887+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":15,"2":"124","3":"Première étage","4":3,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":15,"2":"124","3":"Première étage","4":3,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.825088+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":16,"2":"124","3":"Première étage","4":2,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":16,"2":"124","3":"Première étage","4":2,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.825327+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":17,"2":"124","3":"Première étage","4":2,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":17,"2":"124","3":"Première étage","4":2,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.825497+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":18,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":18,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.825679+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":19,"2":"124","3":"Première étage","4":4,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":19,"2":"124","3":"Première étage","4":4,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.825852+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":20,"2":"124","3":"Première étage","4":3,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":20,"2":"124","3":"Première étage","4":3,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.826027+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":21,"2":"124","3":"Première étage","4":3,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":21,"2":"124","3":"Première étage","4":3,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.826229+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":22,"2":"124","3":"Première étage","4":2,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":22,"2":"124","3":"Première étage","4":2,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.826411+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":23,"2":"124","3":"Première étage","4":4,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":23,"2":"124","3":"Première étage","4":4,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.826591+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":24,"2":"124","3":"Première étage","4":3,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":24,"2":"124","3":"Première étage","4":3,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.826764+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":25,"2":"124","3":"Première étage","4":2,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":25,"2":"124","3":"Première étage","4":2,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.826929+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":26,"2":"124","3":"Première étage","4":3,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":26,"2":"124","3":"Première étage","4":3,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.827108+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":27,"2":"124","3":"Première étage","4":2,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":27,"2":"124","3":"Première étage","4":2,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.827300+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":28,"2":"124","3":"Première étage","4":1,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":28,"2":"124","3":"Première étage","4":1,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.827478+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":29,"2":"124","3":"Première étage","4":1,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":29,"2":"124","3":"Première étage","4":1,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.827667+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":30,"2":"124","3":"Première étage","4":4,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":30,"2":"124","3":"Première étage","4":4,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.827855+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":31,"2":"124","3":"Première étage","4":2,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":31,"2":"124","3":"Première étage","4":2,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.828041+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":32,"2":"124","3":"Première étage","4":3,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":32,"2":"124","3":"Première étage","4":3,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.828268+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":33,"2":"124","3":"Première étage","4":1,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":33,"2":"124","3":"Première étage","4":1,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.828457+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":34,"2":"124","3":"Première étage","4":1,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":34,"2":"124","3":"Première étage","4":1,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.828653+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":35,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":35,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.828917+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":36,"2":"124","3":"Première étage","4":1,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":36,"2":"124","3":"Première étage","4":1,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.829217+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":37,"2":"124","3":"Première étage","4":3,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":37,"2":"124","3":"Première étage","4":3,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.829445+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":38,"2":"124","3":"Première étage","4":2,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":38,"2":"124","3":"Première étage","4":2,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.829616+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":39,"2":"124","3":"Première étage","4":4,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":39,"2":"124","3":"Première étage","4":4,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.829772+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":40,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":40,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.829919+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":41,"2":"124","3":"Première étage","4":3,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":41,"2":"124","3":"Première étage","4":3,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.830069+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":42,"2":"124","3":"Première étage","4":2,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":42,"2":"124","3":"Première étage","4":2,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.830263+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":43,"2":"124","3":"Première étage","4":3,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":43,"2":"124","3":"Première étage","4":3,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.830430+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":44,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":44,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.830581+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":45,"2":"124","3":"Première étage","4":4,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":45,"2":"124","3":"Première étage","4":4,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.830737+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":46,"2":"124","3":"Première étage","4":3,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":46,"2":"124","3":"Première étage","4":3,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.830881+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":47,"2":"124","3":"Première étage","4":3,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":47,"2":"124","3":"Première étage","4":3,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.831031+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":48,"2":"124","3":"Première étage","4":3,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":48,"2":"124","3":"Première étage","4":3,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.831183+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":49,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":49,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.831334+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":50,"2":"124","3":"Première étage","4":3,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":50,"2":"124","3":"Première étage","4":3,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.831512+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":51,"2":"124","3":"Première étage","4":4,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":51,"2":"124","3":"Première étage","4":4,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.831668+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":52,"2":"124","3":"Première étage","4":4,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":52,"2":"124","3":"Première étage","4":4,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.831837+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":53,"2":"124","3":"Première étage","4":1,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":53,"2":"124","3":"Première étage","4":1,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.832005+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":54,"2":"124","3":"Première étage","4":1,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":54,"2":"124","3":"Première étage","4":1,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.832162+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":55,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":55,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.832312+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":56,"2":"124","3":"Première étage","4":2,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":56,"2":"124","3":"Première étage","4":2,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.832461+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":57,"2":"124","3":"Première étage","4":4,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":57,"2":"124","3":"Première étage","4":4,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.832603+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":58,"2":"124","3":"Première étage","4":3,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":58,"2":"124","3":"Première étage","4":3,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.832746+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":59,"2":"124","3":"Première étage","4":1,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":59,"2":"124","3":"Première étage","4":1,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.832901+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":60,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":60,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.833088+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":61,"2":"124","3":"Première étage","4":2,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":61,"2":"124","3":"Première étage","4":2,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.833429+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":62,"2":"124","3":"Première étage","4":1,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":62,"2":"124","3":"Première étage","4":1,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.833585+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":63,"2":"124","3":"Première étage","4":1,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":63,"2":"124","3":"Première étage","4":1,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.833734+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":64,"2":"124","3":"Première étage","4":3,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":64,"2":"124","3":"Première étage","4":3,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.833876+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":65,"2":"124","3":"Première étage","4":3,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":65,"2":"124","3":"Première étage","4":3,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.834171+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":66,"2":"124","3":"Première étage","4":3,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":66,"2":"124","3":"Première étage","4":3,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.834400+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":67,"2":"124","3":"Première étage","4":3,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":67,"2":"124","3":"Première étage","4":3,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.834612+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":68,"2":"124","3":"Première étage","4":1,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":68,"2":"124","3":"Première étage","4":1,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.834925+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":69,"2":"124","3":"Première étage","4":4,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":69,"2":"124","3":"Première étage","4":4,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.835254+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":70,"2":"124","3":"Première étage","4":4,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":70,"2":"124","3":"Première étage","4":4,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.835507+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":71,"2":"124","3":"Première étage","4":3,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":71,"2":"124","3":"Première étage","4":3,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.835746+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":72,"2":"124","3":"Première étage","4":4,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":72,"2":"124","3":"Première étage","4":4,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.835978+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":73,"2":"124","3":"Première étage","4":2,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":73,"2":"124","3":"Première étage","4":2,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.836218+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":74,"2":"124","3":"Première étage","4":2,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":74,"2":"124","3":"Première étage","4":2,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.836425+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":75,"2":"124","3":"Première étage","4":2,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":75,"2":"124","3":"Première étage","4":2,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.836608+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":76,"2":"124","3":"Première étage","4":4,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":76,"2":"124","3":"Première étage","4":4,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.836802+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":77,"2":"124","3":"Première étage","4":1,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":77,"2":"124","3":"Première étage","4":1,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.836968+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":78,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":78,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.837148+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":79,"2":"124","3":"Première étage","4":3,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":79,"2":"124","3":"Première étage","4":3,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.837326+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":80,"2":"124","3":"Première étage","4":1,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":80,"2":"124","3":"Première étage","4":1,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.837486+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":81,"2":"124","3":"Première étage","4":2,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":81,"2":"124","3":"Première étage","4":2,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.837643+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":82,"2":"124","3":"Première étage","4":2,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":82,"2":"124","3":"Première étage","4":2,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.837818+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":83,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":83,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.837982+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":84,"2":"124","3":"Première étage","4":1,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":84,"2":"124","3":"Première étage","4":1,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.838154+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":85,"2":"124","3":"Première étage","4":3,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":85,"2":"124","3":"Première étage","4":3,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.838326+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":86,"2":"124","3":"Première étage","4":4,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":86,"2":"124","3":"Première étage","4":4,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.838485+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":87,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":87,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.838648+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":88,"2":"124","3":"Première étage","4":3,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":88,"2":"124","3":"Première étage","4":3,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.838818+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":89,"2":"124","3":"Première étage","4":1,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":89,"2":"124","3":"Première étage","4":1,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.838978+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":90,"2":"124","3":"Première étage","4":1,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":90,"2":"124","3":"Première étage","4":1,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.839154+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":91,"2":"124","3":"Première étage","4":1,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":91,"2":"124","3":"Première étage","4":1,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.839326+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":92,"2":"124","3":"Première étage","4":3,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":92,"2":"124","3":"Première étage","4":3,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.839489+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":93,"2":"124","3":"Première étage","4":3,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":93,"2":"124","3":"Première étage","4":3,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.839646+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":94,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":94,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.839821+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":95,"2":"124","3":"Première étage","4":2,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":95,"2":"124","3":"Première étage","4":2,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.839982+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":96,"2":"124","3":"Première étage","4":3,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":96,"2":"124","3":"Première étage","4":3,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.840161+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":97,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":97,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.840341+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":98,"2":"124","3":"Première étage","4":3,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":98,"2":"124","3":"Première étage","4":3,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.840504+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":99,"2":"124","3":"Première étage","4":3,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":99,"2":"124","3":"Première étage","4":3,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.840670+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":100,"2":"124","3":"Première étage","4":3,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":100,"2":"124","3":"Première étage","4":3,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.840839+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":101,"2":"124","3":"Première étage","4":1,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":101,"2":"124","3":"Première étage","4":1,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.841001+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":102,"2":"124","3":"Première étage","4":1,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":102,"2":"124","3":"Première étage","4":1,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.841175+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":103,"2":"124","3":"Première étage","4":4,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":103,"2":"124","3":"Première étage","4":4,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.841350+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":104,"2":"124","3":"Première étage","4":3,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":104,"2":"124","3":"Première étage","4":3,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.841513+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":105,"2":"124","3":"Première étage","4":2,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":105,"2":"124","3":"Première étage","4":2,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.841675+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":106,"2":"124","3":"Première étage","4":2,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":106,"2":"124","3":"Première étage","4":2,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.841850+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":107,"2":"124","3":"Première étage","4":1,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":107,"2":"124","3":"Première étage","4":1,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.842020+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":108,"2":"124","3":"Première étage","4":3,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":108,"2":"124","3":"Première étage","4":3,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.842201+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":109,"2":"124","3":"Première étage","4":4,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":109,"2":"124","3":"Première étage","4":4,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.842366+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":110,"2":"124","3":"Première étage","4":2,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":110,"2":"124","3":"Première étage","4":2,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.842529+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":111,"2":"124","3":"Première étage","4":4,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":111,"2":"124","3":"Première étage","4":4,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.842698+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":112,"2":"124","3":"Première étage","4":4,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":112,"2":"124","3":"Première étage","4":4,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.842859+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":113,"2":"124","3":"Première étage","4":2,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":113,"2":"124","3":"Première étage","4":2,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.843022+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":114,"2":"124","3":"Première étage","4":2,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":114,"2":"124","3":"Première étage","4":2,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.843191+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":115,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":115,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.843359+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":116,"2":"124","3":"Première étage","4":1,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":116,"2":"124","3":"Première étage","4":1,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.843522+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":117,"2":"124","3":"Première étage","4":4,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":117,"2":"124","3":"Première étage","4":4,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.843686+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":118,"2":"124","3":"Première étage","4":4,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":118,"2":"124","3":"Première étage","4":4,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.843846+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":119,"2":"124","3":"Première étage","4":3,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":119,"2":"124","3":"Première étage","4":3,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.844011+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":120,"2":"124","3":"Première étage","4":1,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":120,"2":"124","3":"Première étage","4":1,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.844193+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":121,"2":"124","3":"Première étage","4":4,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":121,"2":"124","3":"Première étage","4":4,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.844510+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":122,"2":"124","3":"Première étage","4":4,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":122,"2":"124","3":"Première étage","4":4,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.844705+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":123,"2":"124","3":"Première étage","4":3,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":123,"2":"124","3":"Première étage","4":3,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.844887+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":124,"2":"124","3":"Première étage","4":1,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":124,"2":"124","3":"Première étage","4":1,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.845047+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":125,"2":"124","3":"Première étage","4":1,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":125,"2":"124","3":"Première étage","4":1,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.845220+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":126,"2":"124","3":"Première étage","4":1,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":126,"2":"124","3":"Première étage","4":1,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.845396+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":127,"2":"124","3":"Première étage","4":1,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":127,"2":"124","3":"Première étage","4":1,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.845562+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":128,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":128,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.845727+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":129,"2":"124","3":"Première étage","4":3,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":129,"2":"124","3":"Première étage","4":3,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.845907+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":130,"2":"124","3":"Première étage","4":3,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":130,"2":"124","3":"Première étage","4":3,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.846074+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":131,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":131,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.846240+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":132,"2":"124","3":"Première étage","4":3,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":132,"2":"124","3":"Première étage","4":3,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.846402+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":133,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":133,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.846560+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":134,"2":"124","3":"Première étage","4":1,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":134,"2":"124","3":"Première étage","4":1,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.846717+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":135,"2":"124","3":"Première étage","4":1,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":135,"2":"124","3":"Première étage","4":1,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.846880+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":136,"2":"124","3":"Première étage","4":1,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":136,"2":"124","3":"Première étage","4":1,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.847043+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":137,"2":"124","3":"Première étage","4":3,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":137,"2":"124","3":"Première étage","4":3,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.847253+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":138,"2":"124","3":"Première étage","4":2,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":138,"2":"124","3":"Première étage","4":2,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.847433+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":139,"2":"124","3":"Première étage","4":3,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":139,"2":"124","3":"Première étage","4":3,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.847602+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":140,"2":"124","3":"Première étage","4":3,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":140,"2":"124","3":"Première étage","4":3,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.847778+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":141,"2":"124","3":"Première étage","4":3,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":141,"2":"124","3":"Première étage","4":3,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.847938+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":142,"2":"124","3":"Première étage","4":1,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":142,"2":"124","3":"Première étage","4":1,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.848102+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":143,"2":"124","3":"Première étage","4":3,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":143,"2":"124","3":"Première étage","4":3,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.848300+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":144,"2":"124","3":"Première étage","4":2,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":144,"2":"124","3":"Première étage","4":2,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.848470+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":145,"2":"124","3":"Première étage","4":3,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":145,"2":"124","3":"Première étage","4":3,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.848634+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":146,"2":"124","3":"Première étage","4":1,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":146,"2":"124","3":"Première étage","4":1,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.848807+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":147,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":147,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.848967+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":148,"2":"124","3":"Première étage","4":4,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":148,"2":"124","3":"Première étage","4":4,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.849133+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":149,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":149,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.849305+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":150,"2":"124","3":"Première étage","4":2,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":150,"2":"124","3":"Première étage","4":2,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.849468+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":151,"2":"124","3":"Première étage","4":4,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":151,"2":"124","3":"Première étage","4":4,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.849626+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":152,"2":"124","3":"Première étage","4":1,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":152,"2":"124","3":"Première étage","4":1,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.849795+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":153,"2":"124","3":"Première étage","4":1,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":153,"2":"124","3":"Première étage","4":1,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.849960+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":154,"2":"124","3":"Première étage","4":2,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":154,"2":"124","3":"Première étage","4":2,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.850145+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":155,"2":"124","3":"Première étage","4":1,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":155,"2":"124","3":"Première étage","4":1,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.850323+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":156,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":156,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.850485+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":157,"2":"124","3":"Première étage","4":3,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":157,"2":"124","3":"Première étage","4":3,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.850645+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":158,"2":"124","3":"Première étage","4":3,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":158,"2":"124","3":"Première étage","4":3,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.850814+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":159,"2":"124","3":"Première étage","4":2,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":159,"2":"124","3":"Première étage","4":2,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.850971+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":160,"2":"124","3":"Première étage","4":4,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":160,"2":"124","3":"Première étage","4":4,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.851136+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":161,"2":"124","3":"Première étage","4":1,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":161,"2":"124","3":"Première étage","4":1,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.851318+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":162,"2":"124","3":"Première étage","4":1,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":162,"2":"124","3":"Première étage","4":1,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.851482+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":163,"2":"124","3":"Première étage","4":1,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":163,"2":"124","3":"Première étage","4":1,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.851639+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":164,"2":"124","3":"Première étage","4":1,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":164,"2":"124","3":"Première étage","4":1,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.851808+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":165,"2":"124","3":"Première étage","4":4,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":165,"2":"124","3":"Première étage","4":4,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.851967+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":166,"2":"124","3":"Première étage","4":2,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":166,"2":"124","3":"Première étage","4":2,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.852131+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":167,"2":"124","3":"Première étage","4":2,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":167,"2":"124","3":"Première étage","4":2,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.852301+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":168,"2":"124","3":"Première étage","4":1,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":168,"2":"124","3":"Première étage","4":1,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.852459+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":169,"2":"124","3":"Première étage","4":3,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":169,"2":"124","3":"Première étage","4":3,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.852623+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":170,"2":"124","3":"Première étage","4":4,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":170,"2":"124","3":"Première étage","4":4,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.852794+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":171,"2":"124","3":"Première étage","4":2,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":171,"2":"124","3":"Première étage","4":2,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.852954+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":172,"2":"124","3":"Première étage","4":4,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":172,"2":"124","3":"Première étage","4":4,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.853135+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":173,"2":"124","3":"Première étage","4":3,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":173,"2":"124","3":"Première étage","4":3,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.853301+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":174,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":174,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.853458+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":175,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":175,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.853627+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":176,"2":"124","3":"Première étage","4":4,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":176,"2":"124","3":"Première étage","4":4,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.853790+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":177,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":177,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.853947+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":178,"2":"124","3":"Première étage","4":2,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":178,"2":"124","3":"Première étage","4":2,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.854126+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":179,"2":"124","3":"Première étage","4":3,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":179,"2":"124","3":"Première étage","4":3,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.854290+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":180,"2":"124","3":"Première étage","4":1,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":180,"2":"124","3":"Première étage","4":1,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.854446+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":181,"2":"124","3":"Première étage","4":3,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":181,"2":"124","3":"Première étage","4":3,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.854613+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":182,"2":"124","3":"Première étage","4":4,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":182,"2":"124","3":"Première étage","4":4,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.854771+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":183,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":183,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.854932+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":184,"2":"124","3":"Première étage","4":1,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":184,"2":"124","3":"Première étage","4":1,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.855103+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":185,"2":"124","3":"Première étage","4":3,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":185,"2":"124","3":"Première étage","4":3,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.855273+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":186,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":186,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.855455+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":187,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":187,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.855630+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":188,"2":"124","3":"Première étage","4":3,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":188,"2":"124","3":"Première étage","4":3,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.859243+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":189,"2":"124","3":"Première étage","4":3,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":189,"2":"124","3":"Première étage","4":3,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.859533+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":190,"2":"124","3":"Première étage","4":2,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":190,"2":"124","3":"Première étage","4":2,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.859763+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":191,"2":"124","3":"Première étage","4":4,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":191,"2":"124","3":"Première étage","4":4,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.859971+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":192,"2":"124","3":"Première étage","4":2,"5":4}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":192,"2":"124","3":"Première étage","4":2,"5":4},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.860202+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":193,"2":"124","3":"Première étage","4":2,"5":3}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":193,"2":"124","3":"Première étage","4":2,"5":3},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.860429+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":194,"2":"124","3":"Première étage","4":1,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":194,"2":"124","3":"Première étage","4":1,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.860596+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":195,"2":"124","3":"Première étage","4":4,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":195,"2":"124","3":"Première étage","4":4,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.860753+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":196,"2":"124","3":"Première étage","4":3,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":196,"2":"124","3":"Première étage","4":3,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.860905+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":197,"2":"124","3":"Première étage","4":3,"5":5}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":197,"2":"124","3":"Première étage","4":3,"5":5},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.861058+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":198,"2":"124","3":"Première étage","4":1,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":198,"2":"124","3":"Première étage","4":1,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.861225+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":199,"2":"124","3":"Première étage","4":1,"5":1}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":199,"2":"124","3":"Première étage","4":1,"5":1},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.861393+00:00] doctrine.DEBUG: Executing statement: INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":200,"2":"124","3":"Première étage","4":1,"5":2}, types: array{"1":1,"2":2,"3":2,"4":1,"5":1}) {"sql":"INSERT INTO chambre (id, numero_chambre, etage_chambre, hotel_id, format_chambre_id) VALUES (?, ?, ?, ?, ?)","params":{"1":200,"2":"124","3":"Première étage","4":1,"5":2},"types":{"1":1,"2":2,"3":2,"4":1,"5":1}} []
[2025-06-18T19:06:09.861689+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.862076+00:00] doctrine.DEBUG: Executing query: SELECT t1.id AS id_2, t1.email AS email_3, t1.password AS password_4, t1.numero_telephone AS numero_telephone_5, t1.nom AS nom_6, t1.prenom AS prenom_7, t1.roles AS roles_8, t1.is_verified AS is_verified_9, t1.reset_token AS reset_token_10, t1.reset_token_expiration AS reset_token_expiration_11, t0.adresse_postal AS adresse_postal_12, t0.code_postal AS code_postal_13, t0.otp AS otp_14, t1.type FROM client t0 INNER JOIN "user" t1 ON t0.id = t1.id {"sql":"SELECT t1.id AS id_2, t1.email AS email_3, t1.password AS password_4, t1.numero_telephone AS numero_telephone_5, t1.nom AS nom_6, t1.prenom AS prenom_7, t1.roles AS roles_8, t1.is_verified AS is_verified_9, t1.reset_token AS reset_token_10, t1.reset_token_expiration AS reset_token_expiration_11, t0.adresse_postal AS adresse_postal_12, t0.code_postal AS code_postal_13, t0.otp AS otp_14, t1.type FROM client t0 INNER JOIN \"user\" t1 ON t0.id = t1.id"} []
[2025-06-18T19:06:09.863579+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.numero_chambre AS numero_chambre_2, t0.etage_chambre AS etage_chambre_3, t0.hotel_id AS hotel_id_4, t0.format_chambre_id AS format_chambre_id_5 FROM chambre t0 {"sql":"SELECT t0.id AS id_1, t0.numero_chambre AS numero_chambre_2, t0.etage_chambre AS etage_chambre_3, t0.hotel_id AS hotel_id_4, t0.format_chambre_id AS format_chambre_id_5 FROM chambre t0"} []
[2025-06-18T19:06:09.868250+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.date AS date_2 FROM date t0 {"sql":"SELECT t0.id AS id_1, t0.date AS date_2 FROM date t0"} []
[2025-06-18T19:06:09.869846+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.870298+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.870941+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.871717+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.871884+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.872014+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.872160+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.872285+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.872395+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.872512+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.872623+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.872731+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.872846+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.872954+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.873070+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.873199+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.873311+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.873422+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.873550+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.873659+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.873772+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.873884+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.873994+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.874156+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.874333+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.874450+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.874559+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.874664+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.874764+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.874868+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.874968+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.875083+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.875192+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.875290+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.875402+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.875501+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.875599+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.875701+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.875798+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.875893+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('louer_hotel_id_seq') {"sql":"SELECT NEXTVAL('louer_hotel_id_seq')"} []
[2025-06-18T19:06:09.877523+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.877793+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":1,"2":4,"3":"2025-05-24 22:46:58","4":"2025-05-26 22:46:58","5":7,"6":106,"7":65}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":1,"2":4,"3":"2025-05-24 22:46:58","4":"2025-05-26 22:46:58","5":7,"6":106,"7":65},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.878498+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":2,"2":5,"3":"2025-07-01 15:07:17","4":"2025-07-02 15:07:17","5":7,"6":108,"7":27}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":2,"2":5,"3":"2025-07-01 15:07:17","4":"2025-07-02 15:07:17","5":7,"6":108,"7":27},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.878836+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":3,"3":"2025-04-20 23:23:58","4":"2025-04-23 23:23:58","5":7,"6":124,"7":58}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":3,"2":3,"3":"2025-04-20 23:23:58","4":"2025-04-23 23:23:58","5":7,"6":124,"7":58},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.879065+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":3,"3":"2025-06-04 09:20:03","4":"2025-06-09 09:20:03","5":7,"6":38,"7":24}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":4,"2":3,"3":"2025-06-04 09:20:03","4":"2025-06-09 09:20:03","5":7,"6":38,"7":24},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.879391+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":3,"3":"2025-06-02 12:47:24","4":"2025-06-04 12:47:24","5":7,"6":164,"7":23}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":5,"2":3,"3":"2025-06-02 12:47:24","4":"2025-06-04 12:47:24","5":7,"6":164,"7":23},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.879688+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":6,"2":3,"3":"2025-05-05 04:37:26","4":"2025-05-06 04:37:26","5":7,"6":33,"7":43}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":6,"2":3,"3":"2025-05-05 04:37:26","4":"2025-05-06 04:37:26","5":7,"6":33,"7":43},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.879907+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":7,"2":3,"3":"2025-07-16 15:45:40","4":"2025-07-17 15:45:40","5":7,"6":151,"7":29}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":7,"2":3,"3":"2025-07-16 15:45:40","4":"2025-07-17 15:45:40","5":7,"6":151,"7":29},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.880096+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":8,"2":3,"3":"2025-04-23 00:01:36","4":"2025-04-26 00:01:36","5":7,"6":40,"7":14}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":8,"2":3,"3":"2025-04-23 00:01:36","4":"2025-04-26 00:01:36","5":7,"6":40,"7":14},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.880358+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":9,"2":3,"3":"2025-07-22 21:54:00","4":"2025-07-25 21:54:00","5":7,"6":105,"7":64}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":9,"2":3,"3":"2025-07-22 21:54:00","4":"2025-07-25 21:54:00","5":7,"6":105,"7":64},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.880541+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":10,"2":3,"3":"2025-05-17 04:06:58","4":"2025-05-18 04:06:58","5":7,"6":84,"7":78}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":10,"2":3,"3":"2025-05-17 04:06:58","4":"2025-05-18 04:06:58","5":7,"6":84,"7":78},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.880705+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":11,"2":1,"3":"2025-08-12 04:01:59","4":"2025-08-17 04:01:59","5":8,"6":184,"7":74}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":11,"2":1,"3":"2025-08-12 04:01:59","4":"2025-08-17 04:01:59","5":8,"6":184,"7":74},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.880865+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":12,"2":2,"3":"2025-04-25 08:48:10","4":"2025-04-28 08:48:10","5":8,"6":155,"7":53}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":12,"2":2,"3":"2025-04-25 08:48:10","4":"2025-04-28 08:48:10","5":8,"6":155,"7":53},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.881030+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":13,"2":3,"3":"2025-07-30 18:48:56","4":"2025-08-01 18:48:56","5":8,"6":27,"7":41}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":13,"2":3,"3":"2025-07-30 18:48:56","4":"2025-08-01 18:48:56","5":8,"6":27,"7":41},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.881401+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":14,"2":5,"3":"2025-07-02 08:04:27","4":"2025-07-06 08:04:27","5":8,"6":62,"7":51}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":14,"2":5,"3":"2025-07-02 08:04:27","4":"2025-07-06 08:04:27","5":8,"6":62,"7":51},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.881609+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":15,"2":3,"3":"2025-05-11 11:19:31","4":"2025-05-13 11:19:31","5":8,"6":189,"7":20}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":15,"2":3,"3":"2025-05-11 11:19:31","4":"2025-05-13 11:19:31","5":8,"6":189,"7":20},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.881788+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":16,"2":3,"3":"2025-07-26 07:30:11","4":"2025-07-28 07:30:11","5":8,"6":111,"7":56}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":16,"2":3,"3":"2025-07-26 07:30:11","4":"2025-07-28 07:30:11","5":8,"6":111,"7":56},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.881949+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":17,"2":3,"3":"2025-06-27 05:59:30","4":"2025-07-02 05:59:30","5":8,"6":67,"7":4}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":17,"2":3,"3":"2025-06-27 05:59:30","4":"2025-07-02 05:59:30","5":8,"6":67,"7":4},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.882117+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":18,"2":2,"3":"2025-07-02 02:00:52","4":"2025-07-04 02:00:52","5":8,"6":51,"7":54}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":18,"2":2,"3":"2025-07-02 02:00:52","4":"2025-07-04 02:00:52","5":8,"6":51,"7":54},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.882347+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":19,"2":3,"3":"2025-08-12 11:18:58","4":"2025-08-14 11:18:58","5":8,"6":118,"7":52}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":19,"2":3,"3":"2025-08-12 11:18:58","4":"2025-08-14 11:18:58","5":8,"6":118,"7":52},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.882539+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":20,"2":3,"3":"2025-06-30 22:25:33","4":"2025-07-02 22:25:33","5":8,"6":187,"7":19}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":20,"2":3,"3":"2025-06-30 22:25:33","4":"2025-07-02 22:25:33","5":8,"6":187,"7":19},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.882714+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":21,"2":2,"3":"2025-07-30 16:04:17","4":"2025-08-04 16:04:17","5":9,"6":26,"7":34}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":21,"2":2,"3":"2025-07-30 16:04:17","4":"2025-08-04 16:04:17","5":9,"6":26,"7":34},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.882921+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":22,"2":4,"3":"2025-08-15 03:17:20","4":"2025-08-16 03:17:20","5":9,"6":8,"7":38}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":22,"2":4,"3":"2025-08-15 03:17:20","4":"2025-08-16 03:17:20","5":9,"6":8,"7":38},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.883099+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":23,"2":4,"3":"2025-07-08 06:44:29","4":"2025-07-10 06:44:29","5":9,"6":108,"7":39}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":23,"2":4,"3":"2025-07-08 06:44:29","4":"2025-07-10 06:44:29","5":9,"6":108,"7":39},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.883269+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":24,"2":5,"3":"2025-05-10 16:09:22","4":"2025-05-15 16:09:22","5":9,"6":108,"7":75}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":24,"2":5,"3":"2025-05-10 16:09:22","4":"2025-05-15 16:09:22","5":9,"6":108,"7":75},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.883433+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":25,"2":1,"3":"2025-08-13 16:41:51","4":"2025-08-14 16:41:51","5":9,"6":129,"7":39}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":25,"2":1,"3":"2025-08-13 16:41:51","4":"2025-08-14 16:41:51","5":9,"6":129,"7":39},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.883592+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":26,"2":3,"3":"2025-05-04 07:08:25","4":"2025-05-08 07:08:25","5":9,"6":21,"7":8}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":26,"2":3,"3":"2025-05-04 07:08:25","4":"2025-05-08 07:08:25","5":9,"6":21,"7":8},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.883750+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":27,"2":3,"3":"2025-04-26 04:41:19","4":"2025-04-29 04:41:19","5":9,"6":10,"7":16}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":27,"2":3,"3":"2025-04-26 04:41:19","4":"2025-04-29 04:41:19","5":9,"6":10,"7":16},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.883918+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":28,"2":1,"3":"2025-06-17 06:00:19","4":"2025-06-21 06:00:19","5":9,"6":84,"7":48}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":28,"2":1,"3":"2025-06-17 06:00:19","4":"2025-06-21 06:00:19","5":9,"6":84,"7":48},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.884081+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":29,"2":3,"3":"2025-07-21 13:32:00","4":"2025-07-22 13:32:00","5":9,"6":33,"7":10}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":29,"2":3,"3":"2025-07-21 13:32:00","4":"2025-07-22 13:32:00","5":9,"6":33,"7":10},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.884243+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":30,"2":3,"3":"2025-06-30 12:40:24","4":"2025-07-01 12:40:24","5":9,"6":30,"7":32}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":30,"2":3,"3":"2025-06-30 12:40:24","4":"2025-07-01 12:40:24","5":9,"6":30,"7":32},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.884406+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":31,"2":1,"3":"2025-06-17 16:53:52","4":"2025-06-19 16:53:52","5":10,"6":116,"7":36}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":31,"2":1,"3":"2025-06-17 16:53:52","4":"2025-06-19 16:53:52","5":10,"6":116,"7":36},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.884561+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":32,"2":3,"3":"2025-04-24 00:17:40","4":"2025-04-29 00:17:40","5":10,"6":170,"7":73}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":32,"2":3,"3":"2025-04-24 00:17:40","4":"2025-04-29 00:17:40","5":10,"6":170,"7":73},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.884715+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":33,"2":3,"3":"2025-05-04 22:34:48","4":"2025-05-06 22:34:48","5":10,"6":139,"7":80}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":33,"2":3,"3":"2025-05-04 22:34:48","4":"2025-05-06 22:34:48","5":10,"6":139,"7":80},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.884881+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":34,"2":3,"3":"2025-07-02 18:14:28","4":"2025-07-07 18:14:28","5":10,"6":79,"7":8}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":34,"2":3,"3":"2025-07-02 18:14:28","4":"2025-07-07 18:14:28","5":10,"6":79,"7":8},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.885038+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":35,"2":2,"3":"2025-07-30 00:55:46","4":"2025-08-01 00:55:46","5":10,"6":180,"7":18}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":35,"2":2,"3":"2025-07-30 00:55:46","4":"2025-08-01 00:55:46","5":10,"6":180,"7":18},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.885202+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":36,"2":3,"3":"2025-05-24 15:07:34","4":"2025-05-28 15:07:34","5":10,"6":71,"7":50}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":36,"2":3,"3":"2025-05-24 15:07:34","4":"2025-05-28 15:07:34","5":10,"6":71,"7":50},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.885370+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":37,"2":3,"3":"2025-07-06 13:41:08","4":"2025-07-08 13:41:08","5":10,"6":140,"7":58}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":37,"2":3,"3":"2025-07-06 13:41:08","4":"2025-07-08 13:41:08","5":10,"6":140,"7":58},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.885533+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":38,"2":4,"3":"2025-05-02 11:54:21","4":"2025-05-07 11:54:21","5":10,"6":91,"7":65}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":38,"2":4,"3":"2025-05-02 11:54:21","4":"2025-05-07 11:54:21","5":10,"6":91,"7":65},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.885689+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":39,"2":3,"3":"2025-06-20 17:45:14","4":"2025-06-22 17:45:14","5":10,"6":85,"7":2}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":39,"2":3,"3":"2025-06-20 17:45:14","4":"2025-06-22 17:45:14","5":10,"6":85,"7":2},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.885856+00:00] doctrine.DEBUG: Executing statement: INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":40,"2":5,"3":"2025-05-05 10:04:57","4":"2025-05-08 10:04:57","5":10,"6":68,"7":9}, types: array{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}) {"sql":"INSERT INTO louer_hotel (id, note, debut_location, fin_location, user_id, chambre_id, date_id) VALUES (?, ?, ?, ?, ?, ?, ?)","params":{"1":40,"2":5,"3":"2025-05-05 10:04:57","4":"2025-05-08 10:04:57","5":10,"6":68,"7":9},"types":{"1":1,"2":1,"3":2,"4":2,"5":1,"6":1,"7":1}} []
[2025-06-18T19:06:09.886027+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-06-18T19:06:09.886214+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-06-18T19:06:09.887988+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T19:29:36.925951+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T19:29:36.937739+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T19:29:36.937822+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T19:29:36.937848+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T19:29:36.937864+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T19:29:36.937879+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T19:29:36.937894+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T19:29:36.937913+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T19:29:36.968199+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T19:29:36.977408+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T19:29:36.993530+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T19:29:37.004746+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-18T19:29:37.007309+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T19:29:37.007918+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T19:29:37.022570+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":4},"types":{"1":1}} []
[2025-06-18T19:29:37.025496+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":2},"types":{"1":1}} []
[2025-06-18T19:29:37.026179+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":3},"types":{"1":1}} []
[2025-06-18T19:29:37.026702+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":1},"types":{"1":1}} []
[2025-06-18T19:29:37.028427+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":2},"types":{"1":1}} []
[2025-06-18T19:29:37.030415+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":4},"types":{"1":1}} []
[2025-06-18T19:29:37.031091+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":5}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":5},"types":{"1":1}} []
[2025-06-18T19:29:37.031709+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":3},"types":{"1":1}} []
[2025-06-18T19:29:37.040572+00:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Asset manifest file "/var/www/html/public/build/manifest.json" does not exist. Did you forget to build the assets with npm or yarn?")." at base.html.twig line 7 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Asset manifest file \"/var/www/html/public/build/manifest.json\" does not exist. Did you forget to build the assets with npm or yarn?\"). at /var/www/html/templates/base.html.twig:7)\n[previous exception] [object] (Symfony\\Component\\Asset\\Exception\\RuntimeException(code: 0): Asset manifest file \"/var/www/html/public/build/manifest.json\" does not exist. Did you forget to build the assets with npm or yarn? at /var/www/html/vendor/symfony/asset/VersionStrategy/JsonManifestVersionStrategy.php:84)"} []
[2025-06-18T19:29:37.162373+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T19:43:49.994281+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T19:43:50.007083+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T19:43:50.007157+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T19:43:50.007182+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T19:43:50.007198+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T19:43:50.007214+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T19:43:50.007227+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T19:43:50.007250+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T19:43:50.045036+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T19:43:50.055480+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T19:43:50.070414+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T19:43:50.083053+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-18T19:43:50.085418+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T19:43:50.086267+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T19:43:50.096738+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":3},"types":{"1":1}} []
[2025-06-18T19:43:50.099979+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":2},"types":{"1":1}} []
[2025-06-18T19:43:50.100526+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":4},"types":{"1":1}} []
[2025-06-18T19:43:50.100890+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":1},"types":{"1":1}} []
[2025-06-18T19:43:50.102183+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":3},"types":{"1":1}} []
[2025-06-18T19:43:50.103651+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":2},"types":{"1":1}} []
[2025-06-18T19:43:50.104647+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":4},"types":{"1":1}} []
[2025-06-18T19:43:50.105149+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":1},"types":{"1":1}} []
[2025-06-18T19:43:50.117694+00:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Asset manifest file "/var/www/html/public/build/manifest.json" does not exist. Did you forget to build the assets with npm or yarn?")." at base.html.twig line 7 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Asset manifest file \"/var/www/html/public/build/manifest.json\" does not exist. Did you forget to build the assets with npm or yarn?\"). at /var/www/html/templates/base.html.twig:7)\n[previous exception] [object] (Symfony\\Component\\Asset\\Exception\\RuntimeException(code: 0): Asset manifest file \"/var/www/html/public/build/manifest.json\" does not exist. Did you forget to build the assets with npm or yarn? at /var/www/html/vendor/symfony/asset/VersionStrategy/JsonManifestVersionStrategy.php:84)"} []
[2025-06-18T19:43:50.249542+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T19:45:35.639285+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T19:45:35.653111+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T19:45:35.653205+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T19:45:35.653239+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T19:45:35.653267+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T19:45:35.653291+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T19:45:35.653310+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T19:45:35.653341+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T19:45:35.690347+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T19:45:35.701527+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T19:45:35.717541+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T19:45:35.730101+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-18T19:45:35.733289+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T19:45:35.734055+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T19:45:35.748268+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":3},"types":{"1":1}} []
[2025-06-18T19:45:35.755370+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":1},"types":{"1":1}} []
[2025-06-18T19:45:35.756436+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":2},"types":{"1":1}} []
[2025-06-18T19:45:35.757077+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":4},"types":{"1":1}} []
[2025-06-18T19:45:35.759283+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":1},"types":{"1":1}} []
[2025-06-18T19:45:35.762868+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":3},"types":{"1":1}} []
[2025-06-18T19:45:35.763728+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":5}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":5},"types":{"1":1}} []
[2025-06-18T19:45:35.764405+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":4},"types":{"1":1}} []
[2025-06-18T19:45:35.781864+00:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Asset manifest file "/var/www/html/public/build/manifest.json" does not exist. Did you forget to build the assets with npm or yarn?")." at base.html.twig line 7 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Asset manifest file \"/var/www/html/public/build/manifest.json\" does not exist. Did you forget to build the assets with npm or yarn?\"). at /var/www/html/templates/base.html.twig:7)\n[previous exception] [object] (Symfony\\Component\\Asset\\Exception\\RuntimeException(code: 0): Asset manifest file \"/var/www/html/public/build/manifest.json\" does not exist. Did you forget to build the assets with npm or yarn? at /var/www/html/vendor/symfony/asset/VersionStrategy/JsonManifestVersionStrategy.php:84)"} []
[2025-06-18T19:45:35.907141+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T19:56:10.475337+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T19:56:10.489319+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T19:56:10.489393+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T19:56:10.489428+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T19:56:10.489459+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T19:56:10.489486+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T19:56:10.489508+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T19:56:10.489542+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T19:56:10.526150+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T19:56:10.536747+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T19:56:10.548089+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T19:56:10.560925+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-18T19:56:10.564241+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T19:56:10.565284+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T19:56:10.580785+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":4},"types":{"1":1}} []
[2025-06-18T19:56:10.587553+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":2},"types":{"1":1}} []
[2025-06-18T19:56:10.588214+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":3},"types":{"1":1}} []
[2025-06-18T19:56:10.588702+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":1},"types":{"1":1}} []
[2025-06-18T19:56:10.590299+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":3},"types":{"1":1}} []
[2025-06-18T19:56:10.593739+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":5}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":5},"types":{"1":1}} []
[2025-06-18T19:56:10.594910+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":1},"types":{"1":1}} []
[2025-06-18T19:56:10.595796+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":4},"types":{"1":1}} []
[2025-06-18T19:56:10.608673+00:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Asset manifest file "/var/www/html/public/build/manifest.json" does not exist. Did you forget to build the assets with npm or yarn?")." at base.html.twig line 7 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Asset manifest file \"/var/www/html/public/build/manifest.json\" does not exist. Did you forget to build the assets with npm or yarn?\"). at /var/www/html/templates/base.html.twig:7)\n[previous exception] [object] (Symfony\\Component\\Asset\\Exception\\RuntimeException(code: 0): Asset manifest file \"/var/www/html/public/build/manifest.json\" does not exist. Did you forget to build the assets with npm or yarn? at /var/www/html/vendor/symfony/asset/VersionStrategy/JsonManifestVersionStrategy.php:84)"} []
[2025-06-18T19:56:10.739964+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T19:56:15.919968+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T19:56:15.927885+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T19:56:15.927957+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T19:56:15.927989+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T19:56:15.928005+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T19:56:15.928021+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T19:56:15.928035+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T19:56:15.928078+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T19:56:15.953276+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T19:56:15.960561+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T19:56:15.970739+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T19:56:15.979611+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-18T19:56:15.981336+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T19:56:15.981936+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T19:56:15.992437+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":3},"types":{"1":1}} []
[2025-06-18T19:56:15.994556+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":4},"types":{"1":1}} []
[2025-06-18T19:56:15.995275+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":2},"types":{"1":1}} []
[2025-06-18T19:56:15.995801+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":1},"types":{"1":1}} []
[2025-06-18T19:56:15.997312+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":1},"types":{"1":1}} []
[2025-06-18T19:56:15.999226+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":5}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":5},"types":{"1":1}} []
[2025-06-18T19:56:15.999830+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":3},"types":{"1":1}} []
[2025-06-18T19:56:16.000266+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":2},"types":{"1":1}} []
[2025-06-18T19:56:16.008904+00:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Asset manifest file "/var/www/html/public/build/manifest.json" does not exist. Did you forget to build the assets with npm or yarn?")." at base.html.twig line 7 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Asset manifest file \"/var/www/html/public/build/manifest.json\" does not exist. Did you forget to build the assets with npm or yarn?\"). at /var/www/html/templates/base.html.twig:7)\n[previous exception] [object] (Symfony\\Component\\Asset\\Exception\\RuntimeException(code: 0): Asset manifest file \"/var/www/html/public/build/manifest.json\" does not exist. Did you forget to build the assets with npm or yarn? at /var/www/html/vendor/symfony/asset/VersionStrategy/JsonManifestVersionStrategy.php:84)"} []
[2025-06-18T19:56:16.123173+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T19:59:43.365638+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T19:59:43.375928+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T19:59:43.376007+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T19:59:43.376041+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T19:59:43.376078+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T19:59:43.376112+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T19:59:43.376133+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T19:59:43.376157+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T19:59:43.403158+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T19:59:43.410471+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T19:59:43.423517+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T19:59:43.433868+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-18T19:59:43.435622+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T19:59:43.436212+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T19:59:43.446982+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":4},"types":{"1":1}} []
[2025-06-18T19:59:43.450717+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":1},"types":{"1":1}} []
[2025-06-18T19:59:43.451433+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":2},"types":{"1":1}} []
[2025-06-18T19:59:43.451952+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":3},"types":{"1":1}} []
[2025-06-18T19:59:43.453341+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":5}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":5},"types":{"1":1}} []
[2025-06-18T19:59:43.455425+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":2},"types":{"1":1}} []
[2025-06-18T19:59:43.456151+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":3},"types":{"1":1}} []
[2025-06-18T19:59:43.456727+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":1},"types":{"1":1}} []
[2025-06-18T19:59:43.463962+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":6}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":6},"types":{"1":1}} []
[2025-06-18T19:59:43.466254+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":2},"types":{"1":1}} []
[2025-06-18T19:59:43.466805+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":4},"types":{"1":1}} []
[2025-06-18T19:59:43.467177+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2025-06-18T19:59:43.468602+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2025-06-18T19:59:43.469082+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":9}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":9},"types":{"1":1}} []
[2025-06-18T19:59:43.522204+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T20:01:24.999604+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T20:01:25.008727+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T20:01:25.008803+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:01:25.008827+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:01:25.008843+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:01:25.008858+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:01:25.008872+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:01:25.008898+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:01:25.040126+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:01:25.047233+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T20:01:25.057338+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T20:01:25.066377+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-18T20:01:25.068120+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T20:01:25.068773+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:01:25.079372+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:01:25.081457+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:01:25.082134+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:01:25.082656+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:01:25.084057+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":5}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":5},"types":{"1":1}} []
[2025-06-18T20:01:25.085813+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:01:25.086668+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:01:25.087304+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:01:25.094161+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":6}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":6},"types":{"1":1}} []
[2025-06-18T20:01:25.095261+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:01:25.095720+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:01:25.096043+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:01:25.096994+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:01:25.143697+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T20:11:21.012505+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T20:11:21.020280+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T20:11:21.020351+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:11:21.020381+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:11:21.020404+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:11:21.020427+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:11:21.020445+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:11:21.020482+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:11:21.055769+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:11:21.065781+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T20:11:21.076296+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T20:11:21.085971+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-18T20:11:21.087848+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T20:11:21.088412+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:11:21.098323+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:11:21.101267+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:11:21.102325+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:11:21.103050+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:11:21.104448+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:11:21.106348+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:11:21.107114+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:11:21.107749+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:11:21.114442+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:11:21.115627+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":6}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":6},"types":{"1":1}} []
[2025-06-18T20:11:21.116121+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:11:21.116464+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:11:21.117864+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:11:21.118637+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":9}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":9},"types":{"1":1}} []
[2025-06-18T20:11:21.166003+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T20:11:47.139693+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T20:11:47.147618+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T20:11:47.147686+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:11:47.147722+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:11:47.147737+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:11:47.147752+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:11:47.147765+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:11:47.147786+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:11:47.174430+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:11:47.182750+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T20:11:47.192525+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T20:11:47.202293+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-18T20:11:47.204072+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T20:11:47.204650+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:11:47.216366+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:11:47.218251+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:11:47.218860+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:11:47.219341+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:11:47.220721+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:11:47.222295+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:11:47.222941+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:11:47.223490+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":5}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":5},"types":{"1":1}} []
[2025-06-18T20:11:47.230807+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:11:47.232191+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":6}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":6},"types":{"1":1}} []
[2025-06-18T20:11:47.232834+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:11:47.233363+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:11:47.234409+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:11:47.281307+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T20:12:01.869872+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T20:12:01.877855+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T20:12:01.877925+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:12:01.877953+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:12:01.877975+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:12:01.877997+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:12:01.878014+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:12:01.878041+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:12:01.904420+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:12:01.911524+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T20:12:01.929036+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T20:12:01.940468+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-18T20:12:01.942873+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T20:12:01.943436+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:12:01.954368+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:12:01.959784+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:12:01.960452+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:12:01.960919+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:12:01.962272+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":5}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":5},"types":{"1":1}} []
[2025-06-18T20:12:01.963906+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:12:01.964593+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:12:01.965139+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:12:01.973137+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:12:01.974285+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":6}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":6},"types":{"1":1}} []
[2025-06-18T20:12:01.974707+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:12:01.975009+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:12:01.975908+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:12:02.027640+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T20:21:43.875194+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T20:21:43.888648+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T20:21:43.888787+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:21:43.888827+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:21:43.888851+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:21:43.888876+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:21:43.888897+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:21:43.888936+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:21:43.921456+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:21:43.929353+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T20:21:43.942237+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T20:21:43.951786+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-18T20:21:43.953504+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T20:21:43.954021+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:21:43.964883+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:21:43.966887+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:21:43.967635+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:21:43.968135+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:21:43.969451+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:21:43.970955+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":5}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":5},"types":{"1":1}} []
[2025-06-18T20:21:43.971664+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:21:43.972100+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:21:43.979489+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":6}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":6},"types":{"1":1}} []
[2025-06-18T20:21:43.980734+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:21:43.981127+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:21:43.981559+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:21:43.982440+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":9}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":9},"types":{"1":1}} []
[2025-06-18T20:21:43.983017+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:21:44.024509+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T20:40:30.806753+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T20:40:30.814629+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T20:40:30.814696+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:40:30.814720+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:40:30.814736+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:40:30.814751+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:40:30.814764+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:40:30.814787+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:40:30.851304+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:40:30.858390+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T20:40:30.868019+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T20:40:30.876550+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-18T20:40:30.878231+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T20:40:30.878751+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:40:30.890577+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:40:30.892469+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:40:30.893071+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:40:30.893566+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:40:30.894862+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":5}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":5},"types":{"1":1}} []
[2025-06-18T20:40:30.896376+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:40:30.896979+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:40:30.897560+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:40:30.905637+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:40:30.906755+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:40:30.907218+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":6}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":6},"types":{"1":1}} []
[2025-06-18T20:40:30.907552+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:40:30.908453+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:40:30.908921+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":9}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":9},"types":{"1":1}} []
[2025-06-18T20:40:30.957257+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T20:40:32.661944+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T20:40:32.670221+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T20:40:32.670403+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:40:32.670436+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:40:32.670453+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:40:32.670476+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:40:32.670494+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:40:32.670539+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:40:32.697313+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:40:32.705053+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T20:40:32.715173+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T20:40:32.725258+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-18T20:40:32.727007+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T20:40:32.727554+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:40:32.738480+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:40:32.740667+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:40:32.741351+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:40:32.741734+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:40:32.742917+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:40:32.744427+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:40:32.744985+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":5}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":5},"types":{"1":1}} []
[2025-06-18T20:40:32.745499+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:40:32.753881+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:40:32.755166+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:40:32.755690+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":6}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":6},"types":{"1":1}} []
[2025-06-18T20:40:32.756115+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:40:32.757124+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":9}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":9},"types":{"1":1}} []
[2025-06-18T20:40:32.757506+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:40:32.801771+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T20:41:59.248810+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T20:41:59.256913+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T20:41:59.256991+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:41:59.257022+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:41:59.257044+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:41:59.257076+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:41:59.257094+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:41:59.257123+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:41:59.292659+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:41:59.300455+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T20:41:59.308870+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T20:41:59.317512+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-18T20:41:59.319185+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T20:41:59.319716+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:41:59.330541+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:41:59.332455+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:41:59.333097+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:41:59.333585+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:41:59.334882+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:41:59.336405+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":5}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":5},"types":{"1":1}} []
[2025-06-18T20:41:59.337018+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:41:59.337573+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:41:59.344956+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:41:59.346816+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:41:59.347392+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":6}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":6},"types":{"1":1}} []
[2025-06-18T20:41:59.347761+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:41:59.348749+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":9}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":9},"types":{"1":1}} []
[2025-06-18T20:41:59.349212+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:41:59.399111+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T20:42:04.132817+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T20:42:04.141882+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T20:42:04.141955+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:42:04.141979+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:42:04.141994+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:42:04.142008+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:42:04.142020+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:42:04.142039+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:42:04.175772+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:42:04.182514+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T20:42:04.190939+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T20:42:04.199056+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-18T20:42:04.200702+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T20:42:04.201249+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:42:04.214725+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:42:04.216642+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:42:04.217314+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:42:04.217664+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:42:04.218832+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":5}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":5},"types":{"1":1}} []
[2025-06-18T20:42:04.220253+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:42:04.220769+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:42:04.221157+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:42:04.229097+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":6}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":6},"types":{"1":1}} []
[2025-06-18T20:42:04.230291+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:42:04.230691+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:42:04.230917+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:42:04.231777+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:42:04.282380+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T20:42:06.410395+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T20:42:06.421089+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T20:42:06.421180+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:42:06.421211+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:42:06.421240+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:42:06.421263+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:42:06.421283+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:42:06.421309+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:42:06.449038+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:42:06.457681+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T20:42:06.467540+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T20:42:06.475571+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-18T20:42:06.478194+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T20:42:06.479053+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:42:06.489006+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:42:06.490824+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:42:06.491481+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:42:06.491957+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:42:06.493345+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:42:06.496250+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:42:06.497644+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":5}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":5},"types":{"1":1}} []
[2025-06-18T20:42:06.498314+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:42:06.504735+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":6}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":6},"types":{"1":1}} []
[2025-06-18T20:42:06.505847+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:42:06.506232+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:42:06.506676+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:42:06.507630+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:42:06.555045+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T20:42:13.561865+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T20:42:13.569878+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T20:42:13.569946+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:42:13.569980+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:42:13.569995+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:42:13.570023+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:42:13.570042+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:42:13.570080+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:42:13.594850+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:42:13.602785+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T20:42:13.613631+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T20:42:13.622213+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-18T20:42:13.623835+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T20:42:13.624394+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:42:13.635057+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:42:13.636931+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:42:13.637566+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:42:13.638045+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:42:13.639409+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:42:13.640914+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:42:13.641552+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":5}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":5},"types":{"1":1}} []
[2025-06-18T20:42:13.642104+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:42:13.649681+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":6}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":6},"types":{"1":1}} []
[2025-06-18T20:42:13.650898+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:42:13.651426+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:42:13.651778+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:42:13.652725+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":9}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":9},"types":{"1":1}} []
[2025-06-18T20:42:13.653147+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:42:13.701590+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T20:42:15.921024+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T20:42:15.933884+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T20:42:15.934014+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:42:15.934052+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:42:15.934087+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:42:15.934109+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:42:15.934129+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:42:15.934167+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:42:15.963909+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:42:15.972902+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T20:42:15.981350+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T20:42:15.991619+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-18T20:42:15.993389+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T20:42:15.993901+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:42:16.005649+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:42:16.007648+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:42:16.008368+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:42:16.008883+00:00] doctrine.DEBUG: Executing statement: SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT AVG(l0_.note) AS sclr_0 FROM louer_hotel l0_ INNER JOIN chambre c1_ ON l0_.chambre_id = c1_.id INNER JOIN hotel h2_ ON c1_.hotel_id = h2_.id WHERE h2_.id = ? AND l0_.note IS NOT NULL","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:42:16.010119+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:42:16.011494+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":5}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":5},"types":{"1":1}} []
[2025-06-18T20:42:16.012018+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:42:16.012514+00:00] doctrine.DEBUG: Executing statement: SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT j0_.libelle_jour AS libelle_jour_0, h1_.ouverture AS ouverture_1, h1_.fermeture AS fermeture_2 FROM ouverture_restaurant o2_ INNER JOIN jour j0_ ON o2_.jour_id = j0_.id INNER JOIN horaire h1_ ON o2_.horaire_id = h1_.id WHERE o2_.restaurant_id = ? ORDER BY j0_.libelle_jour ASC, h1_.ouverture ASC","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:42:16.021133+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":4}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":4},"types":{"1":1}} []
[2025-06-18T20:42:16.022354+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":6}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":6},"types":{"1":1}} []
[2025-06-18T20:42:16.022760+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":2},"types":{"1":1}} []
[2025-06-18T20:42:16.022971+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2025-06-18T20:42:16.023813+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":1},"types":{"1":1}} []
[2025-06-18T20:42:16.024155+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ? (parameters: array{"1":9}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.libelle_biome AS libelle_biome_2, t0.description_biome AS description_biome_3 FROM biome t0 WHERE t0.id = ?","params":{"1":9},"types":{"1":1}} []
[2025-06-18T20:42:16.065769+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T20:57:33.898331+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T20:57:33.908351+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T20:57:33.908464+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:57:33.908501+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T20:57:33.908526+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:57:33.908565+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T20:57:33.908587+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:57:33.908621+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T20:57:33.936673+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:57:33.945955+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T20:57:33.963906+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T20:57:33.967658+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\TableNotFoundException: "An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation "hotel" does not exist LINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0                                                                ^" at ExceptionConverter.php line 71 {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableNotFoundException(code: 7): An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:71)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 42P01): SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Connection.php:71)"} []
[2025-06-18T20:57:34.039956+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T20:57:34.040677+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T20:57:34.095258+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T21:01:38.722676+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T21:01:38.730410+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T21:01:38.730476+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T21:01:38.730513+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T21:01:38.730527+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T21:01:38.730542+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T21:01:38.730554+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T21:01:38.730574+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T21:01:38.755195+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T21:01:38.762148+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T21:01:38.774412+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T21:01:38.778176+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\TableNotFoundException: "An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation "hotel" does not exist LINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0                                                                ^" at ExceptionConverter.php line 71 {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableNotFoundException(code: 7): An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:71)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 42P01): SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Connection.php:71)"} []
[2025-06-18T21:01:38.847055+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T21:01:38.847794+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T21:01:38.900496+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-18T21:01:42.283934+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-18T21:01:42.291732+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-18T21:01:42.291799+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T21:01:42.291833+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-18T21:01:42.291848+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T21:01:42.291863+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-18T21:01:42.291876+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T21:01:42.291895+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-18T21:01:42.316434+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T21:01:42.323604+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-18T21:01:42.333317+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-18T21:01:42.337107+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\TableNotFoundException: "An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation "hotel" does not exist LINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0                                                                ^" at ExceptionConverter.php line 71 {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableNotFoundException(code: 7): An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:71)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 42P01): SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Connection.php:71)"} []
[2025-06-18T21:01:42.410896+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-18T21:01:42.411601+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-18T21:01:42.465762+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-19T09:21:45.134200+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-19T09:21:45.151057+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-19T09:21:45.151137+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-19T09:21:45.151167+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-19T09:21:45.151194+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-19T09:21:45.151215+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-19T09:21:45.151232+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-19T09:21:45.151260+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-19T09:21:45.191664+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-19T09:21:45.203826+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-19T09:21:45.224997+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-19T09:21:45.231973+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\TableNotFoundException: "An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation "hotel" does not exist LINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0                                                                ^" at ExceptionConverter.php line 71 {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableNotFoundException(code: 7): An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:71)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 42P01): SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Connection.php:71)"} []
[2025-06-19T09:21:45.309029+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-19T09:21:45.309954+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-19T09:21:45.381057+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-19T09:22:31.717168+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"}} []
[2025-06-19T09:22:31.732831+00:00] doctrine.DEBUG: Executing statement: CREATE DATABASE "ma_base" {"sql":"CREATE DATABASE \"ma_base\""} []
[2025-06-19T09:22:31.734468+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-19T09:22:31.735482+00:00] console.DEBUG: Command "doctrine:database:create" exited with code "1" {"command":"doctrine:database:create","code":1} []
[2025-06-19T09:23:15.538238+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-19T09:23:15.548794+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-19T09:23:15.554059+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-19T09:23:15.565939+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-19T09:23:15.566222+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-19T09:23:17.665928+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-06-19T09:23:17.668281+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-19T09:23:17.668800+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ma_base'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ma_base'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-06-19T09:23:17.673470+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-19T09:23:17.674019+00:00] doctrine.DEBUG: Executing query: SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-06-19T09:23:17.682780+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-06-19T09:23:17.684376+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-06-19T09:23:17.685989+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-06-19T09:23:17.688156+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-06-19T09:23:17.689180+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-19T09:23:17.695180+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-19T09:23:17.700118+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-19T09:23:17.707140+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-06-19T09:23:17.722660+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-19T09:23:17.724432+00:00] deprecation.INFO: User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-19T09:23:17.724898+00:00] deprecation.INFO: User Deprecated: Passing $sequence as a Sequence object to Doctrine\DBAL\Platforms\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Passing $sequence as a Sequence object to Doctrine\\DBAL\\Platforms\\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-19T09:23:17.727067+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-19T09:23:17.727247+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-19T09:23:17.727612+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-19T09:23:31.825261+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-19T09:23:31.836396+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-19T09:23:32.631418+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-19T09:23:32.633103+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-19T09:23:32.645035+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-19T09:23:32.647659+00:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version))"} []
[2025-06-19T09:23:32.658152+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-19T09:23:32.658934+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-19T09:23:32.659214+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-19T09:23:32.664786+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-06-19T09:23:32.666849+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE acheter_produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE acheter_produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-19T09:23:32.667944+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE biome_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE biome_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-19T09:23:32.668310+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-19T09:23:32.668591+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE "commande_id_seq" INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE \"commande_id_seq\" INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-19T09:23:32.668778+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE date_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE date_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-19T09:23:32.668986+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE dinosaure_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE dinosaure_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-19T09:23:32.669167+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE enclos_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE enclos_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-19T09:23:32.669326+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE format_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE format_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-19T09:23:32.669528+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE format_chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE format_chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-19T09:23:32.669746+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE horaire_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE horaire_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-19T09:23:32.669950+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-19T09:23:32.670126+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE jour_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE jour_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-19T09:23:32.670283+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE louer_hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE louer_hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-19T09:23:32.670452+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE payer_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE payer_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-19T09:23:32.670622+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-19T09:23:32.670786+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE remboursement_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE remboursement_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-19T09:23:32.671083+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE restaurant_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE restaurant_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-19T09:23:32.671333+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE "user_id_seq" INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE \"user_id_seq\" INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-19T09:23:32.671576+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE acheter_produit (id INT NOT NULL, commande_id INT DEFAULT NULL, produit_id INT DEFAULT NULL, quantite INT NOT NULL, prix DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE acheter_produit (id INT NOT NULL, commande_id INT DEFAULT NULL, produit_id INT DEFAULT NULL, quantite INT NOT NULL, prix DOUBLE PRECISION NOT NULL, PRIMARY KEY(id))"} []
[2025-06-19T09:23:32.673522+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_A704F21082EA2E54 ON acheter_produit (commande_id) {"sql":"    CREATE INDEX IDX_A704F21082EA2E54 ON acheter_produit (commande_id)"} []
[2025-06-19T09:23:32.675036+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_A704F210F347EFB ON acheter_produit (produit_id) {"sql":"    CREATE INDEX IDX_A704F210F347EFB ON acheter_produit (produit_id)"} []
[2025-06-19T09:23:32.676986+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE administrateur (id INT NOT NULL, admin_level INT NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE administrateur (id INT NOT NULL, admin_level INT NOT NULL, PRIMARY KEY(id))"} []
[2025-06-19T09:23:32.678933+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE biome (id INT NOT NULL, libelle_biome VARCHAR(255) NOT NULL, description_biome VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE biome (id INT NOT NULL, libelle_biome VARCHAR(255) NOT NULL, description_biome VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-19T09:23:32.683060+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE chambre (id INT NOT NULL, hotel_id INT NOT NULL, format_chambre_id INT NOT NULL, numero_chambre VARCHAR(255) NOT NULL, etage_chambre VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE chambre (id INT NOT NULL, hotel_id INT NOT NULL, format_chambre_id INT NOT NULL, numero_chambre VARCHAR(255) NOT NULL, etage_chambre VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-19T09:23:32.687053+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C509E4FF3243BB18 ON chambre (hotel_id) {"sql":"    CREATE INDEX IDX_C509E4FF3243BB18 ON chambre (hotel_id)"} []
[2025-06-19T09:23:32.689395+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C509E4FF589AE8D9 ON chambre (format_chambre_id) {"sql":"    CREATE INDEX IDX_C509E4FF589AE8D9 ON chambre (format_chambre_id)"} []
[2025-06-19T09:23:32.691644+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE client (id INT NOT NULL, adresse_postal VARCHAR(255) NOT NULL, code_postal INT NOT NULL, otp VARCHAR(6) DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE client (id INT NOT NULL, adresse_postal VARCHAR(255) NOT NULL, code_postal INT NOT NULL, otp VARCHAR(6) DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-06-19T09:23:32.693548+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE "commande" (id INT NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, status VARCHAR(255) NOT NULL, total DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE \"commande\" (id INT NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, status VARCHAR(255) NOT NULL, total DOUBLE PRECISION NOT NULL, PRIMARY KEY(id))"} []
[2025-06-19T09:23:32.695502+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN "commande".created_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN \"commande\".created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-19T09:23:32.696220+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE date (id INT NOT NULL, date TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE date (id INT NOT NULL, date TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))"} []
[2025-06-19T09:23:32.697859+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE dinosaure (id INT NOT NULL, enclos_id INT NOT NULL, image_dinosaure VARCHAR(255) NOT NULL, libelle_dinosaure VARCHAR(255) NOT NULL, regime_dinosaure VARCHAR(255) NOT NULL, ere_dinosaure VARCHAR(255) NOT NULL, description_dinosaure VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE dinosaure (id INT NOT NULL, enclos_id INT NOT NULL, image_dinosaure VARCHAR(255) NOT NULL, libelle_dinosaure VARCHAR(255) NOT NULL, regime_dinosaure VARCHAR(255) NOT NULL, ere_dinosaure VARCHAR(255) NOT NULL, description_dinosaure VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-19T09:23:32.701318+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_450ADBC0B1C0859 ON dinosaure (enclos_id) {"sql":"    CREATE INDEX IDX_450ADBC0B1C0859 ON dinosaure (enclos_id)"} []
[2025-06-19T09:23:32.702857+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE enclos (id INT NOT NULL, biome_id INT NOT NULL, libelle_enclos VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE enclos (id INT NOT NULL, biome_id INT NOT NULL, libelle_enclos VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-19T09:23:32.704739+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_8CCECB21E43A64F9 ON enclos (biome_id) {"sql":"    CREATE INDEX IDX_8CCECB21E43A64F9 ON enclos (biome_id)"} []
[2025-06-19T09:23:32.706473+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE format_billet (id INT NOT NULL, libelle_billet VARCHAR(255) NOT NULL, image_billet VARCHAR(255) NOT NULL, description_billet VARCHAR(1000) NOT NULL, prix_billet INT NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE format_billet (id INT NOT NULL, libelle_billet VARCHAR(255) NOT NULL, image_billet VARCHAR(255) NOT NULL, description_billet VARCHAR(1000) NOT NULL, prix_billet INT NOT NULL, PRIMARY KEY(id))"} []
[2025-06-19T09:23:32.710033+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE format_chambre (id INT NOT NULL, libelle_format_chambre VARCHAR(255) NOT NULL, prix_format_chambre INT NOT NULL, description_format_billet VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE format_chambre (id INT NOT NULL, libelle_format_chambre VARCHAR(255) NOT NULL, prix_format_chambre INT NOT NULL, description_format_billet VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-19T09:23:32.713551+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE horaire (id INT NOT NULL, ouverture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fermeture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE horaire (id INT NOT NULL, ouverture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fermeture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))"} []
[2025-06-19T09:23:32.715444+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE hotel (id INT NOT NULL, biome_id INT DEFAULT NULL, libelle_hotel VARCHAR(255) NOT NULL, image_hotel VARCHAR(255) NOT NULL, description_hotel VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE hotel (id INT NOT NULL, biome_id INT DEFAULT NULL, libelle_hotel VARCHAR(255) NOT NULL, image_hotel VARCHAR(255) NOT NULL, description_hotel VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-19T09:23:32.717994+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_3535ED9E43A64F9 ON hotel (biome_id) {"sql":"    CREATE INDEX IDX_3535ED9E43A64F9 ON hotel (biome_id)"} []
[2025-06-19T09:23:32.719556+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE jour (id INT NOT NULL, libelle_jour VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE jour (id INT NOT NULL, libelle_jour VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-19T09:23:32.721541+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE louer_hotel (id INT NOT NULL, user_id INT NOT NULL, chambre_id INT NOT NULL, date_id INT NOT NULL, note INT NOT NULL, debut_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE louer_hotel (id INT NOT NULL, user_id INT NOT NULL, chambre_id INT NOT NULL, date_id INT NOT NULL, note INT NOT NULL, debut_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))"} []
[2025-06-19T09:23:32.723466+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_70C4104FA76ED395 ON louer_hotel (user_id) {"sql":"    CREATE INDEX IDX_70C4104FA76ED395 ON louer_hotel (user_id)"} []
[2025-06-19T09:23:32.724984+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_70C4104F9B177F54 ON louer_hotel (chambre_id) {"sql":"    CREATE INDEX IDX_70C4104F9B177F54 ON louer_hotel (chambre_id)"} []
[2025-06-19T09:23:32.726559+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_70C4104FB897366B ON louer_hotel (date_id) {"sql":"    CREATE INDEX IDX_70C4104FB897366B ON louer_hotel (date_id)"} []
[2025-06-19T09:23:32.728108+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE ouverture_restaurant (restaurant_id INT NOT NULL, jour_id INT NOT NULL, horaire_id INT NOT NULL, PRIMARY KEY(restaurant_id, jour_id, horaire_id)) {"sql":"    CREATE TABLE ouverture_restaurant (restaurant_id INT NOT NULL, jour_id INT NOT NULL, horaire_id INT NOT NULL, PRIMARY KEY(restaurant_id, jour_id, horaire_id))"} []
[2025-06-19T09:23:32.729982+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_697FD193B1E7706E ON ouverture_restaurant (restaurant_id) {"sql":"    CREATE INDEX IDX_697FD193B1E7706E ON ouverture_restaurant (restaurant_id)"} []
[2025-06-19T09:23:32.732148+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_697FD193220C6AD0 ON ouverture_restaurant (jour_id) {"sql":"    CREATE INDEX IDX_697FD193220C6AD0 ON ouverture_restaurant (jour_id)"} []
[2025-06-19T09:23:32.734264+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_697FD19358C54515 ON ouverture_restaurant (horaire_id) {"sql":"    CREATE INDEX IDX_697FD19358C54515 ON ouverture_restaurant (horaire_id)"} []
[2025-06-19T09:23:32.736215+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE payer_billet (id INT NOT NULL, user_id INT NOT NULL, billet_id INT NOT NULL, date_id INT NOT NULL, debut_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE payer_billet (id INT NOT NULL, user_id INT NOT NULL, billet_id INT NOT NULL, date_id INT NOT NULL, debut_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-19T09:23:32.739358+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_4744803CA76ED395 ON payer_billet (user_id) {"sql":"    CREATE INDEX IDX_4744803CA76ED395 ON payer_billet (user_id)"} []
[2025-06-19T09:23:32.740913+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_4744803C44973C78 ON payer_billet (billet_id) {"sql":"    CREATE INDEX IDX_4744803C44973C78 ON payer_billet (billet_id)"} []
[2025-06-19T09:23:32.742802+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_4744803CB897366B ON payer_billet (date_id) {"sql":"    CREATE INDEX IDX_4744803CB897366B ON payer_billet (date_id)"} []
[2025-06-19T09:23:32.743944+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE produit (id INT NOT NULL, libelle_produit VARCHAR(255) NOT NULL, image_produit VARCHAR(255) NOT NULL, description_produit VARCHAR(1000) NOT NULL, stock INT NOT NULL, disponible_achat BOOLEAN NOT NULL, prix_produit DOUBLE PRECISION NOT NULL, slug VARCHAR(255) DEFAULT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE produit (id INT NOT NULL, libelle_produit VARCHAR(255) NOT NULL, image_produit VARCHAR(255) NOT NULL, description_produit VARCHAR(1000) NOT NULL, stock INT NOT NULL, disponible_achat BOOLEAN NOT NULL, prix_produit DOUBLE PRECISION NOT NULL, slug VARCHAR(255) DEFAULT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-06-19T09:23:32.747156+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN produit.created_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN produit.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-19T09:23:32.747307+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE remboursement (id INT NOT NULL, client_id INT NOT NULL, billet_id INT NOT NULL, date_demande TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, statut VARCHAR(255) NOT NULL, motif VARCHAR(1500) NOT NULL, montant DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE remboursement (id INT NOT NULL, client_id INT NOT NULL, billet_id INT NOT NULL, date_demande TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, statut VARCHAR(255) NOT NULL, motif VARCHAR(1500) NOT NULL, montant DOUBLE PRECISION NOT NULL, PRIMARY KEY(id))"} []
[2025-06-19T09:23:32.750757+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C0C0D9EF19EB6921 ON remboursement (client_id) {"sql":"    CREATE INDEX IDX_C0C0D9EF19EB6921 ON remboursement (client_id)"} []
[2025-06-19T09:23:32.752329+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C0C0D9EF44973C78 ON remboursement (billet_id) {"sql":"    CREATE INDEX IDX_C0C0D9EF44973C78 ON remboursement (billet_id)"} []
[2025-06-19T09:23:32.753866+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE remboursement_billet (remboursement_id INT NOT NULL, payer_billet_id INT NOT NULL, PRIMARY KEY(remboursement_id, payer_billet_id)) {"sql":"    CREATE TABLE remboursement_billet (remboursement_id INT NOT NULL, payer_billet_id INT NOT NULL, PRIMARY KEY(remboursement_id, payer_billet_id))"} []
[2025-06-19T09:23:32.755596+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_B9B130B1F61EE8B ON remboursement_billet (remboursement_id) {"sql":"    CREATE INDEX IDX_B9B130B1F61EE8B ON remboursement_billet (remboursement_id)"} []
[2025-06-19T09:23:32.757517+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_B9B130B1102C441 ON remboursement_billet (payer_billet_id) {"sql":"    CREATE INDEX IDX_B9B130B1102C441 ON remboursement_billet (payer_billet_id)"} []
[2025-06-19T09:23:32.759070+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE remboursement_hotel (remboursement_id INT NOT NULL, louer_hotel_id INT NOT NULL, PRIMARY KEY(remboursement_id, louer_hotel_id)) {"sql":"    CREATE TABLE remboursement_hotel (remboursement_id INT NOT NULL, louer_hotel_id INT NOT NULL, PRIMARY KEY(remboursement_id, louer_hotel_id))"} []
[2025-06-19T09:23:32.760993+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_D7E7E7CF61EE8B ON remboursement_hotel (remboursement_id) {"sql":"    CREATE INDEX IDX_D7E7E7CF61EE8B ON remboursement_hotel (remboursement_id)"} []
[2025-06-19T09:23:32.762534+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_D7E7E7CCB4C1B45 ON remboursement_hotel (louer_hotel_id) {"sql":"    CREATE INDEX IDX_D7E7E7CCB4C1B45 ON remboursement_hotel (louer_hotel_id)"} []
[2025-06-19T09:23:32.764077+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE reserver_restaurant (client_id INT NOT NULL, restaurant_id INT NOT NULL, date_id INT NOT NULL, date_reservation TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, present BOOLEAN NOT NULL, nb_personne INT NOT NULL, PRIMARY KEY(client_id, restaurant_id, date_id)) {"sql":"    CREATE TABLE reserver_restaurant (client_id INT NOT NULL, restaurant_id INT NOT NULL, date_id INT NOT NULL, date_reservation TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, present BOOLEAN NOT NULL, nb_personne INT NOT NULL, PRIMARY KEY(client_id, restaurant_id, date_id))"} []
[2025-06-19T09:23:32.766022+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_25F6B43A19EB6921 ON reserver_restaurant (client_id) {"sql":"    CREATE INDEX IDX_25F6B43A19EB6921 ON reserver_restaurant (client_id)"} []
[2025-06-19T09:23:32.767550+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_25F6B43AB1E7706E ON reserver_restaurant (restaurant_id) {"sql":"    CREATE INDEX IDX_25F6B43AB1E7706E ON reserver_restaurant (restaurant_id)"} []
[2025-06-19T09:23:32.769212+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_25F6B43AB897366B ON reserver_restaurant (date_id) {"sql":"    CREATE INDEX IDX_25F6B43AB897366B ON reserver_restaurant (date_id)"} []
[2025-06-19T09:23:32.771336+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE restaurant (id INT NOT NULL, biome_id INT NOT NULL, libelle_restaurant VARCHAR(255) NOT NULL, image_restaurant VARCHAR(255) NOT NULL, nb_table INT NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE restaurant (id INT NOT NULL, biome_id INT NOT NULL, libelle_restaurant VARCHAR(255) NOT NULL, image_restaurant VARCHAR(255) NOT NULL, nb_table INT NOT NULL, PRIMARY KEY(id))"} []
[2025-06-19T09:23:32.775538+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_EB95123FE43A64F9 ON restaurant (biome_id) {"sql":"    CREATE INDEX IDX_EB95123FE43A64F9 ON restaurant (biome_id)"} []
[2025-06-19T09:23:32.777081+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE "user" (id INT NOT NULL, email VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, numero_telephone VARCHAR(255) NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, roles JSON NOT NULL, is_verified BOOLEAN NOT NULL, reset_token VARCHAR(255) DEFAULT NULL, reset_token_expiration TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, type VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE \"user\" (id INT NOT NULL, email VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, numero_telephone VARCHAR(255) NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, roles JSON NOT NULL, is_verified BOOLEAN NOT NULL, reset_token VARCHAR(255) DEFAULT NULL, reset_token_expiration TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, type VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-19T09:23:32.781130+00:00] doctrine.DEBUG: Executing query:     CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON "user" (email) {"sql":"    CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON \"user\" (email)"} []
[2025-06-19T09:23:32.783189+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-06-19T09:23:32.788276+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name) {"sql":"    CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name)"} []
[2025-06-19T09:23:32.790116+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at) {"sql":"    CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at)"} []
[2025-06-19T09:23:32.791741+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at) {"sql":"    CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at)"} []
[2025-06-19T09:23:32.793330+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-19T09:23:32.793469+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-19T09:23:32.793561+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-19T09:23:32.793639+00:00] doctrine.DEBUG: Executing query:     CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$         BEGIN             PERFORM pg_notify('messenger_messages', NEW.queue_name::text);             RETURN NEW;         END;     $$ LANGUAGE plpgsql; {"sql":"    CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$\n        BEGIN\n            PERFORM pg_notify('messenger_messages', NEW.queue_name::text);\n            RETURN NEW;\n        END;\n    $$ LANGUAGE plpgsql;"} []
[2025-06-19T09:23:32.796044+00:00] doctrine.DEBUG: Executing query:     DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages; {"sql":"    DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages;"} []
[2025-06-19T09:23:32.796350+00:00] doctrine.DEBUG: Executing query:     CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages(); {"sql":"    CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages();"} []
[2025-06-19T09:23:32.796788+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F21082EA2E54 FOREIGN KEY (commande_id) REFERENCES "commande" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F21082EA2E54 FOREIGN KEY (commande_id) REFERENCES \"commande\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.797680+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F210F347EFB FOREIGN KEY (produit_id) REFERENCES produit (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F210F347EFB FOREIGN KEY (produit_id) REFERENCES produit (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.798194+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE administrateur ADD CONSTRAINT FK_32EB52E8BF396750 FOREIGN KEY (id) REFERENCES "user" (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE administrateur ADD CONSTRAINT FK_32EB52E8BF396750 FOREIGN KEY (id) REFERENCES \"user\" (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.798698+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF3243BB18 FOREIGN KEY (hotel_id) REFERENCES hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF3243BB18 FOREIGN KEY (hotel_id) REFERENCES hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.799174+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF589AE8D9 FOREIGN KEY (format_chambre_id) REFERENCES format_chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF589AE8D9 FOREIGN KEY (format_chambre_id) REFERENCES format_chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.799614+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE client ADD CONSTRAINT FK_C7440455BF396750 FOREIGN KEY (id) REFERENCES "user" (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE client ADD CONSTRAINT FK_C7440455BF396750 FOREIGN KEY (id) REFERENCES \"user\" (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.800041+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE dinosaure ADD CONSTRAINT FK_450ADBC0B1C0859 FOREIGN KEY (enclos_id) REFERENCES enclos (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE dinosaure ADD CONSTRAINT FK_450ADBC0B1C0859 FOREIGN KEY (enclos_id) REFERENCES enclos (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.800502+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE enclos ADD CONSTRAINT FK_8CCECB21E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE enclos ADD CONSTRAINT FK_8CCECB21E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.800920+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE hotel ADD CONSTRAINT FK_3535ED9E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE hotel ADD CONSTRAINT FK_3535ED9E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.801273+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FA76ED395 FOREIGN KEY (user_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FA76ED395 FOREIGN KEY (user_id) REFERENCES \"user\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.801802+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104F9B177F54 FOREIGN KEY (chambre_id) REFERENCES chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104F9B177F54 FOREIGN KEY (chambre_id) REFERENCES chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.802196+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.802626+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193B1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193B1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.803291+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193220C6AD0 FOREIGN KEY (jour_id) REFERENCES jour (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193220C6AD0 FOREIGN KEY (jour_id) REFERENCES jour (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.803738+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD19358C54515 FOREIGN KEY (horaire_id) REFERENCES horaire (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD19358C54515 FOREIGN KEY (horaire_id) REFERENCES horaire (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.804139+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CA76ED395 FOREIGN KEY (user_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CA76ED395 FOREIGN KEY (user_id) REFERENCES \"user\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.804663+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803C44973C78 FOREIGN KEY (billet_id) REFERENCES format_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803C44973C78 FOREIGN KEY (billet_id) REFERENCES format_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.805174+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.805578+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF19EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF19EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.806042+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF44973C78 FOREIGN KEY (billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF44973C78 FOREIGN KEY (billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.806416+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1F61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1F61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.806891+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1102C441 FOREIGN KEY (payer_billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1102C441 FOREIGN KEY (payer_billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.807250+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CF61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CF61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.807696+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CCB4C1B45 FOREIGN KEY (louer_hotel_id) REFERENCES louer_hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CCB4C1B45 FOREIGN KEY (louer_hotel_id) REFERENCES louer_hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.808063+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43A19EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43A19EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.808551+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.808991+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.809347+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE restaurant ADD CONSTRAINT FK_EB95123FE43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE restaurant ADD CONSTRAINT FK_EB95123FE43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-19T09:23:32.810087+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250618190555","2":"2025-06-19 09:23:32","3":145}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250618190555","2":"2025-06-19 09:23:32","3":145},"types":{"1":2,"2":2,"3":1}} []
[2025-06-19T09:23:32.810613+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-06-19T09:23:32.812130+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-06-19T09:23:32.812521+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE acheter_produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE acheter_produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-19T09:23:32.813886+00:00] doctrine.DEBUG: Rolling back transaction [] []
[2025-06-19T09:23:32.815435+00:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing a query: SQLSTATE[42P07]: Duplicate table: 7 ERROR:  relation "acheter_produit_id_seq" already exists" {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableExistsException(code: 7): An exception occurred while executing a query: SQLSTATE[42P07]: Duplicate table: 7 ERROR:  relation \"acheter_produit_id_seq\" already exists at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:74)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[42P07]: Duplicate table: 7 ERROR:  relation \"acheter_produit_id_seq\" already exists at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 42P07): SQLSTATE[42P07]: Duplicate table: 7 ERROR:  relation \"acheter_produit_id_seq\" already exists at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Connection.php:71)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing a query: SQLSTATE[42P07]: Duplicate table: 7 ERROR:  relation \"acheter_produit_id_seq\" already exists"} []
[2025-06-19T09:23:32.816185+00:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "7" {"command":"doctrine:migrations:migrate","code":7} []
[2025-06-19T09:23:32.821827+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-19T09:23:32.822209+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-19T09:23:32.822299+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-19T09:23:38.536385+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-19T09:23:38.545376+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-19T09:23:38.545467+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-19T09:23:38.545492+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-19T09:23:38.545506+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-19T09:23:38.545523+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-19T09:23:38.545544+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-19T09:23:38.545574+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-19T09:23:38.572243+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-19T09:23:38.579713+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-19T09:23:38.589945+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-19T09:23:38.598220+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-19T09:23:38.617317+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-19T09:23:38.655896+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-19T09:24:12.757744+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-19T09:24:12.772543+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-19T09:24:12.772614+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-19T09:24:12.772636+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-19T09:24:12.772651+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-19T09:24:12.772667+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-19T09:24:12.772680+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-19T09:24:12.772703+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-19T09:24:12.809896+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-19T09:24:12.821854+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-19T09:24:12.837813+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-19T09:24:12.847188+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-19T09:24:12.872581+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-19T09:24:12.927593+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-20T13:53:43.780229+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-20T13:53:43.809293+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-20T13:53:43.809396+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-20T13:53:43.809433+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-20T13:53:43.809456+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-20T13:53:43.809480+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-20T13:53:43.809512+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-20T13:53:43.809543+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-20T13:53:43.887064+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-20T13:53:43.913289+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-20T13:53:43.939570+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-20T13:53:43.956581+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-20T13:53:44.002564+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-20T13:53:44.083248+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-24T09:30:17.733227+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-24T09:30:17.764990+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-24T09:30:17.765057+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-24T09:30:17.765096+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-24T09:30:17.765110+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-24T09:30:17.765125+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-24T09:30:17.765141+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-24T09:30:17.765175+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-24T09:30:17.823772+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-24T09:30:17.841443+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-24T09:30:17.852065+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in the driver: SQLSTATE[08006] [7] could not translate host name "db" to address: Temporary failure in name resolution" at ExceptionConverter.php line 77 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:77)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:34)"} []
[2025-06-24T09:30:17.960168+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-24T09:30:17.961309+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-24T09:30:25.437118+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-24T09:30:25.445293+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-24T09:30:25.445374+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-24T09:30:25.445410+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-24T09:30:25.445425+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-24T09:30:25.445438+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-24T09:30:25.445450+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-24T09:30:25.445467+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-24T09:30:25.469759+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-24T09:30:25.476944+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-24T09:30:25.482010+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in the driver: SQLSTATE[08006] [7] could not translate host name "db" to address: Temporary failure in name resolution" at ExceptionConverter.php line 77 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:77)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:34)"} []
[2025-06-24T09:30:25.562033+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-24T09:30:25.562716+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-24T09:31:05.584749+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-24T09:31:05.592762+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-24T09:31:05.592832+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-24T09:31:05.592869+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-24T09:31:05.592884+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-24T09:31:05.592900+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-24T09:31:05.592912+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-24T09:31:05.592930+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-24T09:31:05.617316+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-24T09:31:05.624418+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-24T09:31:05.629319+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in the driver: SQLSTATE[08006] [7] could not translate host name "db" to address: Temporary failure in name resolution" at ExceptionConverter.php line 77 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:77)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:34)"} []
[2025-06-24T09:31:05.711800+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-24T09:31:05.712476+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-24T09:32:13.248287+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-24T09:32:13.276775+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-24T09:32:13.276857+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-24T09:32:13.276888+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-24T09:32:13.276908+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-24T09:32:13.276927+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-24T09:32:13.276944+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-24T09:32:13.276966+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-24T09:32:13.335244+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-24T09:32:13.353941+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-24T09:32:13.364972+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in the driver: SQLSTATE[08006] [7] could not translate host name "db" to address: Temporary failure in name resolution" at ExceptionConverter.php line 77 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:77)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:34)"} []
[2025-06-24T09:32:13.459273+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-24T09:32:13.460549+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-24T09:32:39.448189+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-24T09:32:39.456517+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-24T09:32:39.456588+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-24T09:32:39.456616+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-24T09:32:39.456636+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-24T09:32:39.456671+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-24T09:32:39.456688+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-24T09:32:39.456711+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-24T09:32:39.485043+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-24T09:32:39.493215+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-24T09:32:39.500088+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in the driver: SQLSTATE[08006] [7] could not translate host name "db" to address: Temporary failure in name resolution" at ExceptionConverter.php line 77 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:77)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:34)"} []
[2025-06-24T09:32:39.593913+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-24T09:32:39.594678+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-24T09:33:12.475198+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-24T09:33:12.483327+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-24T09:33:12.483402+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-24T09:33:12.483441+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-24T09:33:12.483456+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-24T09:33:12.483472+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-24T09:33:12.483484+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-24T09:33:12.483503+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-24T09:33:12.508369+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-24T09:33:12.515289+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-24T09:33:12.520161+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in the driver: SQLSTATE[08006] [7] could not translate host name "db" to address: Temporary failure in name resolution" at ExceptionConverter.php line 77 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:77)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:34)"} []
[2025-06-24T09:33:12.598633+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-24T09:33:12.599320+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-24T09:33:13.976416+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-24T09:33:13.984298+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-24T09:33:13.984365+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-24T09:33:13.984404+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-24T09:33:13.984419+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-24T09:33:13.984433+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-24T09:33:13.984446+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-24T09:33:13.984463+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-24T09:33:14.008962+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-24T09:33:14.016128+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-24T09:33:14.021075+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in the driver: SQLSTATE[08006] [7] could not translate host name "db" to address: Temporary failure in name resolution" at ExceptionConverter.php line 77 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:77)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:34)"} []
[2025-06-24T09:33:14.099409+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-24T09:33:14.100108+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-24T09:33:16.877464+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-24T09:33:16.887085+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-24T09:33:16.887161+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-24T09:33:16.887201+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-24T09:33:16.887216+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-24T09:33:16.887231+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-24T09:33:16.887244+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-24T09:33:16.887262+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-24T09:33:16.915131+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-24T09:33:16.922638+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-24T09:33:16.927509+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in the driver: SQLSTATE[08006] [7] could not translate host name "db" to address: Temporary failure in name resolution" at ExceptionConverter.php line 77 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:77)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:34)"} []
[2025-06-24T09:33:17.006857+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-24T09:33:17.007558+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-24T09:34:47.940210+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-24T09:34:47.944439+00:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred in the driver: SQLSTATE[08006] [7] could not translate host name "db" to address: Temporary failure in name resolution" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:77)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:34)","command":"doctrine:migrations:migrate","message":"An exception occurred in the driver: SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution"} []
[2025-06-24T09:34:47.944920+00:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "7" {"command":"doctrine:migrations:migrate","code":7} []
[2025-06-24T09:35:52.425472+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-24T09:35:52.433282+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-24T09:35:52.433352+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-24T09:35:52.433380+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-24T09:35:52.433400+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-24T09:35:52.433435+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-24T09:35:52.433461+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-24T09:35:52.433478+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-24T09:35:52.459088+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-24T09:35:52.466955+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-24T09:35:52.488815+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-24T09:35:52.493442+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\TableNotFoundException: "An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation "hotel" does not exist LINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0                                                                ^" at ExceptionConverter.php line 71 {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableNotFoundException(code: 7): An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:71)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 42P01): SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Connection.php:71)"} []
[2025-06-24T09:35:52.562135+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-24T09:35:52.562852+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-24T09:35:52.619068+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-27T09:14:42.752637+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-27T09:14:42.814822+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-27T09:14:42.814943+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-27T09:14:42.814989+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-27T09:14:42.815024+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-27T09:14:42.815057+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-27T09:14:42.815084+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-27T09:14:42.815120+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-27T09:14:42.895716+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-27T09:14:42.930440+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-27T09:14:42.973681+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-27T09:14:42.993318+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\TableNotFoundException: "An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation "hotel" does not exist LINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0                                                                ^" at ExceptionConverter.php line 71 {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableNotFoundException(code: 7): An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:71)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 42P01): SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Connection.php:71)"} []
[2025-06-27T09:14:43.165686+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-27T09:14:43.167838+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-27T09:14:43.258077+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-27T09:26:48.553808+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-27T09:26:48.584790+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-27T09:26:48.584893+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-27T09:26:48.584932+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-27T09:26:48.584958+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-27T09:26:48.584983+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-27T09:26:48.585003+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-27T09:26:48.585030+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-27T09:26:48.650374+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-27T09:26:48.671677+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-27T09:26:48.703610+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-27T09:26:48.712258+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\TableNotFoundException: "An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation "hotel" does not exist LINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0                                                                ^" at ExceptionConverter.php line 71 {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableNotFoundException(code: 7): An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:71)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 42P01): SQLSTATE[42P01]: Undefined table: 7 ERROR:  relation \"hotel\" does not exist\nLINE 1: ...description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0\n                                                               ^ at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Connection.php:71)"} []
[2025-06-27T09:26:48.809658+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-27T09:26:48.810851+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-27T09:26:48.892194+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-27T09:27:11.762662+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-27T09:27:11.775201+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-27T09:27:11.779756+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-27T09:27:11.787510+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-27T09:27:11.787905+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-27T09:27:13.321000+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-06-27T09:27:13.323349+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-27T09:27:13.323884+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ma_base'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ma_base'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-06-27T09:27:13.327157+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-27T09:27:13.327619+00:00] doctrine.DEBUG: Executing query: SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-06-27T09:27:13.335761+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-06-27T09:27:13.338139+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-06-27T09:27:13.340106+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-06-27T09:27:13.344089+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-06-27T09:27:13.346111+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-27T09:27:13.356024+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-27T09:27:13.365048+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-27T09:27:13.378149+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-06-27T09:27:13.409559+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-27T09:27:13.414204+00:00] deprecation.INFO: User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-27T09:27:13.415023+00:00] deprecation.INFO: User Deprecated: Passing $sequence as a Sequence object to Doctrine\DBAL\Platforms\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Passing $sequence as a Sequence object to Doctrine\\DBAL\\Platforms\\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-27T09:27:13.418587+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-27T09:27:13.418822+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-27T09:27:13.419262+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-27T09:27:25.803979+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-27T09:27:25.821296+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-27T09:27:26.593595+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-27T09:27:26.595322+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-27T09:27:26.614341+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-27T09:27:26.619328+00:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version))"} []
[2025-06-27T09:27:26.629387+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-27T09:27:26.630554+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-27T09:27:26.631034+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-27T09:27:26.638494+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-06-27T09:27:26.641257+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE acheter_produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE acheter_produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:27:26.642343+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE biome_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE biome_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:27:26.642989+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:27:26.643674+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE "commande_id_seq" INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE \"commande_id_seq\" INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:27:26.644235+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE date_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE date_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:27:26.644771+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE dinosaure_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE dinosaure_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:27:26.645499+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE enclos_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE enclos_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:27:26.646217+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE format_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE format_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:27:26.647034+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE format_chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE format_chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:27:26.647695+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE horaire_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE horaire_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:27:26.648373+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:27:26.648787+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE jour_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE jour_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:27:26.649106+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE louer_hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE louer_hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:27:26.649404+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE payer_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE payer_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:27:26.649883+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:27:26.650271+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE remboursement_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE remboursement_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:27:26.650728+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE restaurant_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE restaurant_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:27:26.651427+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE "user_id_seq" INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE \"user_id_seq\" INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:27:26.651985+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE acheter_produit (id INT NOT NULL, commande_id INT DEFAULT NULL, produit_id INT DEFAULT NULL, quantite INT NOT NULL, prix DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE acheter_produit (id INT NOT NULL, commande_id INT DEFAULT NULL, produit_id INT DEFAULT NULL, quantite INT NOT NULL, prix DOUBLE PRECISION NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:27:26.656464+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_A704F21082EA2E54 ON acheter_produit (commande_id) {"sql":"    CREATE INDEX IDX_A704F21082EA2E54 ON acheter_produit (commande_id)"} []
[2025-06-27T09:27:26.658851+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_A704F210F347EFB ON acheter_produit (produit_id) {"sql":"    CREATE INDEX IDX_A704F210F347EFB ON acheter_produit (produit_id)"} []
[2025-06-27T09:27:26.660817+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE administrateur (id INT NOT NULL, admin_level INT NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE administrateur (id INT NOT NULL, admin_level INT NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:27:26.663056+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE biome (id INT NOT NULL, libelle_biome VARCHAR(255) NOT NULL, description_biome VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE biome (id INT NOT NULL, libelle_biome VARCHAR(255) NOT NULL, description_biome VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:27:26.666807+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE chambre (id INT NOT NULL, hotel_id INT NOT NULL, format_chambre_id INT NOT NULL, numero_chambre VARCHAR(255) NOT NULL, etage_chambre VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE chambre (id INT NOT NULL, hotel_id INT NOT NULL, format_chambre_id INT NOT NULL, numero_chambre VARCHAR(255) NOT NULL, etage_chambre VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:27:26.670951+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C509E4FF3243BB18 ON chambre (hotel_id) {"sql":"    CREATE INDEX IDX_C509E4FF3243BB18 ON chambre (hotel_id)"} []
[2025-06-27T09:27:26.673041+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C509E4FF589AE8D9 ON chambre (format_chambre_id) {"sql":"    CREATE INDEX IDX_C509E4FF589AE8D9 ON chambre (format_chambre_id)"} []
[2025-06-27T09:27:26.674853+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE client (id INT NOT NULL, adresse_postal VARCHAR(255) NOT NULL, code_postal INT NOT NULL, otp VARCHAR(6) DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE client (id INT NOT NULL, adresse_postal VARCHAR(255) NOT NULL, code_postal INT NOT NULL, otp VARCHAR(6) DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:27:26.677473+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE "commande" (id INT NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, status VARCHAR(255) NOT NULL, total DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE \"commande\" (id INT NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, status VARCHAR(255) NOT NULL, total DOUBLE PRECISION NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:27:26.679795+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN "commande".created_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN \"commande\".created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-27T09:27:26.680369+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE date (id INT NOT NULL, date TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE date (id INT NOT NULL, date TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:27:26.682784+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE dinosaure (id INT NOT NULL, enclos_id INT NOT NULL, image_dinosaure VARCHAR(255) NOT NULL, libelle_dinosaure VARCHAR(255) NOT NULL, regime_dinosaure VARCHAR(255) NOT NULL, ere_dinosaure VARCHAR(255) NOT NULL, description_dinosaure VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE dinosaure (id INT NOT NULL, enclos_id INT NOT NULL, image_dinosaure VARCHAR(255) NOT NULL, libelle_dinosaure VARCHAR(255) NOT NULL, regime_dinosaure VARCHAR(255) NOT NULL, ere_dinosaure VARCHAR(255) NOT NULL, description_dinosaure VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:27:26.686767+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_450ADBC0B1C0859 ON dinosaure (enclos_id) {"sql":"    CREATE INDEX IDX_450ADBC0B1C0859 ON dinosaure (enclos_id)"} []
[2025-06-27T09:27:26.688739+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE enclos (id INT NOT NULL, biome_id INT NOT NULL, libelle_enclos VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE enclos (id INT NOT NULL, biome_id INT NOT NULL, libelle_enclos VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:27:26.691416+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_8CCECB21E43A64F9 ON enclos (biome_id) {"sql":"    CREATE INDEX IDX_8CCECB21E43A64F9 ON enclos (biome_id)"} []
[2025-06-27T09:27:26.693662+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE format_billet (id INT NOT NULL, libelle_billet VARCHAR(255) NOT NULL, image_billet VARCHAR(255) NOT NULL, description_billet VARCHAR(1000) NOT NULL, prix_billet INT NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE format_billet (id INT NOT NULL, libelle_billet VARCHAR(255) NOT NULL, image_billet VARCHAR(255) NOT NULL, description_billet VARCHAR(1000) NOT NULL, prix_billet INT NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:27:26.698410+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE format_chambre (id INT NOT NULL, libelle_format_chambre VARCHAR(255) NOT NULL, prix_format_chambre INT NOT NULL, description_format_billet VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE format_chambre (id INT NOT NULL, libelle_format_chambre VARCHAR(255) NOT NULL, prix_format_chambre INT NOT NULL, description_format_billet VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:27:26.703109+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE horaire (id INT NOT NULL, ouverture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fermeture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE horaire (id INT NOT NULL, ouverture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fermeture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:27:26.705265+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE hotel (id INT NOT NULL, biome_id INT DEFAULT NULL, libelle_hotel VARCHAR(255) NOT NULL, image_hotel VARCHAR(255) NOT NULL, description_hotel VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE hotel (id INT NOT NULL, biome_id INT DEFAULT NULL, libelle_hotel VARCHAR(255) NOT NULL, image_hotel VARCHAR(255) NOT NULL, description_hotel VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:27:26.710415+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_3535ED9E43A64F9 ON hotel (biome_id) {"sql":"    CREATE INDEX IDX_3535ED9E43A64F9 ON hotel (biome_id)"} []
[2025-06-27T09:27:26.712166+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE jour (id INT NOT NULL, libelle_jour VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE jour (id INT NOT NULL, libelle_jour VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:27:26.714277+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE louer_hotel (id INT NOT NULL, user_id INT NOT NULL, chambre_id INT NOT NULL, date_id INT NOT NULL, note INT NOT NULL, debut_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE louer_hotel (id INT NOT NULL, user_id INT NOT NULL, chambre_id INT NOT NULL, date_id INT NOT NULL, note INT NOT NULL, debut_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:27:26.716614+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_70C4104FA76ED395 ON louer_hotel (user_id) {"sql":"    CREATE INDEX IDX_70C4104FA76ED395 ON louer_hotel (user_id)"} []
[2025-06-27T09:27:26.718516+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_70C4104F9B177F54 ON louer_hotel (chambre_id) {"sql":"    CREATE INDEX IDX_70C4104F9B177F54 ON louer_hotel (chambre_id)"} []
[2025-06-27T09:27:26.720699+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_70C4104FB897366B ON louer_hotel (date_id) {"sql":"    CREATE INDEX IDX_70C4104FB897366B ON louer_hotel (date_id)"} []
[2025-06-27T09:27:26.722826+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE ouverture_restaurant (restaurant_id INT NOT NULL, jour_id INT NOT NULL, horaire_id INT NOT NULL, PRIMARY KEY(restaurant_id, jour_id, horaire_id)) {"sql":"    CREATE TABLE ouverture_restaurant (restaurant_id INT NOT NULL, jour_id INT NOT NULL, horaire_id INT NOT NULL, PRIMARY KEY(restaurant_id, jour_id, horaire_id))"} []
[2025-06-27T09:27:26.725110+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_697FD193B1E7706E ON ouverture_restaurant (restaurant_id) {"sql":"    CREATE INDEX IDX_697FD193B1E7706E ON ouverture_restaurant (restaurant_id)"} []
[2025-06-27T09:27:26.726822+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_697FD193220C6AD0 ON ouverture_restaurant (jour_id) {"sql":"    CREATE INDEX IDX_697FD193220C6AD0 ON ouverture_restaurant (jour_id)"} []
[2025-06-27T09:27:26.728542+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_697FD19358C54515 ON ouverture_restaurant (horaire_id) {"sql":"    CREATE INDEX IDX_697FD19358C54515 ON ouverture_restaurant (horaire_id)"} []
[2025-06-27T09:27:26.730041+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE payer_billet (id INT NOT NULL, user_id INT NOT NULL, billet_id INT NOT NULL, date_id INT NOT NULL, debut_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE payer_billet (id INT NOT NULL, user_id INT NOT NULL, billet_id INT NOT NULL, date_id INT NOT NULL, debut_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:27:26.734416+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_4744803CA76ED395 ON payer_billet (user_id) {"sql":"    CREATE INDEX IDX_4744803CA76ED395 ON payer_billet (user_id)"} []
[2025-06-27T09:27:26.736362+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_4744803C44973C78 ON payer_billet (billet_id) {"sql":"    CREATE INDEX IDX_4744803C44973C78 ON payer_billet (billet_id)"} []
[2025-06-27T09:27:26.738585+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_4744803CB897366B ON payer_billet (date_id) {"sql":"    CREATE INDEX IDX_4744803CB897366B ON payer_billet (date_id)"} []
[2025-06-27T09:27:26.740799+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE produit (id INT NOT NULL, libelle_produit VARCHAR(255) NOT NULL, image_produit VARCHAR(255) NOT NULL, description_produit VARCHAR(1000) NOT NULL, stock INT NOT NULL, disponible_achat BOOLEAN NOT NULL, prix_produit DOUBLE PRECISION NOT NULL, slug VARCHAR(255) DEFAULT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE produit (id INT NOT NULL, libelle_produit VARCHAR(255) NOT NULL, image_produit VARCHAR(255) NOT NULL, description_produit VARCHAR(1000) NOT NULL, stock INT NOT NULL, disponible_achat BOOLEAN NOT NULL, prix_produit DOUBLE PRECISION NOT NULL, slug VARCHAR(255) DEFAULT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:27:26.745382+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN produit.created_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN produit.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-27T09:27:26.745783+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE remboursement (id INT NOT NULL, client_id INT NOT NULL, billet_id INT NOT NULL, date_demande TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, statut VARCHAR(255) NOT NULL, motif VARCHAR(1500) NOT NULL, montant DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE remboursement (id INT NOT NULL, client_id INT NOT NULL, billet_id INT NOT NULL, date_demande TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, statut VARCHAR(255) NOT NULL, motif VARCHAR(1500) NOT NULL, montant DOUBLE PRECISION NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:27:26.749821+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C0C0D9EF19EB6921 ON remboursement (client_id) {"sql":"    CREATE INDEX IDX_C0C0D9EF19EB6921 ON remboursement (client_id)"} []
[2025-06-27T09:27:26.751627+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C0C0D9EF44973C78 ON remboursement (billet_id) {"sql":"    CREATE INDEX IDX_C0C0D9EF44973C78 ON remboursement (billet_id)"} []
[2025-06-27T09:27:26.753719+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE remboursement_billet (remboursement_id INT NOT NULL, payer_billet_id INT NOT NULL, PRIMARY KEY(remboursement_id, payer_billet_id)) {"sql":"    CREATE TABLE remboursement_billet (remboursement_id INT NOT NULL, payer_billet_id INT NOT NULL, PRIMARY KEY(remboursement_id, payer_billet_id))"} []
[2025-06-27T09:27:26.755834+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_B9B130B1F61EE8B ON remboursement_billet (remboursement_id) {"sql":"    CREATE INDEX IDX_B9B130B1F61EE8B ON remboursement_billet (remboursement_id)"} []
[2025-06-27T09:27:26.758171+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_B9B130B1102C441 ON remboursement_billet (payer_billet_id) {"sql":"    CREATE INDEX IDX_B9B130B1102C441 ON remboursement_billet (payer_billet_id)"} []
[2025-06-27T09:27:26.760730+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE remboursement_hotel (remboursement_id INT NOT NULL, louer_hotel_id INT NOT NULL, PRIMARY KEY(remboursement_id, louer_hotel_id)) {"sql":"    CREATE TABLE remboursement_hotel (remboursement_id INT NOT NULL, louer_hotel_id INT NOT NULL, PRIMARY KEY(remboursement_id, louer_hotel_id))"} []
[2025-06-27T09:27:26.762848+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_D7E7E7CF61EE8B ON remboursement_hotel (remboursement_id) {"sql":"    CREATE INDEX IDX_D7E7E7CF61EE8B ON remboursement_hotel (remboursement_id)"} []
[2025-06-27T09:27:26.764660+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_D7E7E7CCB4C1B45 ON remboursement_hotel (louer_hotel_id) {"sql":"    CREATE INDEX IDX_D7E7E7CCB4C1B45 ON remboursement_hotel (louer_hotel_id)"} []
[2025-06-27T09:27:26.766641+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE reserver_restaurant (client_id INT NOT NULL, restaurant_id INT NOT NULL, date_id INT NOT NULL, date_reservation TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, present BOOLEAN NOT NULL, nb_personne INT NOT NULL, PRIMARY KEY(client_id, restaurant_id, date_id)) {"sql":"    CREATE TABLE reserver_restaurant (client_id INT NOT NULL, restaurant_id INT NOT NULL, date_id INT NOT NULL, date_reservation TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, present BOOLEAN NOT NULL, nb_personne INT NOT NULL, PRIMARY KEY(client_id, restaurant_id, date_id))"} []
[2025-06-27T09:27:26.769279+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_25F6B43A19EB6921 ON reserver_restaurant (client_id) {"sql":"    CREATE INDEX IDX_25F6B43A19EB6921 ON reserver_restaurant (client_id)"} []
[2025-06-27T09:27:26.771203+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_25F6B43AB1E7706E ON reserver_restaurant (restaurant_id) {"sql":"    CREATE INDEX IDX_25F6B43AB1E7706E ON reserver_restaurant (restaurant_id)"} []
[2025-06-27T09:27:26.773015+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_25F6B43AB897366B ON reserver_restaurant (date_id) {"sql":"    CREATE INDEX IDX_25F6B43AB897366B ON reserver_restaurant (date_id)"} []
[2025-06-27T09:27:26.774813+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE restaurant (id INT NOT NULL, biome_id INT NOT NULL, libelle_restaurant VARCHAR(255) NOT NULL, image_restaurant VARCHAR(255) NOT NULL, nb_table INT NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE restaurant (id INT NOT NULL, biome_id INT NOT NULL, libelle_restaurant VARCHAR(255) NOT NULL, image_restaurant VARCHAR(255) NOT NULL, nb_table INT NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:27:26.779880+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_EB95123FE43A64F9 ON restaurant (biome_id) {"sql":"    CREATE INDEX IDX_EB95123FE43A64F9 ON restaurant (biome_id)"} []
[2025-06-27T09:27:26.781847+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE "user" (id INT NOT NULL, email VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, numero_telephone VARCHAR(255) NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, roles JSON NOT NULL, is_verified BOOLEAN NOT NULL, reset_token VARCHAR(255) DEFAULT NULL, reset_token_expiration TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, type VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE \"user\" (id INT NOT NULL, email VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, numero_telephone VARCHAR(255) NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, roles JSON NOT NULL, is_verified BOOLEAN NOT NULL, reset_token VARCHAR(255) DEFAULT NULL, reset_token_expiration TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, type VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:27:26.786670+00:00] doctrine.DEBUG: Executing query:     CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON "user" (email) {"sql":"    CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON \"user\" (email)"} []
[2025-06-27T09:27:26.788816+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:27:26.793978+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name) {"sql":"    CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name)"} []
[2025-06-27T09:27:26.795895+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at) {"sql":"    CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at)"} []
[2025-06-27T09:27:26.797859+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at) {"sql":"    CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at)"} []
[2025-06-27T09:27:26.799680+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-27T09:27:26.799989+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-27T09:27:26.800199+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-27T09:27:26.800313+00:00] doctrine.DEBUG: Executing query:     CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$         BEGIN             PERFORM pg_notify('messenger_messages', NEW.queue_name::text);             RETURN NEW;         END;     $$ LANGUAGE plpgsql; {"sql":"    CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$\n        BEGIN\n            PERFORM pg_notify('messenger_messages', NEW.queue_name::text);\n            RETURN NEW;\n        END;\n    $$ LANGUAGE plpgsql;"} []
[2025-06-27T09:27:26.801673+00:00] doctrine.DEBUG: Executing query:     DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages; {"sql":"    DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages;"} []
[2025-06-27T09:27:26.801972+00:00] doctrine.DEBUG: Executing query:     CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages(); {"sql":"    CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages();"} []
[2025-06-27T09:27:26.802499+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F21082EA2E54 FOREIGN KEY (commande_id) REFERENCES "commande" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F21082EA2E54 FOREIGN KEY (commande_id) REFERENCES \"commande\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.803819+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F210F347EFB FOREIGN KEY (produit_id) REFERENCES produit (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F210F347EFB FOREIGN KEY (produit_id) REFERENCES produit (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.804652+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE administrateur ADD CONSTRAINT FK_32EB52E8BF396750 FOREIGN KEY (id) REFERENCES "user" (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE administrateur ADD CONSTRAINT FK_32EB52E8BF396750 FOREIGN KEY (id) REFERENCES \"user\" (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.805456+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF3243BB18 FOREIGN KEY (hotel_id) REFERENCES hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF3243BB18 FOREIGN KEY (hotel_id) REFERENCES hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.806374+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF589AE8D9 FOREIGN KEY (format_chambre_id) REFERENCES format_chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF589AE8D9 FOREIGN KEY (format_chambre_id) REFERENCES format_chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.807222+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE client ADD CONSTRAINT FK_C7440455BF396750 FOREIGN KEY (id) REFERENCES "user" (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE client ADD CONSTRAINT FK_C7440455BF396750 FOREIGN KEY (id) REFERENCES \"user\" (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.808321+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE dinosaure ADD CONSTRAINT FK_450ADBC0B1C0859 FOREIGN KEY (enclos_id) REFERENCES enclos (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE dinosaure ADD CONSTRAINT FK_450ADBC0B1C0859 FOREIGN KEY (enclos_id) REFERENCES enclos (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.809215+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE enclos ADD CONSTRAINT FK_8CCECB21E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE enclos ADD CONSTRAINT FK_8CCECB21E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.810022+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE hotel ADD CONSTRAINT FK_3535ED9E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE hotel ADD CONSTRAINT FK_3535ED9E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.810694+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FA76ED395 FOREIGN KEY (user_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FA76ED395 FOREIGN KEY (user_id) REFERENCES \"user\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.811804+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104F9B177F54 FOREIGN KEY (chambre_id) REFERENCES chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104F9B177F54 FOREIGN KEY (chambre_id) REFERENCES chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.812630+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.813547+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193B1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193B1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.814605+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193220C6AD0 FOREIGN KEY (jour_id) REFERENCES jour (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193220C6AD0 FOREIGN KEY (jour_id) REFERENCES jour (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.815335+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD19358C54515 FOREIGN KEY (horaire_id) REFERENCES horaire (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD19358C54515 FOREIGN KEY (horaire_id) REFERENCES horaire (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.816348+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CA76ED395 FOREIGN KEY (user_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CA76ED395 FOREIGN KEY (user_id) REFERENCES \"user\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.817230+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803C44973C78 FOREIGN KEY (billet_id) REFERENCES format_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803C44973C78 FOREIGN KEY (billet_id) REFERENCES format_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.818061+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.818771+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF19EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF19EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.819541+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF44973C78 FOREIGN KEY (billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF44973C78 FOREIGN KEY (billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.820255+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1F61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1F61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.821010+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1102C441 FOREIGN KEY (payer_billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1102C441 FOREIGN KEY (payer_billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.821646+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CF61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CF61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.822344+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CCB4C1B45 FOREIGN KEY (louer_hotel_id) REFERENCES louer_hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CCB4C1B45 FOREIGN KEY (louer_hotel_id) REFERENCES louer_hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.822989+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43A19EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43A19EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.823841+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.824468+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.825103+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE restaurant ADD CONSTRAINT FK_EB95123FE43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE restaurant ADD CONSTRAINT FK_EB95123FE43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:27:26.826303+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250618190555","2":"2025-06-27 09:27:26","3":187}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250618190555","2":"2025-06-27 09:27:26","3":187},"types":{"1":2,"2":2,"3":1}} []
[2025-06-27T09:27:26.827165+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-06-27T09:27:26.829122+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-06-27T09:27:26.829665+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE acheter_produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE acheter_produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:27:26.832051+00:00] doctrine.DEBUG: Rolling back transaction [] []
[2025-06-27T09:27:26.833863+00:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing a query: SQLSTATE[42P07]: Duplicate table: 7 ERROR:  relation "acheter_produit_id_seq" already exists" {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableExistsException(code: 7): An exception occurred while executing a query: SQLSTATE[42P07]: Duplicate table: 7 ERROR:  relation \"acheter_produit_id_seq\" already exists at /var/www/html/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:74)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[42P07]: Duplicate table: 7 ERROR:  relation \"acheter_produit_id_seq\" already exists at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:24)\n[previous exception] [object] (PDOException(code: 42P07): SQLSTATE[42P07]: Duplicate table: 7 ERROR:  relation \"acheter_produit_id_seq\" already exists at /var/www/html/vendor/doctrine/dbal/src/Driver/PDO/Connection.php:71)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing a query: SQLSTATE[42P07]: Duplicate table: 7 ERROR:  relation \"acheter_produit_id_seq\" already exists"} []
[2025-06-27T09:27:26.834679+00:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "7" {"command":"doctrine:migrations:migrate","code":7} []
[2025-06-27T09:27:26.841855+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-27T09:27:26.842309+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-27T09:27:26.842504+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-27T09:27:38.639904+00:00] console.CRITICAL: Error thrown while running command "'doctrine:database:remove'". Message: "Command "doctrine:database:remove" is not defined.  Did you mean one of these?     doctrine:database:create     doctrine:database:drop     messenger:failed:remove" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\CommandNotFoundException(code: 0): Command \"doctrine:database:remove\" is not defined.\n\nDid you mean one of these?\n    doctrine:database:create\n    doctrine:database:drop\n    messenger:failed:remove at /var/www/html/vendor/symfony/console/Application.php:737)","command":"'doctrine:database:remove'","message":"Command \"doctrine:database:remove\" is not defined.\n\nDid you mean one of these?\n    doctrine:database:create\n    doctrine:database:drop\n    messenger:failed:remove"} []
[2025-06-27T09:27:42.625100+00:00] console.DEBUG: Command "doctrine:database:drop" exited with code "2" {"command":"doctrine:database:drop","code":2} []
[2025-06-27T09:27:46.552253+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"}} []
[2025-06-27T09:27:46.568603+00:00] doctrine.DEBUG: Executing statement: DROP DATABASE "ma_base" {"sql":"DROP DATABASE \"ma_base\""} []
[2025-06-27T09:27:46.596574+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-27T09:27:50.348450+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"}} []
[2025-06-27T09:27:50.361135+00:00] doctrine.DEBUG: Executing statement: CREATE DATABASE "ma_base" {"sql":"CREATE DATABASE \"ma_base\""} []
[2025-06-27T09:27:50.399396+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-27T09:28:46.624983+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-27T09:28:46.639725+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-27T09:28:46.641482+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-27T09:28:46.645690+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-27T09:28:46.646033+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-27T09:28:46.648022+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-06-27T09:28:46.648686+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-27T09:28:46.648852+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ma_base'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ma_base'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-06-27T09:28:46.649886+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-27T09:28:46.650132+00:00] doctrine.DEBUG: Executing query: SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-06-27T09:28:46.654602+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-06-27T09:28:46.656234+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-06-27T09:28:46.657534+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-06-27T09:28:46.659251+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-06-27T09:28:46.660247+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-27T09:28:46.662862+00:00] deprecation.INFO: User Deprecated: Providing the property $uniqueConstraints on Doctrine\ORM\Mapping\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\ORM\Mapping\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Providing the property $uniqueConstraints on Doctrine\\ORM\\Mapping\\Table does not have any effect and will be removed in Doctrine ORM 4.0. Please use the Doctrine\\ORM\\Mapping\\UniqueConstraint attribute instead. (Table.php:36 called by LouerHotel.php:12, https://github.com/doctrine/orm/pull/11357, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-27T09:28:46.668176+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-27T09:28:46.675445+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-06-27T09:28:46.688201+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-27T09:28:46.689959+00:00] deprecation.INFO: User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-27T09:28:46.690423+00:00] deprecation.INFO: User Deprecated: Passing $sequence as a Sequence object to Doctrine\DBAL\Platforms\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Passing $sequence as a Sequence object to Doctrine\\DBAL\\Platforms\\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-27T09:28:46.692207+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-27T09:28:46.692354+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-27T09:28:46.692727+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-27T09:28:52.505068+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-27T09:28:52.518989+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-27T09:28:53.190570+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-06-27T09:28:53.192394+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"ma_base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"ma_base"},"types":{"1":2}} []
[2025-06-27T09:28:53.213815+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-27T09:28:53.219239+00:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version))"} []
[2025-06-27T09:28:53.230666+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-27T09:28:53.231735+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-27T09:28:53.232151+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-06-27T09:28:53.237543+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-06-27T09:28:53.240460+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE acheter_produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE acheter_produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:28:53.242119+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE biome_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE biome_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:28:53.243182+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:28:53.244231+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE "commande_id_seq" INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE \"commande_id_seq\" INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:28:53.245102+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE date_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE date_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:28:53.246425+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE dinosaure_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE dinosaure_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:28:53.247115+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE enclos_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE enclos_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:28:53.247500+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE format_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE format_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:28:53.248028+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE format_chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE format_chambre_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:28:53.248601+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE horaire_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE horaire_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:28:53.249306+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:28:53.249878+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE jour_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE jour_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:28:53.250272+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE louer_hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE louer_hotel_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:28:53.250635+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE payer_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE payer_billet_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:28:53.251022+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE produit_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:28:53.251400+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE remboursement_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE remboursement_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:28:53.251743+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE restaurant_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE restaurant_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:28:53.252263+00:00] doctrine.DEBUG: Executing query:     CREATE SEQUENCE "user_id_seq" INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"    CREATE SEQUENCE \"user_id_seq\" INCREMENT BY 1 MINVALUE 1 START 1"} []
[2025-06-27T09:28:53.252766+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE acheter_produit (id INT NOT NULL, commande_id INT DEFAULT NULL, produit_id INT DEFAULT NULL, quantite INT NOT NULL, prix DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE acheter_produit (id INT NOT NULL, commande_id INT DEFAULT NULL, produit_id INT DEFAULT NULL, quantite INT NOT NULL, prix DOUBLE PRECISION NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:28:53.255747+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_A704F21082EA2E54 ON acheter_produit (commande_id) {"sql":"    CREATE INDEX IDX_A704F21082EA2E54 ON acheter_produit (commande_id)"} []
[2025-06-27T09:28:53.258321+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_A704F210F347EFB ON acheter_produit (produit_id) {"sql":"    CREATE INDEX IDX_A704F210F347EFB ON acheter_produit (produit_id)"} []
[2025-06-27T09:28:53.260551+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE administrateur (id INT NOT NULL, admin_level INT NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE administrateur (id INT NOT NULL, admin_level INT NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:28:53.263103+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE biome (id INT NOT NULL, libelle_biome VARCHAR(255) NOT NULL, description_biome VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE biome (id INT NOT NULL, libelle_biome VARCHAR(255) NOT NULL, description_biome VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:28:53.267733+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE chambre (id INT NOT NULL, hotel_id INT NOT NULL, format_chambre_id INT NOT NULL, numero_chambre VARCHAR(255) NOT NULL, etage_chambre VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE chambre (id INT NOT NULL, hotel_id INT NOT NULL, format_chambre_id INT NOT NULL, numero_chambre VARCHAR(255) NOT NULL, etage_chambre VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:28:53.271639+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C509E4FF3243BB18 ON chambre (hotel_id) {"sql":"    CREATE INDEX IDX_C509E4FF3243BB18 ON chambre (hotel_id)"} []
[2025-06-27T09:28:53.273735+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C509E4FF589AE8D9 ON chambre (format_chambre_id) {"sql":"    CREATE INDEX IDX_C509E4FF589AE8D9 ON chambre (format_chambre_id)"} []
[2025-06-27T09:28:53.275957+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE client (id INT NOT NULL, adresse_postal VARCHAR(255) NOT NULL, code_postal INT NOT NULL, otp VARCHAR(6) DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE client (id INT NOT NULL, adresse_postal VARCHAR(255) NOT NULL, code_postal INT NOT NULL, otp VARCHAR(6) DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:28:53.278765+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE "commande" (id INT NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, status VARCHAR(255) NOT NULL, total DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE \"commande\" (id INT NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, status VARCHAR(255) NOT NULL, total DOUBLE PRECISION NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:28:53.281067+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN "commande".created_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN \"commande\".created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-27T09:28:53.281435+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE date (id INT NOT NULL, date TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE date (id INT NOT NULL, date TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:28:53.283901+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE dinosaure (id INT NOT NULL, enclos_id INT NOT NULL, image_dinosaure VARCHAR(255) NOT NULL, libelle_dinosaure VARCHAR(255) NOT NULL, regime_dinosaure VARCHAR(255) NOT NULL, ere_dinosaure VARCHAR(255) NOT NULL, description_dinosaure VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE dinosaure (id INT NOT NULL, enclos_id INT NOT NULL, image_dinosaure VARCHAR(255) NOT NULL, libelle_dinosaure VARCHAR(255) NOT NULL, regime_dinosaure VARCHAR(255) NOT NULL, ere_dinosaure VARCHAR(255) NOT NULL, description_dinosaure VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:28:53.288234+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_450ADBC0B1C0859 ON dinosaure (enclos_id) {"sql":"    CREATE INDEX IDX_450ADBC0B1C0859 ON dinosaure (enclos_id)"} []
[2025-06-27T09:28:53.290110+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE enclos (id INT NOT NULL, biome_id INT NOT NULL, libelle_enclos VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE enclos (id INT NOT NULL, biome_id INT NOT NULL, libelle_enclos VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:28:53.292565+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_8CCECB21E43A64F9 ON enclos (biome_id) {"sql":"    CREATE INDEX IDX_8CCECB21E43A64F9 ON enclos (biome_id)"} []
[2025-06-27T09:28:53.294615+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE format_billet (id INT NOT NULL, libelle_billet VARCHAR(255) NOT NULL, image_billet VARCHAR(255) NOT NULL, description_billet VARCHAR(1000) NOT NULL, prix_billet INT NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE format_billet (id INT NOT NULL, libelle_billet VARCHAR(255) NOT NULL, image_billet VARCHAR(255) NOT NULL, description_billet VARCHAR(1000) NOT NULL, prix_billet INT NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:28:53.299540+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE format_chambre (id INT NOT NULL, libelle_format_chambre VARCHAR(255) NOT NULL, prix_format_chambre INT NOT NULL, description_format_billet VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE format_chambre (id INT NOT NULL, libelle_format_chambre VARCHAR(255) NOT NULL, prix_format_chambre INT NOT NULL, description_format_billet VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:28:53.304963+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE horaire (id INT NOT NULL, ouverture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fermeture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE horaire (id INT NOT NULL, ouverture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fermeture TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:28:53.307614+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE hotel (id INT NOT NULL, biome_id INT DEFAULT NULL, libelle_hotel VARCHAR(255) NOT NULL, image_hotel VARCHAR(255) NOT NULL, description_hotel VARCHAR(1000) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE hotel (id INT NOT NULL, biome_id INT DEFAULT NULL, libelle_hotel VARCHAR(255) NOT NULL, image_hotel VARCHAR(255) NOT NULL, description_hotel VARCHAR(1000) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:28:53.312966+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_3535ED9E43A64F9 ON hotel (biome_id) {"sql":"    CREATE INDEX IDX_3535ED9E43A64F9 ON hotel (biome_id)"} []
[2025-06-27T09:28:53.315585+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE jour (id INT NOT NULL, libelle_jour VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE jour (id INT NOT NULL, libelle_jour VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:28:53.318107+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE louer_hotel (id INT NOT NULL, user_id INT NOT NULL, chambre_id INT NOT NULL, date_id INT NOT NULL, note INT NOT NULL, debut_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE louer_hotel (id INT NOT NULL, user_id INT NOT NULL, chambre_id INT NOT NULL, date_id INT NOT NULL, note INT NOT NULL, debut_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_location TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:28:53.320609+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_70C4104FA76ED395 ON louer_hotel (user_id) {"sql":"    CREATE INDEX IDX_70C4104FA76ED395 ON louer_hotel (user_id)"} []
[2025-06-27T09:28:53.322882+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_70C4104F9B177F54 ON louer_hotel (chambre_id) {"sql":"    CREATE INDEX IDX_70C4104F9B177F54 ON louer_hotel (chambre_id)"} []
[2025-06-27T09:28:53.324816+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_70C4104FB897366B ON louer_hotel (date_id) {"sql":"    CREATE INDEX IDX_70C4104FB897366B ON louer_hotel (date_id)"} []
[2025-06-27T09:28:53.326944+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE ouverture_restaurant (restaurant_id INT NOT NULL, jour_id INT NOT NULL, horaire_id INT NOT NULL, PRIMARY KEY(restaurant_id, jour_id, horaire_id)) {"sql":"    CREATE TABLE ouverture_restaurant (restaurant_id INT NOT NULL, jour_id INT NOT NULL, horaire_id INT NOT NULL, PRIMARY KEY(restaurant_id, jour_id, horaire_id))"} []
[2025-06-27T09:28:53.329572+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_697FD193B1E7706E ON ouverture_restaurant (restaurant_id) {"sql":"    CREATE INDEX IDX_697FD193B1E7706E ON ouverture_restaurant (restaurant_id)"} []
[2025-06-27T09:28:53.331977+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_697FD193220C6AD0 ON ouverture_restaurant (jour_id) {"sql":"    CREATE INDEX IDX_697FD193220C6AD0 ON ouverture_restaurant (jour_id)"} []
[2025-06-27T09:28:53.333985+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_697FD19358C54515 ON ouverture_restaurant (horaire_id) {"sql":"    CREATE INDEX IDX_697FD19358C54515 ON ouverture_restaurant (horaire_id)"} []
[2025-06-27T09:28:53.335922+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE payer_billet (id INT NOT NULL, user_id INT NOT NULL, billet_id INT NOT NULL, date_id INT NOT NULL, debut_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE payer_billet (id INT NOT NULL, user_id INT NOT NULL, billet_id INT NOT NULL, date_id INT NOT NULL, debut_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, fin_billet TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:28:53.339907+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_4744803CA76ED395 ON payer_billet (user_id) {"sql":"    CREATE INDEX IDX_4744803CA76ED395 ON payer_billet (user_id)"} []
[2025-06-27T09:28:53.341896+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_4744803C44973C78 ON payer_billet (billet_id) {"sql":"    CREATE INDEX IDX_4744803C44973C78 ON payer_billet (billet_id)"} []
[2025-06-27T09:28:53.344021+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_4744803CB897366B ON payer_billet (date_id) {"sql":"    CREATE INDEX IDX_4744803CB897366B ON payer_billet (date_id)"} []
[2025-06-27T09:28:53.345888+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE produit (id INT NOT NULL, libelle_produit VARCHAR(255) NOT NULL, image_produit VARCHAR(255) NOT NULL, description_produit VARCHAR(1000) NOT NULL, stock INT NOT NULL, disponible_achat BOOLEAN NOT NULL, prix_produit DOUBLE PRECISION NOT NULL, slug VARCHAR(255) DEFAULT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE produit (id INT NOT NULL, libelle_produit VARCHAR(255) NOT NULL, image_produit VARCHAR(255) NOT NULL, description_produit VARCHAR(1000) NOT NULL, stock INT NOT NULL, disponible_achat BOOLEAN NOT NULL, prix_produit DOUBLE PRECISION NOT NULL, slug VARCHAR(255) DEFAULT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:28:53.350844+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN produit.created_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN produit.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-27T09:28:53.351256+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE remboursement (id INT NOT NULL, client_id INT NOT NULL, billet_id INT NOT NULL, date_demande TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, statut VARCHAR(255) NOT NULL, motif VARCHAR(1500) NOT NULL, montant DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE remboursement (id INT NOT NULL, client_id INT NOT NULL, billet_id INT NOT NULL, date_demande TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, statut VARCHAR(255) NOT NULL, motif VARCHAR(1500) NOT NULL, montant DOUBLE PRECISION NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:28:53.355945+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C0C0D9EF19EB6921 ON remboursement (client_id) {"sql":"    CREATE INDEX IDX_C0C0D9EF19EB6921 ON remboursement (client_id)"} []
[2025-06-27T09:28:53.358052+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_C0C0D9EF44973C78 ON remboursement (billet_id) {"sql":"    CREATE INDEX IDX_C0C0D9EF44973C78 ON remboursement (billet_id)"} []
[2025-06-27T09:28:53.359841+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE remboursement_billet (remboursement_id INT NOT NULL, payer_billet_id INT NOT NULL, PRIMARY KEY(remboursement_id, payer_billet_id)) {"sql":"    CREATE TABLE remboursement_billet (remboursement_id INT NOT NULL, payer_billet_id INT NOT NULL, PRIMARY KEY(remboursement_id, payer_billet_id))"} []
[2025-06-27T09:28:53.361962+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_B9B130B1F61EE8B ON remboursement_billet (remboursement_id) {"sql":"    CREATE INDEX IDX_B9B130B1F61EE8B ON remboursement_billet (remboursement_id)"} []
[2025-06-27T09:28:53.363742+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_B9B130B1102C441 ON remboursement_billet (payer_billet_id) {"sql":"    CREATE INDEX IDX_B9B130B1102C441 ON remboursement_billet (payer_billet_id)"} []
[2025-06-27T09:28:53.365845+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE remboursement_hotel (remboursement_id INT NOT NULL, louer_hotel_id INT NOT NULL, PRIMARY KEY(remboursement_id, louer_hotel_id)) {"sql":"    CREATE TABLE remboursement_hotel (remboursement_id INT NOT NULL, louer_hotel_id INT NOT NULL, PRIMARY KEY(remboursement_id, louer_hotel_id))"} []
[2025-06-27T09:28:53.368141+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_D7E7E7CF61EE8B ON remboursement_hotel (remboursement_id) {"sql":"    CREATE INDEX IDX_D7E7E7CF61EE8B ON remboursement_hotel (remboursement_id)"} []
[2025-06-27T09:28:53.369896+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_D7E7E7CCB4C1B45 ON remboursement_hotel (louer_hotel_id) {"sql":"    CREATE INDEX IDX_D7E7E7CCB4C1B45 ON remboursement_hotel (louer_hotel_id)"} []
[2025-06-27T09:28:53.371759+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE reserver_restaurant (client_id INT NOT NULL, restaurant_id INT NOT NULL, date_id INT NOT NULL, date_reservation TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, present BOOLEAN NOT NULL, nb_personne INT NOT NULL, PRIMARY KEY(client_id, restaurant_id, date_id)) {"sql":"    CREATE TABLE reserver_restaurant (client_id INT NOT NULL, restaurant_id INT NOT NULL, date_id INT NOT NULL, date_reservation TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, present BOOLEAN NOT NULL, nb_personne INT NOT NULL, PRIMARY KEY(client_id, restaurant_id, date_id))"} []
[2025-06-27T09:28:53.374225+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_25F6B43A19EB6921 ON reserver_restaurant (client_id) {"sql":"    CREATE INDEX IDX_25F6B43A19EB6921 ON reserver_restaurant (client_id)"} []
[2025-06-27T09:28:53.376320+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_25F6B43AB1E7706E ON reserver_restaurant (restaurant_id) {"sql":"    CREATE INDEX IDX_25F6B43AB1E7706E ON reserver_restaurant (restaurant_id)"} []
[2025-06-27T09:28:53.378318+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_25F6B43AB897366B ON reserver_restaurant (date_id) {"sql":"    CREATE INDEX IDX_25F6B43AB897366B ON reserver_restaurant (date_id)"} []
[2025-06-27T09:28:53.379998+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE restaurant (id INT NOT NULL, biome_id INT NOT NULL, libelle_restaurant VARCHAR(255) NOT NULL, image_restaurant VARCHAR(255) NOT NULL, nb_table INT NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE restaurant (id INT NOT NULL, biome_id INT NOT NULL, libelle_restaurant VARCHAR(255) NOT NULL, image_restaurant VARCHAR(255) NOT NULL, nb_table INT NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:28:53.384551+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_EB95123FE43A64F9 ON restaurant (biome_id) {"sql":"    CREATE INDEX IDX_EB95123FE43A64F9 ON restaurant (biome_id)"} []
[2025-06-27T09:28:53.386316+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE "user" (id INT NOT NULL, email VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, numero_telephone VARCHAR(255) NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, roles JSON NOT NULL, is_verified BOOLEAN NOT NULL, reset_token VARCHAR(255) DEFAULT NULL, reset_token_expiration TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, type VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE \"user\" (id INT NOT NULL, email VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, numero_telephone VARCHAR(255) NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, roles JSON NOT NULL, is_verified BOOLEAN NOT NULL, reset_token VARCHAR(255) DEFAULT NULL, reset_token_expiration TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, type VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:28:53.390807+00:00] doctrine.DEBUG: Executing query:     CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON "user" (email) {"sql":"    CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON \"user\" (email)"} []
[2025-06-27T09:28:53.393186+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-06-27T09:28:53.397868+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name) {"sql":"    CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name)"} []
[2025-06-27T09:28:53.399879+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at) {"sql":"    CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at)"} []
[2025-06-27T09:28:53.401866+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at) {"sql":"    CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at)"} []
[2025-06-27T09:28:53.403745+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-27T09:28:53.404088+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-27T09:28:53.404329+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)'"} []
[2025-06-27T09:28:53.404540+00:00] doctrine.DEBUG: Executing query:     CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$         BEGIN             PERFORM pg_notify('messenger_messages', NEW.queue_name::text);             RETURN NEW;         END;     $$ LANGUAGE plpgsql; {"sql":"    CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$\n        BEGIN\n            PERFORM pg_notify('messenger_messages', NEW.queue_name::text);\n            RETURN NEW;\n        END;\n    $$ LANGUAGE plpgsql;"} []
[2025-06-27T09:28:53.405723+00:00] doctrine.DEBUG: Executing query:     DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages; {"sql":"    DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages;"} []
[2025-06-27T09:28:53.406008+00:00] doctrine.DEBUG: Executing query:     CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages(); {"sql":"    CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages();"} []
[2025-06-27T09:28:53.406540+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F21082EA2E54 FOREIGN KEY (commande_id) REFERENCES "commande" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F21082EA2E54 FOREIGN KEY (commande_id) REFERENCES \"commande\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.407699+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F210F347EFB FOREIGN KEY (produit_id) REFERENCES produit (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE acheter_produit ADD CONSTRAINT FK_A704F210F347EFB FOREIGN KEY (produit_id) REFERENCES produit (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.408600+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE administrateur ADD CONSTRAINT FK_32EB52E8BF396750 FOREIGN KEY (id) REFERENCES "user" (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE administrateur ADD CONSTRAINT FK_32EB52E8BF396750 FOREIGN KEY (id) REFERENCES \"user\" (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.409384+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF3243BB18 FOREIGN KEY (hotel_id) REFERENCES hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF3243BB18 FOREIGN KEY (hotel_id) REFERENCES hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.410291+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF589AE8D9 FOREIGN KEY (format_chambre_id) REFERENCES format_chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE chambre ADD CONSTRAINT FK_C509E4FF589AE8D9 FOREIGN KEY (format_chambre_id) REFERENCES format_chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.411068+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE client ADD CONSTRAINT FK_C7440455BF396750 FOREIGN KEY (id) REFERENCES "user" (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE client ADD CONSTRAINT FK_C7440455BF396750 FOREIGN KEY (id) REFERENCES \"user\" (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.411782+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE dinosaure ADD CONSTRAINT FK_450ADBC0B1C0859 FOREIGN KEY (enclos_id) REFERENCES enclos (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE dinosaure ADD CONSTRAINT FK_450ADBC0B1C0859 FOREIGN KEY (enclos_id) REFERENCES enclos (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.412735+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE enclos ADD CONSTRAINT FK_8CCECB21E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE enclos ADD CONSTRAINT FK_8CCECB21E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.413727+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE hotel ADD CONSTRAINT FK_3535ED9E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE hotel ADD CONSTRAINT FK_3535ED9E43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.414426+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FA76ED395 FOREIGN KEY (user_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FA76ED395 FOREIGN KEY (user_id) REFERENCES \"user\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.415537+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104F9B177F54 FOREIGN KEY (chambre_id) REFERENCES chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104F9B177F54 FOREIGN KEY (chambre_id) REFERENCES chambre (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.416604+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE louer_hotel ADD CONSTRAINT FK_70C4104FB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.417688+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193B1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193B1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.418994+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193220C6AD0 FOREIGN KEY (jour_id) REFERENCES jour (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD193220C6AD0 FOREIGN KEY (jour_id) REFERENCES jour (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.420119+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD19358C54515 FOREIGN KEY (horaire_id) REFERENCES horaire (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE ouverture_restaurant ADD CONSTRAINT FK_697FD19358C54515 FOREIGN KEY (horaire_id) REFERENCES horaire (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.421200+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CA76ED395 FOREIGN KEY (user_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CA76ED395 FOREIGN KEY (user_id) REFERENCES \"user\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.422112+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803C44973C78 FOREIGN KEY (billet_id) REFERENCES format_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803C44973C78 FOREIGN KEY (billet_id) REFERENCES format_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.422877+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE payer_billet ADD CONSTRAINT FK_4744803CB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.423533+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF19EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF19EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.424350+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF44973C78 FOREIGN KEY (billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement ADD CONSTRAINT FK_C0C0D9EF44973C78 FOREIGN KEY (billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.425069+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1F61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1F61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.425808+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1102C441 FOREIGN KEY (payer_billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_billet ADD CONSTRAINT FK_B9B130B1102C441 FOREIGN KEY (payer_billet_id) REFERENCES payer_billet (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.426409+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CF61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CF61EE8B FOREIGN KEY (remboursement_id) REFERENCES remboursement (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.427078+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CCB4C1B45 FOREIGN KEY (louer_hotel_id) REFERENCES louer_hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE remboursement_hotel ADD CONSTRAINT FK_D7E7E7CCB4C1B45 FOREIGN KEY (louer_hotel_id) REFERENCES louer_hotel (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.427882+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43A19EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43A19EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.428909+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB1E7706E FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.429703+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE reserver_restaurant ADD CONSTRAINT FK_25F6B43AB897366B FOREIGN KEY (date_id) REFERENCES date (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.430680+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE restaurant ADD CONSTRAINT FK_EB95123FE43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE restaurant ADD CONSTRAINT FK_EB95123FE43A64F9 FOREIGN KEY (biome_id) REFERENCES biome (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-06-27T09:28:53.432009+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250627092846","2":"2025-06-27 09:28:53","3":194}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250627092846","2":"2025-06-27 09:28:53","3":194},"types":{"1":2,"2":2,"3":1}} []
[2025-06-27T09:28:53.432883+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-06-27T09:28:53.445580+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-27T09:28:53.445923+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-06-27T09:28:53.446015+00:00] doctrine.INFO: Disconnecting [] []
[2025-06-27T09:28:59.519911+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://127.0.0.1/","method":"GET"} []
[2025-06-27T09:28:59.528796+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-06-27T09:28:59.528880+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-27T09:28:59.528914+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-06-27T09:28:59.528940+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-27T09:28:59.528963+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-06-27T09:28:59.528981+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-27T09:28:59.529008+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-06-27T09:28:59.557685+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-06-27T09:28:59.565867+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-06-27T09:28:59.579345+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-06-27T09:28:59.591147+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-06-27T09:28:59.679916+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-06-27T09:28:59.724488+00:00] doctrine.INFO: Disconnecting [] []
[2025-07-10T10:55:55.862422+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://localhost/","method":"GET"} []
[2025-07-10T10:55:55.889894+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-07-10T10:55:55.889965+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-07-10T10:55:55.889994+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-07-10T10:55:55.890016+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-07-10T10:55:55.890057+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-07-10T10:55:55.890089+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-07-10T10:55:55.890130+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-07-10T10:55:55.950839+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-07-10T10:55:55.972541+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-07-10T10:55:55.993985+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-07-10T10:55:56.006928+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-07-10T10:55:56.043573+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-07-10T10:55:56.099744+00:00] doctrine.INFO: Disconnecting [] []
[2025-09-03T07:00:48.627831+00:00] request.INFO: Matched route "user_home". {"route":"user_home","route_parameters":{"_route":"user_home","_controller":"App\\Controller\\UserController::home"},"request_uri":"http://localhost/","method":"GET"} []
[2025-09-03T07:00:48.665997+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":3} []
[2025-09-03T07:00:48.666093+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-09-03T07:00:48.666141+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2025-09-03T07:00:48.666185+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-09-03T07:00:48.666221+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator"} []
[2025-09-03T07:00:48.666251+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-09-03T07:00:48.666308+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"main","authenticator":"Symfony\\Component\\Security\\Http\\Authenticator\\RememberMeAuthenticator"} []
[2025-09-03T07:00:48.757355+00:00] deprecation.INFO: User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY results in SERIAL, which is not recommended. Instead, configure identifier generation strategies explicitly through configuration. We currently recommend "SEQUENCE" for "Doctrine\DBAL\Platforms\PostgreSQLPlatform", when using DBAL 3, and "IDENTITY" when using DBAL 4, so you should probably use the following configuration before upgrading to DBAL 4, and remove it after deploying that upgrade:  $configuration->setIdentityGenerationPreferences([     "Doctrine\DBAL\Platforms\PostgreSQLPlatform" => ClassMetadata::GENERATOR_TYPE_SEQUENCE, ]);  (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Relying on non-optimal defaults for ID generation is deprecated, and IDENTITY\nresults in SERIAL, which is not recommended.\nInstead, configure identifier generation strategies explicitly through\nconfiguration.\nWe currently recommend \"SEQUENCE\" for \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\", when using DBAL 3,\nand \"IDENTITY\" when using DBAL 4,\nso you should probably use the following configuration before upgrading to DBAL 4,\nand remove it after deploying that upgrade:\n\n$configuration->setIdentityGenerationPreferences([\n    \"Doctrine\\DBAL\\Platforms\\PostgreSQLPlatform\" => ClassMetadata::GENERATOR_TYPE_SEQUENCE,\n]);\n (ClassMetadataFactory.php:635 called by ClassMetadataFactory.php:546, https://github.com/doctrine/orm/issues/8893, package doctrine/orm) at /var/www/html/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-09-03T07:00:48.783929+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"db","port":5432,"user":"enaxl","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ma_base","serverVersion":"15","charset":"utf8"}} []
[2025-09-03T07:00:48.813282+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_hotel AS libelle_hotel_2, t0.image_hotel AS image_hotel_3, t0.description_hotel AS description_hotel_4, t0.biome_id AS biome_id_5 FROM hotel t0"} []
[2025-09-03T07:00:48.835208+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0 {"sql":"SELECT t0.id AS id_1, t0.libelle_restaurant AS libelle_restaurant_2, t0.image_restaurant AS image_restaurant_3, t0.nb_table AS nb_table_4, t0.biome_id AS biome_id_5 FROM restaurant t0"} []
[2025-09-03T07:00:48.886205+00:00] deprecation.INFO: User Deprecated: Method "Symfony\Component\Security\Core\User\UserInterface::eraseCredentials()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Method \"Symfony\\Component\\Security\\Core\\User\\UserInterface::eraseCredentials()\" might add \"void\" as a native return type declaration in the future. Do the same in implementation \"App\\Entity\\User\" now to avoid errors or add an explicit @return annotation to suppress this message. at /var/www/html/vendor/symfony/error-handler/DebugClassLoader.php:341)"} []
[2025-09-03T07:00:48.988551+00:00] doctrine.INFO: Disconnecting [] []
